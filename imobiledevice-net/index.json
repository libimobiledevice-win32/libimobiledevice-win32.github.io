{
  "api/iMobileDevice.Restore.RestoreException.html": {
    "href": "api/iMobileDevice.Restore.RestoreException.html",
    "title": "Class RestoreException | imobiledevice-net API",
    "keywords": "Class RestoreException Inheritance System.Object System.Exception RestoreException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.Restore Assembly : iMobileDevice-net.dll Syntax [Serializable] public class RestoreException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source RestoreException() Initializes a new instance of the RestoreException class. Declaration public RestoreException() | Improve this Doc View Source RestoreException(RestoreError) Declaration public RestoreException(RestoreError error) Parameters Type Name Description RestoreError error | Improve this Doc View Source RestoreException(RestoreError, String) Declaration public RestoreException(RestoreError error, string message) Parameters Type Name Description RestoreError error System.String message | Improve this Doc View Source RestoreException(SerializationInfo, StreamingContext) Initializes a new instance of the RestoreException class with serialized data. Declaration protected RestoreException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source RestoreException(String) Initializes a new instance of the RestoreException class with a specified error message. Declaration public RestoreException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source RestoreException(String, Exception) Initializes a new instance of the RestoreException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public RestoreException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual RestoreError ErrorCode { get; } Property Value Type Description RestoreError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.Restore.RestoreErrorExtensions.html": {
    "href": "api/iMobileDevice.Restore.RestoreErrorExtensions.html",
    "title": "Class RestoreErrorExtensions | imobiledevice-net API",
    "keywords": "Class RestoreErrorExtensions Inheritance System.Object RestoreErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Restore Assembly : iMobileDevice-net.dll Syntax public static class RestoreErrorExtensions Methods | Improve this Doc View Source IsError(RestoreError) Declaration public static bool IsError(this RestoreError value) Parameters Type Name Description RestoreError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(RestoreError) Declaration public static void ThrowOnError(this RestoreError value) Parameters Type Name Description RestoreError value | Improve this Doc View Source ThrowOnError(RestoreError, String) Declaration public static void ThrowOnError(this RestoreError value, string message) Parameters Type Name Description RestoreError value System.String message"
  },
  "api/iMobileDevice.Restore.RestoreError.html": {
    "href": "api/iMobileDevice.Restore.RestoreError.html",
    "title": "Enum RestoreError | imobiledevice-net API",
    "keywords": "Enum RestoreError Error Codes Namespace : iMobileDevice.Restore Assembly : iMobileDevice-net.dll Syntax public enum RestoreError Fields Name Description DeviceError DictError InvalidArg InvalidConf MuxError NotEnoughData PlistError StartRestoreFailed Success UnknownError Extension Methods RestoreErrorExtensions.ThrowOnError() RestoreErrorExtensions.ThrowOnError(String) RestoreErrorExtensions.IsError()"
  },
  "api/iMobileDevice.Plist.PlistApi.html": {
    "href": "api/iMobileDevice.Plist.PlistApi.html",
    "title": "Class PlistApi | imobiledevice-net API",
    "keywords": "Class PlistApi Inheritance System.Object PlistApi Implements IPlistApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Plist Assembly : iMobileDevice-net.dll Syntax public class PlistApi : IPlistApi Constructors | Improve this Doc View Source PlistApi(ILibiMobileDevice) Declaration public PlistApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source plist_access_path(PlistHandle, UInt32) Get a node from its path. Each path element depends on the associated father node type. For Dictionaries, var args are casted to const char*, for arrays, var args are caster to uint32_t Search is breath first order. Declaration public virtual PlistHandle plist_access_path(PlistHandle plist, uint length) Parameters Type Name Description PlistHandle plist the node to access result from. System.UInt32 length length of the path to access Returns Type Description PlistHandle the value to access. | Improve this Doc View Source plist_access_pathv(PlistHandle, UInt32, IntPtr) Variadic version of #plist_access_path. Declaration public virtual PlistHandle plist_access_pathv(PlistHandle plist, uint length, IntPtr v) Parameters Type Name Description PlistHandle plist the node to access result from. System.UInt32 length length of the path to access System.IntPtr v list of array's index and dic'st key Returns Type Description PlistHandle the value to access. | Improve this Doc View Source plist_array_append_item(PlistHandle, PlistHandle) Append a new item at the end of a #PLIST_ARRAY node. Declaration public virtual void plist_array_append_item(PlistHandle node, PlistHandle item) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY PlistHandle item the new item. The array is responsible for freeing item when it is no longer needed. | Improve this Doc View Source plist_array_get_item(PlistHandle, UInt32) Get the nth item in a #PLIST_ARRAY node. Declaration public virtual PlistHandle plist_array_get_item(PlistHandle node, uint n) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY System.UInt32 n the index of the item to get. Range is [0, array_size[ Returns Type Description PlistHandle the nth item or NULL if node is not of type #PLIST_ARRAY | Improve this Doc View Source plist_array_get_item_index(PlistHandle) Get the index of an item. item must be a member of a #PLIST_ARRAY node. Declaration public virtual uint plist_array_get_item_index(PlistHandle node) Parameters Type Name Description PlistHandle node the node Returns Type Description System.UInt32 the node index | Improve this Doc View Source plist_array_get_size(PlistHandle) Get size of a #PLIST_ARRAY node. Declaration public virtual uint plist_array_get_size(PlistHandle node) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY Returns Type Description System.UInt32 size of the #PLIST_ARRAY node | Improve this Doc View Source plist_array_insert_item(PlistHandle, PlistHandle, UInt32) Insert a new item at position n in a #PLIST_ARRAY node. Declaration public virtual void plist_array_insert_item(PlistHandle node, PlistHandle item, uint n) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY PlistHandle item the new item to insert. The array is responsible for freeing item when it is no longer needed. System.UInt32 n The position at which the node will be stored. Range is [0, array_size[. Assert if n is not in range. | Improve this Doc View Source plist_array_remove_item(PlistHandle, UInt32) Remove an existing position in a #PLIST_ARRAY node. Removed position will be freed using #plist_free. Declaration public virtual void plist_array_remove_item(PlistHandle node, uint n) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY System.UInt32 n The position to remove. Range is [0, array_size[. Assert if n is not in range. | Improve this Doc View Source plist_array_set_item(PlistHandle, PlistHandle, UInt32) Set the nth item in a #PLIST_ARRAY node. The previous item at index n will be freed using #plist_free Declaration public virtual void plist_array_set_item(PlistHandle node, PlistHandle item, uint n) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY PlistHandle item the new item at index n. The array is responsible for freeing item when it is no longer needed. System.UInt32 n the index of the item to get. Range is [0, array_size[. Assert if n is not in range. | Improve this Doc View Source plist_compare_node_value(PlistHandle, PlistHandle) Compare two node values Declaration public virtual sbyte plist_compare_node_value(PlistHandle nodeL, PlistHandle nodeR) Parameters Type Name Description PlistHandle nodeL PlistHandle nodeR Returns Type Description System.SByte TRUE is type and value match, FALSE otherwise. | Improve this Doc View Source plist_copy(PlistHandle) Return a copy of passed node and it's children Declaration public virtual PlistHandle plist_copy(PlistHandle node) Parameters Type Name Description PlistHandle node the plist to copy Returns Type Description PlistHandle copied plist | Improve this Doc View Source plist_dict_get_item(PlistHandle, String) Get the nth item in a #PLIST_DICT node. Declaration public virtual PlistHandle plist_dict_get_item(PlistHandle node, string key) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT System.String key the identifier of the item to get. Returns Type Description PlistHandle the item or NULL if node is not of type #PLIST_DICT. The caller should not free the returned node. | Improve this Doc View Source plist_dict_get_item_key(PlistHandle, out String) Get key associated to an item. Item must be member of a dictionary Declaration public virtual void plist_dict_get_item_key(PlistHandle node, out string key) Parameters Type Name Description PlistHandle node the node System.String key a location to store the key. The caller is responsible for freeing the returned string. | Improve this Doc View Source plist_dict_get_size(PlistHandle) Get size of a #PLIST_DICT node. Declaration public virtual uint plist_dict_get_size(PlistHandle node) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT Returns Type Description System.UInt32 size of the #PLIST_DICT node | Improve this Doc View Source plist_dict_insert_item(PlistHandle, String, PlistHandle) Insert a new item into a #PLIST_DICT node. Declaration public virtual void plist_dict_insert_item(PlistHandle node, string key, PlistHandle item) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT System.String key The identifier of the item to insert. PlistHandle item the new item to insert | Improve this Doc View Source plist_dict_merge(out PlistHandle, PlistHandle) Merge a dictionary into another. This will add all key/value pairs from the source dictionary to the target dictionary, overwriting any existing key/value pairs that are already present in target. Declaration public virtual void plist_dict_merge(out PlistHandle target, PlistHandle source) Parameters Type Name Description PlistHandle target pointer to an existing node of type #PLIST_DICT PlistHandle source node of type #PLIST_DICT that should be merged into target | Improve this Doc View Source plist_dict_new_iter(PlistHandle, out PlistDictIterHandle) Create an iterator of a #PLIST_DICT node. The allocated iterator should be freed with the standard free function. Declaration public virtual void plist_dict_new_iter(PlistHandle node, out PlistDictIterHandle iter) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT PlistDictIterHandle iter iterator of the #PLIST_DICT node | Improve this Doc View Source plist_dict_next_item(PlistHandle, PlistDictIterHandle, out String, out PlistHandle) Increment iterator of a #PLIST_DICT node. Declaration public virtual void plist_dict_next_item(PlistHandle node, PlistDictIterHandle iter, out string key, out PlistHandle val) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT PlistDictIterHandle iter iterator of the dictionary System.String key a location to store the key, or NULL. The caller is responsible for freeing the the returned string. PlistHandle val a location to store the value, or NULL. The caller should not free the returned value. | Improve this Doc View Source plist_dict_remove_item(PlistHandle, String) Remove an existing position in a #PLIST_DICT node. Removed position will be freed using #plist_free Declaration public virtual void plist_dict_remove_item(PlistHandle node, string key) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT System.String key The identifier of the item to remove. Assert if identifier is not present. | Improve this Doc View Source plist_dict_set_item(PlistHandle, String, PlistHandle) Set item identified by key in a #PLIST_DICT node. The previous item identified by key will be freed using #plist_free. If there is no item for the given key a new item will be inserted. Declaration public virtual void plist_dict_set_item(PlistHandle node, string key, PlistHandle item) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT System.String key the identifier of the item to set. PlistHandle item the new item associated to key | Improve this Doc View Source plist_free(IntPtr) Destruct a plist_t node and all its children recursively Declaration public virtual void plist_free(IntPtr plist) Parameters Type Name Description System.IntPtr plist the plist to free | Improve this Doc View Source plist_from_bin(String, UInt32, out PlistHandle) Import the #plist_t structure from binary format. Declaration public virtual void plist_from_bin(string plistBin, uint length, out PlistHandle plist) Parameters Type Name Description System.String plistBin System.UInt32 length length of the buffer to read. PlistHandle plist a pointer to the imported plist. | Improve this Doc View Source plist_from_memory(String, UInt32, out PlistHandle) Import the #plist_t structure from memory data. This method will look at the first bytes of plist_data to determine if plist_data contains a binary or XML plist. Declaration public virtual void plist_from_memory(string plistData, uint length, out PlistHandle plist) Parameters Type Name Description System.String plistData System.UInt32 length length of the buffer to read. PlistHandle plist a pointer to the imported plist. | Improve this Doc View Source plist_from_xml(String, UInt32, out PlistHandle) Import the #plist_t structure from XML format. Declaration public virtual void plist_from_xml(string plistXml, uint length, out PlistHandle plist) Parameters Type Name Description System.String plistXml System.UInt32 length length of the buffer to read. PlistHandle plist a pointer to the imported plist. | Improve this Doc View Source plist_get_bool_val(PlistHandle, ref Char) Get the value of a #PLIST_BOOLEAN node. This function does nothing if node is not of type #PLIST_BOOLEAN Declaration public virtual void plist_get_bool_val(PlistHandle node, ref char val) Parameters Type Name Description PlistHandle node the node System.Char val a pointer to a uint8_t variable. | Improve this Doc View Source plist_get_data_val(PlistHandle, out String, ref UInt64) Get the value of a #PLIST_DATA node. This function does nothing if node is not of type #PLIST_DATA Declaration public virtual void plist_get_data_val(PlistHandle node, out string val, ref ulong length) Parameters Type Name Description PlistHandle node the node System.String val a pointer to an unallocated char buffer. This function allocates the memory, caller is responsible for freeing it. System.UInt64 length the length of the buffer | Improve this Doc View Source plist_get_date_val(PlistHandle, ref Int32, ref Int32) Get the value of a #PLIST_DATE node. This function does nothing if node is not of type #PLIST_DATE Declaration public virtual void plist_get_date_val(PlistHandle node, ref int sec, ref int usec) Parameters Type Name Description PlistHandle node the node System.Int32 sec a pointer to an int32_t variable. Represents the number of seconds since 01/01/2001. System.Int32 usec a pointer to an int32_t variable. Represents the number of microseconds | Improve this Doc View Source plist_get_key_val(PlistHandle, out String) Get the value of a #PLIST_KEY node. This function does nothing if node is not of type #PLIST_KEY Declaration public virtual void plist_get_key_val(PlistHandle node, out string val) Parameters Type Name Description PlistHandle node the node System.String val a pointer to a C-string. This function allocates the memory, caller is responsible for freeing it. | Improve this Doc View Source plist_get_node_type(PlistHandle) Get the #plist_type of a node. Declaration public virtual PlistType plist_get_node_type(PlistHandle node) Parameters Type Name Description PlistHandle node the node Returns Type Description PlistType the type of the node | Improve this Doc View Source plist_get_parent(PlistHandle) Get the parent of a node Declaration public virtual PlistHandle plist_get_parent(PlistHandle node) Parameters Type Name Description PlistHandle node the parent (NULL if node is root) Returns Type Description PlistHandle | Improve this Doc View Source plist_get_real_val(PlistHandle, ref Double) Get the value of a #PLIST_REAL node. This function does nothing if node is not of type #PLIST_REAL Declaration public virtual void plist_get_real_val(PlistHandle node, ref double val) Parameters Type Name Description PlistHandle node the node System.Double val a pointer to a double variable. | Improve this Doc View Source plist_get_string_val(PlistHandle, out String) Get the value of a #PLIST_STRING node. This function does nothing if node is not of type #PLIST_STRING Declaration public virtual void plist_get_string_val(PlistHandle node, out string val) Parameters Type Name Description PlistHandle node the node System.String val a pointer to a C-string. This function allocates the memory, caller is responsible for freeing it. Data is UTF-8 encoded. | Improve this Doc View Source plist_get_uid_val(PlistHandle, ref UInt64) Get the value of a #PLIST_UID node. This function does nothing if node is not of type #PLIST_UID Declaration public virtual void plist_get_uid_val(PlistHandle node, ref ulong val) Parameters Type Name Description PlistHandle node the node System.UInt64 val a pointer to a uint64_t variable. | Improve this Doc View Source plist_get_uint_val(PlistHandle, ref UInt64) Get the value of a #PLIST_UINT node. This function does nothing if node is not of type #PLIST_UINT Declaration public virtual void plist_get_uint_val(PlistHandle node, ref ulong val) Parameters Type Name Description PlistHandle node the node System.UInt64 val a pointer to a uint64_t variable. | Improve this Doc View Source plist_is_binary(String, UInt32) Test if in-memory plist data is binary or XML This method will look at the first bytes of plist_data to determine if plist_data contains a binary or XML plist. This method is not validating the whole memory buffer to check if the content is truly a plist, it's only using some heuristic on the first few bytes of plist_data. Declaration public virtual int plist_is_binary(string plistData, uint length) Parameters Type Name Description System.String plistData System.UInt32 length length of the buffer to read. Returns Type Description System.Int32 1 if the buffer is a binary plist, 0 otherwise. | Improve this Doc View Source plist_new_array() Create a new root plist_t type #PLIST_ARRAY Declaration public virtual PlistHandle plist_new_array() Returns Type Description PlistHandle the created plist | Improve this Doc View Source plist_new_bool(Char) Create a new plist_t type #PLIST_BOOLEAN Declaration public virtual PlistHandle plist_new_bool(char val) Parameters Type Name Description System.Char val the boolean value, 0 is false, other values are true. Returns Type Description PlistHandle the created item | Improve this Doc View Source plist_new_data(String, UInt64) Create a new plist_t type #PLIST_DATA Declaration public virtual PlistHandle plist_new_data(string val, ulong length) Parameters Type Name Description System.String val the binary buffer System.UInt64 length the length of the buffer Returns Type Description PlistHandle the created item | Improve this Doc View Source plist_new_date(Int32, Int32) Create a new plist_t type #PLIST_DATE Declaration public virtual PlistHandle plist_new_date(int sec, int usec) Parameters Type Name Description System.Int32 sec the number of seconds since 01/01/2001 System.Int32 usec the number of microseconds Returns Type Description PlistHandle the created item | Improve this Doc View Source plist_new_dict() Create a new root plist_t type #PLIST_DICT Declaration public virtual PlistHandle plist_new_dict() Returns Type Description PlistHandle the created plist | Improve this Doc View Source plist_new_real(Double) Create a new plist_t type #PLIST_REAL Declaration public virtual PlistHandle plist_new_real(double val) Parameters Type Name Description System.Double val the real value Returns Type Description PlistHandle the created item | Improve this Doc View Source plist_new_string(String) Create a new plist_t type #PLIST_STRING Declaration public virtual PlistHandle plist_new_string(string val) Parameters Type Name Description System.String val the sting value, encoded in UTF8. Returns Type Description PlistHandle the created item | Improve this Doc View Source plist_new_uid(UInt64) Create a new plist_t type #PLIST_UID Declaration public virtual PlistHandle plist_new_uid(ulong val) Parameters Type Name Description System.UInt64 val the unsigned integer value Returns Type Description PlistHandle the created item | Improve this Doc View Source plist_new_uint(UInt64) Create a new plist_t type #PLIST_UINT Declaration public virtual PlistHandle plist_new_uint(ulong val) Parameters Type Name Description System.UInt64 val the unsigned integer value Returns Type Description PlistHandle the created item | Improve this Doc View Source plist_set_bool_val(PlistHandle, Char) Set the value of a node. Forces type of node to #PLIST_BOOLEAN Declaration public virtual void plist_set_bool_val(PlistHandle node, char val) Parameters Type Name Description PlistHandle node the node System.Char val the boolean value | Improve this Doc View Source plist_set_data_val(PlistHandle, String, UInt64) Set the value of a node. Forces type of node to #PLIST_DATA Declaration public virtual void plist_set_data_val(PlistHandle node, string val, ulong length) Parameters Type Name Description PlistHandle node the node System.String val the binary buffer. The buffer is copied when set and will be freed by the node. System.UInt64 length the length of the buffer | Improve this Doc View Source plist_set_date_val(PlistHandle, Int32, Int32) Set the value of a node. Forces type of node to #PLIST_DATE Declaration public virtual void plist_set_date_val(PlistHandle node, int sec, int usec) Parameters Type Name Description PlistHandle node the node System.Int32 sec the number of seconds since 01/01/2001 System.Int32 usec the number of microseconds | Improve this Doc View Source plist_set_key_val(PlistHandle, String) Set the value of a node. Forces type of node to #PLIST_KEY Declaration public virtual void plist_set_key_val(PlistHandle node, string val) Parameters Type Name Description PlistHandle node the node System.String val the key value | Improve this Doc View Source plist_set_real_val(PlistHandle, Double) Set the value of a node. Forces type of node to #PLIST_REAL Declaration public virtual void plist_set_real_val(PlistHandle node, double val) Parameters Type Name Description PlistHandle node the node System.Double val the real value | Improve this Doc View Source plist_set_string_val(PlistHandle, String) Set the value of a node. Forces type of node to #PLIST_STRING Declaration public virtual void plist_set_string_val(PlistHandle node, string val) Parameters Type Name Description PlistHandle node the node System.String val the string value. The string is copied when set and will be freed by the node. | Improve this Doc View Source plist_set_uid_val(PlistHandle, UInt64) Set the value of a node. Forces type of node to #PLIST_UID Declaration public virtual void plist_set_uid_val(PlistHandle node, ulong val) Parameters Type Name Description PlistHandle node the node System.UInt64 val the unsigned integer value | Improve this Doc View Source plist_set_uint_val(PlistHandle, UInt64) Set the value of a node. Forces type of node to #PLIST_UINT Declaration public virtual void plist_set_uint_val(PlistHandle node, ulong val) Parameters Type Name Description PlistHandle node the node System.UInt64 val the unsigned integer value | Improve this Doc View Source plist_to_bin(PlistHandle, out String, ref UInt32) Export the #plist_t structure to binary format. Declaration public virtual void plist_to_bin(PlistHandle plist, out string plistBin, ref uint length) Parameters Type Name Description PlistHandle plist the root node to export System.String plistBin System.UInt32 length a pointer to an uint32_t variable. Represents the length of the allocated buffer. | Improve this Doc View Source plist_to_bin_free(IntPtr) Frees the memory allocated by plist_to_bin Declaration public virtual void plist_to_bin_free(IntPtr plistBin) Parameters Type Name Description System.IntPtr plistBin | Improve this Doc View Source plist_to_xml(PlistHandle, out String, ref UInt32) Export the #plist_t structure to XML format. Declaration public virtual void plist_to_xml(PlistHandle plist, out string plistXml, ref uint length) Parameters Type Name Description PlistHandle plist the root node to export System.String plistXml System.UInt32 length a pointer to an uint32_t variable. Represents the length of the allocated buffer. | Improve this Doc View Source plist_to_xml_free(IntPtr) Frees the memory allocated by plist_to_xml Declaration public virtual void plist_to_xml_free(IntPtr plistXml) Parameters Type Name Description System.IntPtr plistXml Implements IPlistApi"
  },
  "api/iMobileDevice.Plist.IPlistApi.html": {
    "href": "api/iMobileDevice.Plist.IPlistApi.html",
    "title": "Interface IPlistApi | imobiledevice-net API",
    "keywords": "Interface IPlistApi Namespace : iMobileDevice.Plist Assembly : iMobileDevice-net.dll Syntax public interface IPlistApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.Plist . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source plist_access_path(PlistHandle, UInt32) Get a node from its path. Each path element depends on the associated father node type. For Dictionaries, var args are casted to const char*, for arrays, var args are caster to uint32_t Search is breath first order. Declaration PlistHandle plist_access_path(PlistHandle plist, uint length) Parameters Type Name Description PlistHandle plist the node to access result from. System.UInt32 length length of the path to access Returns Type Description PlistHandle the value to access. | Improve this Doc View Source plist_access_pathv(PlistHandle, UInt32, IntPtr) Variadic version of #plist_access_path. Declaration PlistHandle plist_access_pathv(PlistHandle plist, uint length, IntPtr v) Parameters Type Name Description PlistHandle plist the node to access result from. System.UInt32 length length of the path to access System.IntPtr v list of array's index and dic'st key Returns Type Description PlistHandle the value to access. | Improve this Doc View Source plist_array_append_item(PlistHandle, PlistHandle) Append a new item at the end of a #PLIST_ARRAY node. Declaration void plist_array_append_item(PlistHandle node, PlistHandle item) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY PlistHandle item the new item. The array is responsible for freeing item when it is no longer needed. | Improve this Doc View Source plist_array_get_item(PlistHandle, UInt32) Get the nth item in a #PLIST_ARRAY node. Declaration PlistHandle plist_array_get_item(PlistHandle node, uint n) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY System.UInt32 n the index of the item to get. Range is [0, array_size[ Returns Type Description PlistHandle the nth item or NULL if node is not of type #PLIST_ARRAY | Improve this Doc View Source plist_array_get_item_index(PlistHandle) Get the index of an item. item must be a member of a #PLIST_ARRAY node. Declaration uint plist_array_get_item_index(PlistHandle node) Parameters Type Name Description PlistHandle node the node Returns Type Description System.UInt32 the node index | Improve this Doc View Source plist_array_get_size(PlistHandle) Get size of a #PLIST_ARRAY node. Declaration uint plist_array_get_size(PlistHandle node) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY Returns Type Description System.UInt32 size of the #PLIST_ARRAY node | Improve this Doc View Source plist_array_insert_item(PlistHandle, PlistHandle, UInt32) Insert a new item at position n in a #PLIST_ARRAY node. Declaration void plist_array_insert_item(PlistHandle node, PlistHandle item, uint n) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY PlistHandle item the new item to insert. The array is responsible for freeing item when it is no longer needed. System.UInt32 n The position at which the node will be stored. Range is [0, array_size[. Assert if n is not in range. | Improve this Doc View Source plist_array_remove_item(PlistHandle, UInt32) Remove an existing position in a #PLIST_ARRAY node. Removed position will be freed using #plist_free. Declaration void plist_array_remove_item(PlistHandle node, uint n) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY System.UInt32 n The position to remove. Range is [0, array_size[. Assert if n is not in range. | Improve this Doc View Source plist_array_set_item(PlistHandle, PlistHandle, UInt32) Set the nth item in a #PLIST_ARRAY node. The previous item at index n will be freed using #plist_free Declaration void plist_array_set_item(PlistHandle node, PlistHandle item, uint n) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY PlistHandle item the new item at index n. The array is responsible for freeing item when it is no longer needed. System.UInt32 n the index of the item to get. Range is [0, array_size[. Assert if n is not in range. | Improve this Doc View Source plist_compare_node_value(PlistHandle, PlistHandle) Compare two node values Declaration sbyte plist_compare_node_value(PlistHandle nodeL, PlistHandle nodeR) Parameters Type Name Description PlistHandle nodeL PlistHandle nodeR Returns Type Description System.SByte TRUE is type and value match, FALSE otherwise. | Improve this Doc View Source plist_copy(PlistHandle) Return a copy of passed node and it's children Declaration PlistHandle plist_copy(PlistHandle node) Parameters Type Name Description PlistHandle node the plist to copy Returns Type Description PlistHandle copied plist | Improve this Doc View Source plist_dict_get_item(PlistHandle, String) Get the nth item in a #PLIST_DICT node. Declaration PlistHandle plist_dict_get_item(PlistHandle node, string key) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT System.String key the identifier of the item to get. Returns Type Description PlistHandle the item or NULL if node is not of type #PLIST_DICT. The caller should not free the returned node. | Improve this Doc View Source plist_dict_get_item_key(PlistHandle, out String) Get key associated to an item. Item must be member of a dictionary Declaration void plist_dict_get_item_key(PlistHandle node, out string key) Parameters Type Name Description PlistHandle node the node System.String key a location to store the key. The caller is responsible for freeing the returned string. | Improve this Doc View Source plist_dict_get_size(PlistHandle) Get size of a #PLIST_DICT node. Declaration uint plist_dict_get_size(PlistHandle node) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT Returns Type Description System.UInt32 size of the #PLIST_DICT node | Improve this Doc View Source plist_dict_insert_item(PlistHandle, String, PlistHandle) Insert a new item into a #PLIST_DICT node. Declaration void plist_dict_insert_item(PlistHandle node, string key, PlistHandle item) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT System.String key The identifier of the item to insert. PlistHandle item the new item to insert | Improve this Doc View Source plist_dict_merge(out PlistHandle, PlistHandle) Merge a dictionary into another. This will add all key/value pairs from the source dictionary to the target dictionary, overwriting any existing key/value pairs that are already present in target. Declaration void plist_dict_merge(out PlistHandle target, PlistHandle source) Parameters Type Name Description PlistHandle target pointer to an existing node of type #PLIST_DICT PlistHandle source node of type #PLIST_DICT that should be merged into target | Improve this Doc View Source plist_dict_new_iter(PlistHandle, out PlistDictIterHandle) Create an iterator of a #PLIST_DICT node. The allocated iterator should be freed with the standard free function. Declaration void plist_dict_new_iter(PlistHandle node, out PlistDictIterHandle iter) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT PlistDictIterHandle iter iterator of the #PLIST_DICT node | Improve this Doc View Source plist_dict_next_item(PlistHandle, PlistDictIterHandle, out String, out PlistHandle) Increment iterator of a #PLIST_DICT node. Declaration void plist_dict_next_item(PlistHandle node, PlistDictIterHandle iter, out string key, out PlistHandle val) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT PlistDictIterHandle iter iterator of the dictionary System.String key a location to store the key, or NULL. The caller is responsible for freeing the the returned string. PlistHandle val a location to store the value, or NULL. The caller should not free the returned value. | Improve this Doc View Source plist_dict_remove_item(PlistHandle, String) Remove an existing position in a #PLIST_DICT node. Removed position will be freed using #plist_free Declaration void plist_dict_remove_item(PlistHandle node, string key) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT System.String key The identifier of the item to remove. Assert if identifier is not present. | Improve this Doc View Source plist_dict_set_item(PlistHandle, String, PlistHandle) Set item identified by key in a #PLIST_DICT node. The previous item identified by key will be freed using #plist_free. If there is no item for the given key a new item will be inserted. Declaration void plist_dict_set_item(PlistHandle node, string key, PlistHandle item) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT System.String key the identifier of the item to set. PlistHandle item the new item associated to key | Improve this Doc View Source plist_free(IntPtr) Destruct a plist_t node and all its children recursively Declaration void plist_free(IntPtr plist) Parameters Type Name Description System.IntPtr plist the plist to free | Improve this Doc View Source plist_from_bin(String, UInt32, out PlistHandle) Import the #plist_t structure from binary format. Declaration void plist_from_bin(string plistBin, uint length, out PlistHandle plist) Parameters Type Name Description System.String plistBin System.UInt32 length length of the buffer to read. PlistHandle plist a pointer to the imported plist. | Improve this Doc View Source plist_from_memory(String, UInt32, out PlistHandle) Import the #plist_t structure from memory data. This method will look at the first bytes of plist_data to determine if plist_data contains a binary or XML plist. Declaration void plist_from_memory(string plistData, uint length, out PlistHandle plist) Parameters Type Name Description System.String plistData System.UInt32 length length of the buffer to read. PlistHandle plist a pointer to the imported plist. | Improve this Doc View Source plist_from_xml(String, UInt32, out PlistHandle) Import the #plist_t structure from XML format. Declaration void plist_from_xml(string plistXml, uint length, out PlistHandle plist) Parameters Type Name Description System.String plistXml System.UInt32 length length of the buffer to read. PlistHandle plist a pointer to the imported plist. | Improve this Doc View Source plist_get_bool_val(PlistHandle, ref Char) Get the value of a #PLIST_BOOLEAN node. This function does nothing if node is not of type #PLIST_BOOLEAN Declaration void plist_get_bool_val(PlistHandle node, ref char val) Parameters Type Name Description PlistHandle node the node System.Char val a pointer to a uint8_t variable. | Improve this Doc View Source plist_get_data_val(PlistHandle, out String, ref UInt64) Get the value of a #PLIST_DATA node. This function does nothing if node is not of type #PLIST_DATA Declaration void plist_get_data_val(PlistHandle node, out string val, ref ulong length) Parameters Type Name Description PlistHandle node the node System.String val a pointer to an unallocated char buffer. This function allocates the memory, caller is responsible for freeing it. System.UInt64 length the length of the buffer | Improve this Doc View Source plist_get_date_val(PlistHandle, ref Int32, ref Int32) Get the value of a #PLIST_DATE node. This function does nothing if node is not of type #PLIST_DATE Declaration void plist_get_date_val(PlistHandle node, ref int sec, ref int usec) Parameters Type Name Description PlistHandle node the node System.Int32 sec a pointer to an int32_t variable. Represents the number of seconds since 01/01/2001. System.Int32 usec a pointer to an int32_t variable. Represents the number of microseconds | Improve this Doc View Source plist_get_key_val(PlistHandle, out String) Get the value of a #PLIST_KEY node. This function does nothing if node is not of type #PLIST_KEY Declaration void plist_get_key_val(PlistHandle node, out string val) Parameters Type Name Description PlistHandle node the node System.String val a pointer to a C-string. This function allocates the memory, caller is responsible for freeing it. | Improve this Doc View Source plist_get_node_type(PlistHandle) Get the #plist_type of a node. Declaration PlistType plist_get_node_type(PlistHandle node) Parameters Type Name Description PlistHandle node the node Returns Type Description PlistType the type of the node | Improve this Doc View Source plist_get_parent(PlistHandle) Get the parent of a node Declaration PlistHandle plist_get_parent(PlistHandle node) Parameters Type Name Description PlistHandle node the parent (NULL if node is root) Returns Type Description PlistHandle | Improve this Doc View Source plist_get_real_val(PlistHandle, ref Double) Get the value of a #PLIST_REAL node. This function does nothing if node is not of type #PLIST_REAL Declaration void plist_get_real_val(PlistHandle node, ref double val) Parameters Type Name Description PlistHandle node the node System.Double val a pointer to a double variable. | Improve this Doc View Source plist_get_string_val(PlistHandle, out String) Get the value of a #PLIST_STRING node. This function does nothing if node is not of type #PLIST_STRING Declaration void plist_get_string_val(PlistHandle node, out string val) Parameters Type Name Description PlistHandle node the node System.String val a pointer to a C-string. This function allocates the memory, caller is responsible for freeing it. Data is UTF-8 encoded. | Improve this Doc View Source plist_get_uid_val(PlistHandle, ref UInt64) Get the value of a #PLIST_UID node. This function does nothing if node is not of type #PLIST_UID Declaration void plist_get_uid_val(PlistHandle node, ref ulong val) Parameters Type Name Description PlistHandle node the node System.UInt64 val a pointer to a uint64_t variable. | Improve this Doc View Source plist_get_uint_val(PlistHandle, ref UInt64) Get the value of a #PLIST_UINT node. This function does nothing if node is not of type #PLIST_UINT Declaration void plist_get_uint_val(PlistHandle node, ref ulong val) Parameters Type Name Description PlistHandle node the node System.UInt64 val a pointer to a uint64_t variable. | Improve this Doc View Source plist_is_binary(String, UInt32) Test if in-memory plist data is binary or XML This method will look at the first bytes of plist_data to determine if plist_data contains a binary or XML plist. This method is not validating the whole memory buffer to check if the content is truly a plist, it's only using some heuristic on the first few bytes of plist_data. Declaration int plist_is_binary(string plistData, uint length) Parameters Type Name Description System.String plistData System.UInt32 length length of the buffer to read. Returns Type Description System.Int32 1 if the buffer is a binary plist, 0 otherwise. | Improve this Doc View Source plist_new_array() Create a new root plist_t type #PLIST_ARRAY Declaration PlistHandle plist_new_array() Returns Type Description PlistHandle the created plist | Improve this Doc View Source plist_new_bool(Char) Create a new plist_t type #PLIST_BOOLEAN Declaration PlistHandle plist_new_bool(char val) Parameters Type Name Description System.Char val the boolean value, 0 is false, other values are true. Returns Type Description PlistHandle the created item | Improve this Doc View Source plist_new_data(String, UInt64) Create a new plist_t type #PLIST_DATA Declaration PlistHandle plist_new_data(string val, ulong length) Parameters Type Name Description System.String val the binary buffer System.UInt64 length the length of the buffer Returns Type Description PlistHandle the created item | Improve this Doc View Source plist_new_date(Int32, Int32) Create a new plist_t type #PLIST_DATE Declaration PlistHandle plist_new_date(int sec, int usec) Parameters Type Name Description System.Int32 sec the number of seconds since 01/01/2001 System.Int32 usec the number of microseconds Returns Type Description PlistHandle the created item | Improve this Doc View Source plist_new_dict() Create a new root plist_t type #PLIST_DICT Declaration PlistHandle plist_new_dict() Returns Type Description PlistHandle the created plist | Improve this Doc View Source plist_new_real(Double) Create a new plist_t type #PLIST_REAL Declaration PlistHandle plist_new_real(double val) Parameters Type Name Description System.Double val the real value Returns Type Description PlistHandle the created item | Improve this Doc View Source plist_new_string(String) Create a new plist_t type #PLIST_STRING Declaration PlistHandle plist_new_string(string val) Parameters Type Name Description System.String val the sting value, encoded in UTF8. Returns Type Description PlistHandle the created item | Improve this Doc View Source plist_new_uid(UInt64) Create a new plist_t type #PLIST_UID Declaration PlistHandle plist_new_uid(ulong val) Parameters Type Name Description System.UInt64 val the unsigned integer value Returns Type Description PlistHandle the created item | Improve this Doc View Source plist_new_uint(UInt64) Create a new plist_t type #PLIST_UINT Declaration PlistHandle plist_new_uint(ulong val) Parameters Type Name Description System.UInt64 val the unsigned integer value Returns Type Description PlistHandle the created item | Improve this Doc View Source plist_set_bool_val(PlistHandle, Char) Set the value of a node. Forces type of node to #PLIST_BOOLEAN Declaration void plist_set_bool_val(PlistHandle node, char val) Parameters Type Name Description PlistHandle node the node System.Char val the boolean value | Improve this Doc View Source plist_set_data_val(PlistHandle, String, UInt64) Set the value of a node. Forces type of node to #PLIST_DATA Declaration void plist_set_data_val(PlistHandle node, string val, ulong length) Parameters Type Name Description PlistHandle node the node System.String val the binary buffer. The buffer is copied when set and will be freed by the node. System.UInt64 length the length of the buffer | Improve this Doc View Source plist_set_date_val(PlistHandle, Int32, Int32) Set the value of a node. Forces type of node to #PLIST_DATE Declaration void plist_set_date_val(PlistHandle node, int sec, int usec) Parameters Type Name Description PlistHandle node the node System.Int32 sec the number of seconds since 01/01/2001 System.Int32 usec the number of microseconds | Improve this Doc View Source plist_set_key_val(PlistHandle, String) Set the value of a node. Forces type of node to #PLIST_KEY Declaration void plist_set_key_val(PlistHandle node, string val) Parameters Type Name Description PlistHandle node the node System.String val the key value | Improve this Doc View Source plist_set_real_val(PlistHandle, Double) Set the value of a node. Forces type of node to #PLIST_REAL Declaration void plist_set_real_val(PlistHandle node, double val) Parameters Type Name Description PlistHandle node the node System.Double val the real value | Improve this Doc View Source plist_set_string_val(PlistHandle, String) Set the value of a node. Forces type of node to #PLIST_STRING Declaration void plist_set_string_val(PlistHandle node, string val) Parameters Type Name Description PlistHandle node the node System.String val the string value. The string is copied when set and will be freed by the node. | Improve this Doc View Source plist_set_uid_val(PlistHandle, UInt64) Set the value of a node. Forces type of node to #PLIST_UID Declaration void plist_set_uid_val(PlistHandle node, ulong val) Parameters Type Name Description PlistHandle node the node System.UInt64 val the unsigned integer value | Improve this Doc View Source plist_set_uint_val(PlistHandle, UInt64) Set the value of a node. Forces type of node to #PLIST_UINT Declaration void plist_set_uint_val(PlistHandle node, ulong val) Parameters Type Name Description PlistHandle node the node System.UInt64 val the unsigned integer value | Improve this Doc View Source plist_to_bin(PlistHandle, out String, ref UInt32) Export the #plist_t structure to binary format. Declaration void plist_to_bin(PlistHandle plist, out string plistBin, ref uint length) Parameters Type Name Description PlistHandle plist the root node to export System.String plistBin System.UInt32 length a pointer to an uint32_t variable. Represents the length of the allocated buffer. | Improve this Doc View Source plist_to_bin_free(IntPtr) Frees the memory allocated by plist_to_bin Declaration void plist_to_bin_free(IntPtr plistBin) Parameters Type Name Description System.IntPtr plistBin | Improve this Doc View Source plist_to_xml(PlistHandle, out String, ref UInt32) Export the #plist_t structure to XML format. Declaration void plist_to_xml(PlistHandle plist, out string plistXml, ref uint length) Parameters Type Name Description PlistHandle plist the root node to export System.String plistXml System.UInt32 length a pointer to an uint32_t variable. Represents the length of the allocated buffer. | Improve this Doc View Source plist_to_xml_free(IntPtr) Frees the memory allocated by plist_to_xml Declaration void plist_to_xml_free(IntPtr plistXml) Parameters Type Name Description System.IntPtr plistXml"
  },
  "api/iMobileDevice.Pinvoke.html": {
    "href": "api/iMobileDevice.Pinvoke.html",
    "title": "Namespace iMobileDevice.Pinvoke | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.Pinvoke Classes PinvokeApi PinvokeErrorExtensions PinvokeException PinvokeNativeMethods Interfaces IPinvokeApi Enums PinvokeError Error Codes"
  },
  "api/iMobileDevice.Pinvoke.PinvokeNativeMethods.html": {
    "href": "api/iMobileDevice.Pinvoke.PinvokeNativeMethods.html",
    "title": "Class PinvokeNativeMethods | imobiledevice-net API",
    "keywords": "Class PinvokeNativeMethods Inheritance System.Object PinvokeNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Pinvoke Assembly : iMobileDevice-net.dll Syntax public class PinvokeNativeMethods Methods pinvoke_free_string(IntPtr) Frees a string that was previously allocated by libimobiledevice. Declaration public static PinvokeError pinvoke_free_string(IntPtr string) Parameters Type Name Description System.IntPtr string The string to free. Returns Type Description PinvokeError Always returns PINVOKE_E_SUCCESS. pinvoke_get_string_length(IntPtr, out UInt64) Gets the size of a string that was previously allocated by libimobiledevice. Declaration public static PinvokeError pinvoke_get_string_length(IntPtr string, out ulong length) Parameters Type Name Description System.IntPtr string The string of which to get its size. System.UInt64 length The length of the string, in bytes. Returns Type Description PinvokeError Always returns PINVOKE_E_SUCCESS."
  },
  "api/iMobileDevice.MobileSync.html": {
    "href": "api/iMobileDevice.MobileSync.html",
    "title": "Namespace iMobileDevice.MobileSync | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.MobileSync Classes MobileSyncAnchorsHandle MobileSyncAnchorsHandleDelegateMarshaler MobileSyncApi MobileSyncClientHandle MobileSyncClientHandleDelegateMarshaler MobileSyncErrorExtensions MobileSyncException MobileSyncNativeMethods Structs MobileSyncAnchors Interfaces IMobileSyncApi Enums MobileSyncError Error Codes MobileSyncSyncType The sync type of the current sync session."
  },
  "api/iMobileDevice.MobileSync.MobileSyncSyncType.html": {
    "href": "api/iMobileDevice.MobileSync.MobileSyncSyncType.html",
    "title": "Enum MobileSyncSyncType | imobiledevice-net API",
    "keywords": "Enum MobileSyncSyncType The sync type of the current sync session. Namespace : iMobileDevice.MobileSync Assembly : iMobileDevice-net.dll Syntax public enum MobileSyncSyncType Fields Name Description SyncTypeFast SyncTypeReset SyncTypeSlow"
  },
  "api/iMobileDevice.MobileImageMounter.MobileImageMounterUploadCallBack.html": {
    "href": "api/iMobileDevice.MobileImageMounter.MobileImageMounterUploadCallBack.html",
    "title": "Delegate MobileImageMounterUploadCallBack | imobiledevice-net API",
    "keywords": "Delegate MobileImageMounterUploadCallBack Namespace : iMobileDevice.MobileImageMounter Assembly : iMobileDevice-net.dll Syntax public delegate int MobileImageMounterUploadCallBack(IntPtr buffer, uint length, IntPtr userData); Parameters Type Name Description System.IntPtr buffer System.UInt32 length System.IntPtr userData Returns Type Description System.Int32"
  },
  "api/iMobileDevice.MobileImageMounter.MobileImageMounterNativeMethods.html": {
    "href": "api/iMobileDevice.MobileImageMounter.MobileImageMounterNativeMethods.html",
    "title": "Class MobileImageMounterNativeMethods | imobiledevice-net API",
    "keywords": "Class MobileImageMounterNativeMethods Inheritance System.Object MobileImageMounterNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileImageMounter Assembly : iMobileDevice-net.dll Syntax public class MobileImageMounterNativeMethods Methods mobile_image_mounter_free(IntPtr) Disconnects a mobile_image_mounter client from the device and frees up the mobile_image_mounter client data. Declaration public static MobileImageMounterError mobile_image_mounter_free(IntPtr client) Parameters Type Name Description System.IntPtr client The mobile_image_mounter client to disconnect and free. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, or MOBILE_IMAGE_MOUNTER_E_INVALID_ARG if client is NULL. mobile_image_mounter_hangup(MobileImageMounterClientHandle) Hangs up the connection to the mobile_image_mounter service. This functions has to be called before freeing up a mobile_image_mounter instance. If not, errors appear in the device's syslog. Declaration public static MobileImageMounterError mobile_image_mounter_hangup(MobileImageMounterClientHandle client) Parameters Type Name Description MobileImageMounterClientHandle client The client to hang up Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, MOBILE_IMAGE_MOUNTER_E_INVALID_ARG if client is invalid, or another error code otherwise. mobile_image_mounter_lookup_image(MobileImageMounterClientHandle, String, out PlistHandle) Tells if the image of ImageType is already mounted. Declaration public static MobileImageMounterError mobile_image_mounter_lookup_image(MobileImageMounterClientHandle client, string imageType, out PlistHandle result) Parameters Type Name Description MobileImageMounterClientHandle client The client use System.String imageType PlistHandle result Pointer to a plist that will receive the result of the operation. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, or an error code on error Remarks This function may return MOBILE_IMAGE_MOUNTER_E_SUCCESS even if the operation has failed. Check the resulting plist for further information. mobile_image_mounter_mount_image(MobileImageMounterClientHandle, String, Byte[], UInt16, String, out PlistHandle) Mounts an image on the device. Declaration public static MobileImageMounterError mobile_image_mounter_mount_image(MobileImageMounterClientHandle client, string imagePath, byte[] signature, ushort signatureSize, string imageType, out PlistHandle result) Parameters Type Name Description MobileImageMounterClientHandle client The connected mobile_image_mounter client. System.String imagePath System.Byte [] signature Pointer to a buffer holding the images' signature System.UInt16 signatureSize System.String imageType PlistHandle result Pointer to a plist that will receive the result of the operation. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, MOBILE_IMAGE_MOUNTER_E_INVALID_ARG if on ore more parameters are invalid, or another error code otherwise. Remarks This function may return MOBILE_IMAGE_MOUNTER_E_SUCCESS even if the operation has failed. Check the resulting plist for further information. Note that there is no unmounting function. The mount persists until the device is rebooted. mobile_image_mounter_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MobileImageMounterClientHandle) Connects to the mobile_image_mounter service on the specified device. Declaration public static MobileImageMounterError mobile_image_mounter_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MobileImageMounterClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MobileImageMounterClientHandle client Pointer that will be set to a newly allocated mobile_image_mounter_client_t upon successful return. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, MOBILE_IMAGE_MOUNTER_E_INVALID_ARG if device is NULL, or MOBILE_IMAGE_MOUNTER_E_CONN_FAILED if the connection to the device could not be established. mobile_image_mounter_start_service(iDeviceHandle, out MobileImageMounterClientHandle, String) Starts a new mobile_image_mounter service on the specified device and connects to it. Declaration public static MobileImageMounterError mobile_image_mounter_start_service(iDeviceHandle device, out MobileImageMounterClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MobileImageMounterClientHandle client Pointer that will point to a newly allocated mobile_image_mounter_t upon successful return. Must be freed using mobile_image_mounter_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, or an MOBILE_IMAGE_MOUNTER_E_* error code otherwise. mobile_image_mounter_upload_image(MobileImageMounterClientHandle, String, UInt32, Byte[], UInt16, MobileImageMounterUploadCallBack, IntPtr) Uploads an image with an optional signature to the device. Declaration public static MobileImageMounterError mobile_image_mounter_upload_image(MobileImageMounterClientHandle client, string imageType, uint imageSize, byte[] signature, ushort signatureSize, MobileImageMounterUploadCallBack uploadCallBack, IntPtr userdata) Parameters Type Name Description MobileImageMounterClientHandle client The connected mobile_image_mounter client. System.String imageType System.UInt32 imageSize System.Byte [] signature Buffer with a signature of the image being uploaded. If NULL, no signature will be used. System.UInt16 signatureSize MobileImageMounterUploadCallBack uploadCallBack System.IntPtr userdata User defined data for the upload callback function. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on succes, or a MOBILE_IMAGE_MOUNTER_E_* error code otherwise."
  },
  "api/iMobileDevice.MobileBackup2.MobileBackup2Api.html": {
    "href": "api/iMobileDevice.MobileBackup2.MobileBackup2Api.html",
    "title": "Class MobileBackup2Api | imobiledevice-net API",
    "keywords": "Class MobileBackup2Api Inheritance System.Object MobileBackup2Api Implements IMobileBackup2Api Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileBackup2 Assembly : iMobileDevice-net.dll Syntax public class MobileBackup2Api : IMobileBackup2Api Constructors | Improve this Doc View Source MobileBackup2Api(ILibiMobileDevice) Declaration public MobileBackup2Api(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source mobilebackup2_client_free(IntPtr) Disconnects a mobilebackup2 client from the device and frees up the mobilebackup2 client data. Declaration public virtual MobileBackup2Error mobilebackup2_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The mobilebackup2 client to disconnect and free. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS on success, or MOBILEBACKUP2_E_INVALID_ARG if client is NULL. | Improve this Doc View Source mobilebackup2_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MobileBackup2ClientHandle) Connects to the mobilebackup2 service on the specified device. Declaration public virtual MobileBackup2Error mobilebackup2_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MobileBackup2ClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MobileBackup2ClientHandle client Pointer that will be set to a newly allocated mobilebackup2_client_t upon successful return. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS on success, MOBILEBACKUP2_E_INVALID ARG if one or more parameter is invalid, or MOBILEBACKUP2_E_BAD_VERSION if the mobilebackup2 version on the device is newer. | Improve this Doc View Source mobilebackup2_client_start_service(iDeviceHandle, out MobileBackup2ClientHandle, String) Starts a new mobilebackup2 service on the specified device and connects to it. Declaration public virtual MobileBackup2Error mobilebackup2_client_start_service(iDeviceHandle device, out MobileBackup2ClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MobileBackup2ClientHandle client Pointer that will point to a newly allocated mobilebackup2_client_t upon successful return. Must be freed using mobilebackup2_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS on success, or an MOBILEBACKUP2_E_* error code otherwise. | Improve this Doc View Source mobilebackup2_receive_message(MobileBackup2ClientHandle, out PlistHandle, out String) Receives a DL* message plist from the device. This function is a wrapper around device_link_service_receive_message. Declaration public virtual MobileBackup2Error mobilebackup2_receive_message(MobileBackup2ClientHandle client, out PlistHandle msgPlist, out string dlmessage) Parameters Type Name Description MobileBackup2ClientHandle client The connected MobileBackup client to use. PlistHandle msgPlist System.String dlmessage A pointer that will be set to a newly allocated char* containing the DL* string from the given plist. It is up to the caller to free the allocated memory. If this parameter is NULL it will be ignored. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS if a DL* message was received, MOBILEBACKUP2_E_INVALID_ARG if client or message is invalid, MOBILEBACKUP2_E_PLIST_ERROR if the received plist is invalid or is not a DL* message plist, or MOBILEBACKUP2_E_MUX_ERROR if receiving from the device failed. | Improve this Doc View Source mobilebackup2_receive_raw(MobileBackup2ClientHandle, Byte[], UInt32, ref UInt32) Receive binary from the device. Declaration public virtual MobileBackup2Error mobilebackup2_receive_raw(MobileBackup2ClientHandle client, byte[] data, uint length, ref uint bytes) Parameters Type Name Description MobileBackup2ClientHandle client The MobileBackup client to receive from. System.Byte [] data Pointer to a buffer that will be filled with the received data. System.UInt32 length Number of bytes to receive. The data buffer needs to be large enough to store this amount of data. System.UInt32 bytes Number of bytes actually received. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS if any or no data was received, MOBILEBACKUP2_E_INVALID_ARG if one of the parameters is invalid, or MOBILEBACKUP2_E_MUX_ERROR if receiving the data failed. Remarks This function returns MOBILEBACKUP2_E_SUCCESS even if no data has been received (unless a communication error occured). The fourth parameter is required and must be checked to know how many bytes were actually received. | Improve this Doc View Source mobilebackup2_send_message(MobileBackup2ClientHandle, String, PlistHandle) Sends a backup message plist. Declaration public virtual MobileBackup2Error mobilebackup2_send_message(MobileBackup2ClientHandle client, string message, PlistHandle options) Parameters Type Name Description MobileBackup2ClientHandle client The connected MobileBackup client to use. System.String message The message to send. This will be inserted into the request plist as value for MessageName. If this parameter is NULL, the plist passed in the options parameter will be sent directly. PlistHandle options Additional options as PLIST_DICT to add to the request. The MessageName key with the value passed in the message parameter will be inserted into this plist before sending it. This parameter can be NULL if message is not NULL. Returns Type Description MobileBackup2Error | Improve this Doc View Source mobilebackup2_send_raw(MobileBackup2ClientHandle, Byte[], UInt32, ref UInt32) Send binary data to the device. Declaration public virtual MobileBackup2Error mobilebackup2_send_raw(MobileBackup2ClientHandle client, byte[] data, uint length, ref uint bytes) Parameters Type Name Description MobileBackup2ClientHandle client The MobileBackup client to send to. System.Byte [] data Pointer to the data to send System.UInt32 length Number of bytes to send System.UInt32 bytes Number of bytes actually sent Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS if any data was successfully sent, MOBILEBACKUP2_E_INVALID_ARG if one of the parameters is invalid, or MOBILEBACKUP2_E_MUX_ERROR if sending of the data failed. Remarks This function returns MOBILEBACKUP2_E_SUCCESS even if less than the requested length has been sent. The fourth parameter is required and must be checked to ensure if the whole data has been sent. | Improve this Doc View Source mobilebackup2_send_request(MobileBackup2ClientHandle, String, String, String, PlistHandle) Send a request to the connected mobilebackup2 service. Declaration public virtual MobileBackup2Error mobilebackup2_send_request(MobileBackup2ClientHandle client, string request, string targetIdentifier, string sourceIdentifier, PlistHandle options) Parameters Type Name Description MobileBackup2ClientHandle client System.String request The request to send to the backup service. Currently, this is one of \"Backup\", \"Restore\", \"Info\", or \"List\". System.String targetIdentifier System.String sourceIdentifier PlistHandle options Additional options in a plist of type PLIST_DICT. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS if the request was successfully sent, or a MOBILEBACKUP2_E_* error value otherwise. | Improve this Doc View Source mobilebackup2_send_status_response(MobileBackup2ClientHandle, Int32, String, PlistHandle) Sends a DLMessageStatusResponse to the device. Declaration public virtual MobileBackup2Error mobilebackup2_send_status_response(MobileBackup2ClientHandle client, int statusCode, string status1, PlistHandle status2) Parameters Type Name Description MobileBackup2ClientHandle client The MobileBackup client to use. System.Int32 statusCode System.String status1 A status message to send. Can be NULL if not required. PlistHandle status2 An additional status plist to attach to the response. Can be NULL if not required. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS on success, MOBILEBACKUP2_E_INVALID_ARG if client is invalid, or another MOBILEBACKUP2_E_* otherwise. | Improve this Doc View Source mobilebackup2_version_exchange(MobileBackup2ClientHandle, IntPtr, SByte, ref Double) Performs the mobilebackup2 protocol version exchange. Declaration public virtual MobileBackup2Error mobilebackup2_version_exchange(MobileBackup2ClientHandle client, IntPtr localVersions, sbyte count, ref double remoteVersion) Parameters Type Name Description MobileBackup2ClientHandle client The MobileBackup client to use. System.IntPtr localVersions System.SByte count The number of items in local_versions. System.Double remoteVersion Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS on success, or a MOBILEBACKUP2_E_* error code otherwise. Implements IMobileBackup2Api"
  },
  "api/iMobileDevice.MobileBackup2.IMobileBackup2Api.html": {
    "href": "api/iMobileDevice.MobileBackup2.IMobileBackup2Api.html",
    "title": "Interface IMobileBackup2Api | imobiledevice-net API",
    "keywords": "Interface IMobileBackup2Api Namespace : iMobileDevice.MobileBackup2 Assembly : iMobileDevice-net.dll Syntax public interface IMobileBackup2Api Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.MobileBackup2 . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source mobilebackup2_client_free(IntPtr) Disconnects a mobilebackup2 client from the device and frees up the mobilebackup2 client data. Declaration MobileBackup2Error mobilebackup2_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The mobilebackup2 client to disconnect and free. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS on success, or MOBILEBACKUP2_E_INVALID_ARG if client is NULL. | Improve this Doc View Source mobilebackup2_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MobileBackup2ClientHandle) Connects to the mobilebackup2 service on the specified device. Declaration MobileBackup2Error mobilebackup2_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MobileBackup2ClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MobileBackup2ClientHandle client Pointer that will be set to a newly allocated mobilebackup2_client_t upon successful return. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS on success, MOBILEBACKUP2_E_INVALID ARG if one or more parameter is invalid, or MOBILEBACKUP2_E_BAD_VERSION if the mobilebackup2 version on the device is newer. | Improve this Doc View Source mobilebackup2_client_start_service(iDeviceHandle, out MobileBackup2ClientHandle, String) Starts a new mobilebackup2 service on the specified device and connects to it. Declaration MobileBackup2Error mobilebackup2_client_start_service(iDeviceHandle device, out MobileBackup2ClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MobileBackup2ClientHandle client Pointer that will point to a newly allocated mobilebackup2_client_t upon successful return. Must be freed using mobilebackup2_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS on success, or an MOBILEBACKUP2_E_* error code otherwise. | Improve this Doc View Source mobilebackup2_receive_message(MobileBackup2ClientHandle, out PlistHandle, out String) Receives a DL* message plist from the device. This function is a wrapper around device_link_service_receive_message. Declaration MobileBackup2Error mobilebackup2_receive_message(MobileBackup2ClientHandle client, out PlistHandle msgPlist, out string dlmessage) Parameters Type Name Description MobileBackup2ClientHandle client The connected MobileBackup client to use. PlistHandle msgPlist System.String dlmessage A pointer that will be set to a newly allocated char* containing the DL* string from the given plist. It is up to the caller to free the allocated memory. If this parameter is NULL it will be ignored. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS if a DL* message was received, MOBILEBACKUP2_E_INVALID_ARG if client or message is invalid, MOBILEBACKUP2_E_PLIST_ERROR if the received plist is invalid or is not a DL* message plist, or MOBILEBACKUP2_E_MUX_ERROR if receiving from the device failed. | Improve this Doc View Source mobilebackup2_receive_raw(MobileBackup2ClientHandle, Byte[], UInt32, ref UInt32) Receive binary from the device. Declaration MobileBackup2Error mobilebackup2_receive_raw(MobileBackup2ClientHandle client, byte[] data, uint length, ref uint bytes) Parameters Type Name Description MobileBackup2ClientHandle client The MobileBackup client to receive from. System.Byte [] data Pointer to a buffer that will be filled with the received data. System.UInt32 length Number of bytes to receive. The data buffer needs to be large enough to store this amount of data. System.UInt32 bytes Number of bytes actually received. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS if any or no data was received, MOBILEBACKUP2_E_INVALID_ARG if one of the parameters is invalid, or MOBILEBACKUP2_E_MUX_ERROR if receiving the data failed. Remarks This function returns MOBILEBACKUP2_E_SUCCESS even if no data has been received (unless a communication error occured). The fourth parameter is required and must be checked to know how many bytes were actually received. | Improve this Doc View Source mobilebackup2_send_message(MobileBackup2ClientHandle, String, PlistHandle) Sends a backup message plist. Declaration MobileBackup2Error mobilebackup2_send_message(MobileBackup2ClientHandle client, string message, PlistHandle options) Parameters Type Name Description MobileBackup2ClientHandle client The connected MobileBackup client to use. System.String message The message to send. This will be inserted into the request plist as value for MessageName. If this parameter is NULL, the plist passed in the options parameter will be sent directly. PlistHandle options Additional options as PLIST_DICT to add to the request. The MessageName key with the value passed in the message parameter will be inserted into this plist before sending it. This parameter can be NULL if message is not NULL. Returns Type Description MobileBackup2Error | Improve this Doc View Source mobilebackup2_send_raw(MobileBackup2ClientHandle, Byte[], UInt32, ref UInt32) Send binary data to the device. Declaration MobileBackup2Error mobilebackup2_send_raw(MobileBackup2ClientHandle client, byte[] data, uint length, ref uint bytes) Parameters Type Name Description MobileBackup2ClientHandle client The MobileBackup client to send to. System.Byte [] data Pointer to the data to send System.UInt32 length Number of bytes to send System.UInt32 bytes Number of bytes actually sent Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS if any data was successfully sent, MOBILEBACKUP2_E_INVALID_ARG if one of the parameters is invalid, or MOBILEBACKUP2_E_MUX_ERROR if sending of the data failed. Remarks This function returns MOBILEBACKUP2_E_SUCCESS even if less than the requested length has been sent. The fourth parameter is required and must be checked to ensure if the whole data has been sent. | Improve this Doc View Source mobilebackup2_send_request(MobileBackup2ClientHandle, String, String, String, PlistHandle) Send a request to the connected mobilebackup2 service. Declaration MobileBackup2Error mobilebackup2_send_request(MobileBackup2ClientHandle client, string request, string targetIdentifier, string sourceIdentifier, PlistHandle options) Parameters Type Name Description MobileBackup2ClientHandle client System.String request The request to send to the backup service. Currently, this is one of \"Backup\", \"Restore\", \"Info\", or \"List\". System.String targetIdentifier System.String sourceIdentifier PlistHandle options Additional options in a plist of type PLIST_DICT. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS if the request was successfully sent, or a MOBILEBACKUP2_E_* error value otherwise. | Improve this Doc View Source mobilebackup2_send_status_response(MobileBackup2ClientHandle, Int32, String, PlistHandle) Sends a DLMessageStatusResponse to the device. Declaration MobileBackup2Error mobilebackup2_send_status_response(MobileBackup2ClientHandle client, int statusCode, string status1, PlistHandle status2) Parameters Type Name Description MobileBackup2ClientHandle client The MobileBackup client to use. System.Int32 statusCode System.String status1 A status message to send. Can be NULL if not required. PlistHandle status2 An additional status plist to attach to the response. Can be NULL if not required. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS on success, MOBILEBACKUP2_E_INVALID_ARG if client is invalid, or another MOBILEBACKUP2_E_* otherwise. | Improve this Doc View Source mobilebackup2_version_exchange(MobileBackup2ClientHandle, IntPtr, SByte, ref Double) Performs the mobilebackup2 protocol version exchange. Declaration MobileBackup2Error mobilebackup2_version_exchange(MobileBackup2ClientHandle client, IntPtr localVersions, sbyte count, ref double remoteVersion) Parameters Type Name Description MobileBackup2ClientHandle client The MobileBackup client to use. System.IntPtr localVersions System.SByte count The number of items in local_versions. System.Double remoteVersion Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS on success, or a MOBILEBACKUP2_E_* error code otherwise."
  },
  "api/iMobileDevice.Mobileactivation.MobileactivationException.html": {
    "href": "api/iMobileDevice.Mobileactivation.MobileactivationException.html",
    "title": "Class MobileactivationException | imobiledevice-net API",
    "keywords": "Class MobileactivationException Inheritance System.Object System.Exception MobileactivationException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.Mobileactivation Assembly : iMobileDevice-net.dll Syntax [Serializable] public class MobileactivationException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source MobileactivationException() Initializes a new instance of the MobileactivationException class. Declaration public MobileactivationException() | Improve this Doc View Source MobileactivationException(MobileactivationError) Declaration public MobileactivationException(MobileactivationError error) Parameters Type Name Description MobileactivationError error | Improve this Doc View Source MobileactivationException(MobileactivationError, String) Declaration public MobileactivationException(MobileactivationError error, string message) Parameters Type Name Description MobileactivationError error System.String message | Improve this Doc View Source MobileactivationException(SerializationInfo, StreamingContext) Initializes a new instance of the MobileactivationException class with serialized data. Declaration protected MobileactivationException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source MobileactivationException(String) Initializes a new instance of the MobileactivationException class with a specified error message. Declaration public MobileactivationException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source MobileactivationException(String, Exception) Initializes a new instance of the MobileactivationException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public MobileactivationException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual MobileactivationError ErrorCode { get; } Property Value Type Description MobileactivationError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.Mobileactivation.MobileactivationErrorExtensions.html": {
    "href": "api/iMobileDevice.Mobileactivation.MobileactivationErrorExtensions.html",
    "title": "Class MobileactivationErrorExtensions | imobiledevice-net API",
    "keywords": "Class MobileactivationErrorExtensions Inheritance System.Object MobileactivationErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Mobileactivation Assembly : iMobileDevice-net.dll Syntax public static class MobileactivationErrorExtensions Methods | Improve this Doc View Source IsError(MobileactivationError) Declaration public static bool IsError(this MobileactivationError value) Parameters Type Name Description MobileactivationError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(MobileactivationError) Declaration public static void ThrowOnError(this MobileactivationError value) Parameters Type Name Description MobileactivationError value | Improve this Doc View Source ThrowOnError(MobileactivationError, String) Declaration public static void ThrowOnError(this MobileactivationError value, string message) Parameters Type Name Description MobileactivationError value System.String message"
  },
  "api/iMobileDevice.Misagent.MisagentApi.html": {
    "href": "api/iMobileDevice.Misagent.MisagentApi.html",
    "title": "Class MisagentApi | imobiledevice-net API",
    "keywords": "Class MisagentApi Inheritance System.Object MisagentApi Implements IMisagentApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Misagent Assembly : iMobileDevice-net.dll Syntax public class MisagentApi : IMisagentApi Constructors | Improve this Doc View Source MisagentApi(ILibiMobileDevice) Declaration public MisagentApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source misagent_client_free(IntPtr) Disconnects an misagent client from the device and frees up the misagent client data. Declaration public virtual MisagentError misagent_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The misagent client to disconnect and free. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is NULL, or an MISAGENT_E_* error code otherwise. | Improve this Doc View Source misagent_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MisagentClientHandle) Connects to the misagent service on the specified device. Declaration public virtual MisagentError misagent_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MisagentClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MisagentClientHandle client Pointer that will point to a newly allocated misagent_client_t upon successful return. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is NULL, or an MISAGENT_E_* error code otherwise. | Improve this Doc View Source misagent_client_start_service(iDeviceHandle, out MisagentClientHandle, String) Starts a new misagent service on the specified device and connects to it. Declaration public virtual MisagentError misagent_client_start_service(iDeviceHandle device, out MisagentClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MisagentClientHandle client Pointer that will point to a newly allocated misagent_client_t upon successful return. Must be freed using misagent_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, or an MISAGENT_E_* error code otherwise. | Improve this Doc View Source misagent_copy(MisagentClientHandle, out PlistHandle) Retrieves all installed provisioning profiles (iOS 9.2.1 or below). Declaration public virtual MisagentError misagent_copy(MisagentClientHandle client, out PlistHandle profiles) Parameters Type Name Description MisagentClientHandle client The connected misagent to use. PlistHandle profiles Pointer to a plist_t that will be set to a PLIST_ARRAY if the function is successful. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is invalid, or an MISAGENT_E_* error code otherwise. Remarks This API call only works with iOS 9.2.1 or below. For newer iOS versions use misagent_copy_all() instead. If no provisioning profiles are installed on the device, this function still returns MISAGENT_E_SUCCESS and profiles will just point to an empty array. | Improve this Doc View Source misagent_copy_all(MisagentClientHandle, out PlistHandle) Retrieves all installed provisioning profiles (iOS 9.3 or higher). Declaration public virtual MisagentError misagent_copy_all(MisagentClientHandle client, out PlistHandle profiles) Parameters Type Name Description MisagentClientHandle client The connected misagent to use. PlistHandle profiles Pointer to a plist_t that will be set to a PLIST_ARRAY if the function is successful. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is invalid, or an MISAGENT_E_* error code otherwise. Remarks This API call only works with iOS 9.3 or higher. For older iOS versions use misagent_copy() instead. If no provisioning profiles are installed on the device, this function still returns MISAGENT_E_SUCCESS and profiles will just point to an empty array. | Improve this Doc View Source misagent_get_status_code(MisagentClientHandle) Retrieves the status code from the last operation. Declaration public virtual int misagent_get_status_code(MisagentClientHandle client) Parameters Type Name Description MisagentClientHandle client The misagent to use. Returns Type Description System.Int32 -1 if client is invalid, or the status code from the last operation | Improve this Doc View Source misagent_install(MisagentClientHandle, PlistHandle) Installs the given provisioning profile. Only works with valid profiles. Declaration public virtual MisagentError misagent_install(MisagentClientHandle client, PlistHandle profile) Parameters Type Name Description MisagentClientHandle client The connected misagent to use for installation PlistHandle profile The valid provisioning profile to install. This has to be passed as a PLIST_DATA, otherwise the function will fail. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is invalid, or an MISAGENT_E_* error code otherwise. | Improve this Doc View Source misagent_remove(MisagentClientHandle, String) Removes a given provisioning profile. Declaration public virtual MisagentError misagent_remove(MisagentClientHandle client, string profileid) Parameters Type Name Description MisagentClientHandle client The connected misagent to use. System.String profileid Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is invalid, or an MISAGENT_E_* error code otherwise. Implements IMisagentApi"
  },
  "api/iMobileDevice.Misagent.IMisagentApi.html": {
    "href": "api/iMobileDevice.Misagent.IMisagentApi.html",
    "title": "Interface IMisagentApi | imobiledevice-net API",
    "keywords": "Interface IMisagentApi Namespace : iMobileDevice.Misagent Assembly : iMobileDevice-net.dll Syntax public interface IMisagentApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.Misagent . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source misagent_client_free(IntPtr) Disconnects an misagent client from the device and frees up the misagent client data. Declaration MisagentError misagent_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The misagent client to disconnect and free. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is NULL, or an MISAGENT_E_* error code otherwise. | Improve this Doc View Source misagent_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MisagentClientHandle) Connects to the misagent service on the specified device. Declaration MisagentError misagent_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MisagentClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MisagentClientHandle client Pointer that will point to a newly allocated misagent_client_t upon successful return. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is NULL, or an MISAGENT_E_* error code otherwise. | Improve this Doc View Source misagent_client_start_service(iDeviceHandle, out MisagentClientHandle, String) Starts a new misagent service on the specified device and connects to it. Declaration MisagentError misagent_client_start_service(iDeviceHandle device, out MisagentClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MisagentClientHandle client Pointer that will point to a newly allocated misagent_client_t upon successful return. Must be freed using misagent_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, or an MISAGENT_E_* error code otherwise. | Improve this Doc View Source misagent_copy(MisagentClientHandle, out PlistHandle) Retrieves all installed provisioning profiles (iOS 9.2.1 or below). Declaration MisagentError misagent_copy(MisagentClientHandle client, out PlistHandle profiles) Parameters Type Name Description MisagentClientHandle client The connected misagent to use. PlistHandle profiles Pointer to a plist_t that will be set to a PLIST_ARRAY if the function is successful. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is invalid, or an MISAGENT_E_* error code otherwise. Remarks This API call only works with iOS 9.2.1 or below. For newer iOS versions use misagent_copy_all() instead. If no provisioning profiles are installed on the device, this function still returns MISAGENT_E_SUCCESS and profiles will just point to an empty array. | Improve this Doc View Source misagent_copy_all(MisagentClientHandle, out PlistHandle) Retrieves all installed provisioning profiles (iOS 9.3 or higher). Declaration MisagentError misagent_copy_all(MisagentClientHandle client, out PlistHandle profiles) Parameters Type Name Description MisagentClientHandle client The connected misagent to use. PlistHandle profiles Pointer to a plist_t that will be set to a PLIST_ARRAY if the function is successful. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is invalid, or an MISAGENT_E_* error code otherwise. Remarks This API call only works with iOS 9.3 or higher. For older iOS versions use misagent_copy() instead. If no provisioning profiles are installed on the device, this function still returns MISAGENT_E_SUCCESS and profiles will just point to an empty array. | Improve this Doc View Source misagent_get_status_code(MisagentClientHandle) Retrieves the status code from the last operation. Declaration int misagent_get_status_code(MisagentClientHandle client) Parameters Type Name Description MisagentClientHandle client The misagent to use. Returns Type Description System.Int32 -1 if client is invalid, or the status code from the last operation | Improve this Doc View Source misagent_install(MisagentClientHandle, PlistHandle) Installs the given provisioning profile. Only works with valid profiles. Declaration MisagentError misagent_install(MisagentClientHandle client, PlistHandle profile) Parameters Type Name Description MisagentClientHandle client The connected misagent to use for installation PlistHandle profile The valid provisioning profile to install. This has to be passed as a PLIST_DATA, otherwise the function will fail. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is invalid, or an MISAGENT_E_* error code otherwise. | Improve this Doc View Source misagent_remove(MisagentClientHandle, String) Removes a given provisioning profile. Declaration MisagentError misagent_remove(MisagentClientHandle client, string profileid) Parameters Type Name Description MisagentClientHandle client The connected misagent to use. System.String profileid Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is invalid, or an MISAGENT_E_* error code otherwise."
  },
  "api/iMobileDevice.Lockdown.LockdownClientHandle.html": {
    "href": "api/iMobileDevice.Lockdown.LockdownClientHandle.html",
    "title": "Class LockdownClientHandle | imobiledevice-net API",
    "keywords": "Class LockdownClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid LockdownClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Lockdown Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class LockdownClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source LockdownClientHandle() Declaration protected LockdownClientHandle() | Improve this Doc View Source LockdownClientHandle(Boolean) Declaration protected LockdownClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static LockdownClientHandle Zero { get; } Property Value Type Description LockdownClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static LockdownClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description LockdownClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static LockdownClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description LockdownClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.Lockdown.LockdownApi.html": {
    "href": "api/iMobileDevice.Lockdown.LockdownApi.html",
    "title": "Class LockdownApi | imobiledevice-net API",
    "keywords": "Class LockdownApi Inheritance System.Object LockdownApi Implements ILockdownApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Lockdown Assembly : iMobileDevice-net.dll Syntax public class LockdownApi : ILockdownApi Constructors | Improve this Doc View Source LockdownApi(ILibiMobileDevice) Declaration public LockdownApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source lockdownd_activate(LockdownClientHandle, PlistHandle) Activates the device. Only works within an open session. The ActivationRecord plist dictionary must be obtained using the activation protocol requesting from Apple's https webservice. Declaration public virtual LockdownError lockdownd_activate(LockdownClientHandle client, PlistHandle activationRecord) Parameters Type Name Description LockdownClientHandle client The lockdown client PlistHandle activationRecord Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client or activation_record is NULL, LOCKDOWN_E_NO_RUNNING_SESSION if no session is open, LOCKDOWN_E_PLIST_ERROR if the received plist is broken, LOCKDOWN_E_ACTIVATION_FAILED if the activation failed, LOCKDOWN_E_INVALID_ACTIVATION_RECORD if the device reports that the activation_record is invalid | Improve this Doc View Source lockdownd_client_free(IntPtr) Closes the lockdownd client session if one is running and frees up the lockdownd_client struct. Declaration public virtual LockdownError lockdownd_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The lockdown client Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL | Improve this Doc View Source lockdownd_client_new(iDeviceHandle, out LockdownClientHandle, String) Creates a new lockdownd client for the device. Declaration public virtual LockdownError lockdownd_client_new(iDeviceHandle device, out LockdownClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to create a lockdownd client for LockdownClientHandle client The pointer to the location of the new lockdownd_client System.String label The label to use for communication. Usually the program name. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL Remarks This function does not pair with the device or start a session. This has to be done manually by the caller after the client is created. The device disconnects automatically if the lockdown connection idles for more than 10 seconds. Make sure to call lockdownd_client_free() as soon as the connection is no longer needed. | Improve this Doc View Source lockdownd_client_new_with_handshake(iDeviceHandle, out LockdownClientHandle, String) Creates a new lockdownd client for the device and starts initial handshake. The handshake consists out of query_type, validate_pair, pair and start_session calls. It uses the internal pairing record management. Declaration public virtual LockdownError lockdownd_client_new_with_handshake(iDeviceHandle device, out LockdownClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to create a lockdownd client for LockdownClientHandle client The pointer to the location of the new lockdownd_client System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_INVALID_CONF if configuration data is wrong Remarks The device disconnects automatically if the lockdown connection idles for more than 10 seconds. Make sure to call lockdownd_client_free() as soon as the connection is no longer needed. | Improve this Doc View Source lockdownd_client_set_label(LockdownClientHandle, String) Sets the label to send for requests to lockdownd. Declaration public virtual void lockdownd_client_set_label(LockdownClientHandle client, string label) Parameters Type Name Description LockdownClientHandle client The lockdown client System.String label The label to set or NULL to disable sending a label | Improve this Doc View Source lockdownd_data_classes_free(IntPtr) Frees memory of an allocated array of data classes as returned by lockdownd_get_sync_data_classes() Declaration public virtual LockdownError lockdownd_data_classes_free(IntPtr classes) Parameters Type Name Description System.IntPtr classes An array of class names to free. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success | Improve this Doc View Source lockdownd_deactivate(LockdownClientHandle) Deactivates the device, returning it to the locked â€œActivate with iTunesâ€ screen. Declaration public virtual LockdownError lockdownd_deactivate(LockdownClientHandle client) Parameters Type Name Description LockdownClientHandle client The lockdown client Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_NO_RUNNING_SESSION if no session is open, LOCKDOWN_E_PLIST_ERROR if the received plist is broken | Improve this Doc View Source lockdownd_enter_recovery(LockdownClientHandle) Tells the device to immediately enter recovery mode. Declaration public virtual LockdownError lockdownd_enter_recovery(LockdownClientHandle client) Parameters Type Name Description LockdownClientHandle client The lockdown client Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL | Improve this Doc View Source lockdownd_get_device_name(LockdownClientHandle, out String) Retrieves the name of the device from lockdownd set by the user. Declaration public virtual LockdownError lockdownd_get_device_name(LockdownClientHandle client, out string deviceName) Parameters Type Name Description LockdownClientHandle client An initialized lockdownd client. System.String deviceName Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success | Improve this Doc View Source lockdownd_get_device_udid(LockdownClientHandle, out String) Returns the unique id of the device from lockdownd. Declaration public virtual LockdownError lockdownd_get_device_udid(LockdownClientHandle client, out string udid) Parameters Type Name Description LockdownClientHandle client An initialized lockdownd client. System.String udid Holds the unique id of the device. The caller is responsible for freeing the memory. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success | Improve this Doc View Source lockdownd_get_sync_data_classes(LockdownClientHandle, out ReadOnlyCollection<String>, ref Int32) Calculates and returns the data classes the device supports from lockdownd. Declaration public virtual LockdownError lockdownd_get_sync_data_classes(LockdownClientHandle client, out ReadOnlyCollection<string> classes, ref int count) Parameters Type Name Description LockdownClientHandle client An initialized lockdownd client. System.Collections.ObjectModel.ReadOnlyCollection < System.String > classes A pointer to store an array of class names. The caller is responsible for freeing the memory which can be done using mobilesync_data_classes_free(). System.Int32 count The number of items in the classes array. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_NO_RUNNING_SESSION if no session is open, LOCKDOWN_E_PLIST_ERROR if the received plist is broken | Improve this Doc View Source lockdownd_get_value(LockdownClientHandle, String, String, out PlistHandle) Retrieves a preferences plist using an optional domain and/or key name. Declaration public virtual LockdownError lockdownd_get_value(LockdownClientHandle client, string domain, string key, out PlistHandle value) Parameters Type Name Description LockdownClientHandle client An initialized lockdownd client. System.String domain The domain to query on or NULL for global domain System.String key The key name to request or NULL to query for all keys PlistHandle value A plist node representing the result value node Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL | Improve this Doc View Source lockdownd_goodbye(LockdownClientHandle) Sends the Goodbye request to lockdownd signaling the end of communication. Declaration public virtual LockdownError lockdownd_goodbye(LockdownClientHandle client) Parameters Type Name Description LockdownClientHandle client The lockdown client Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_PLIST_ERROR if the device did not acknowledge the request | Improve this Doc View Source lockdownd_pair(LockdownClientHandle, LockdownPairRecordHandle) Pairs the device using the supplied pair record. Declaration public virtual LockdownError lockdownd_pair(LockdownClientHandle client, LockdownPairRecordHandle pairRecord) Parameters Type Name Description LockdownClientHandle client The lockdown client LockdownPairRecordHandle pairRecord Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_PLIST_ERROR if the pair_record certificates are wrong, LOCKDOWN_E_PAIRING_FAILED if the pairing failed, LOCKDOWN_E_PASSWORD_PROTECTED if the device is password protected, LOCKDOWN_E_INVALID_HOST_ID if the device does not know the caller's host id | Improve this Doc View Source lockdownd_pair_with_options(LockdownClientHandle, LockdownPairRecordHandle, PlistHandle, out PlistHandle) Pairs the device using the supplied pair record and passing the given options. Declaration public virtual LockdownError lockdownd_pair_with_options(LockdownClientHandle client, LockdownPairRecordHandle pairRecord, PlistHandle options, out PlistHandle response) Parameters Type Name Description LockdownClientHandle client The lockdown client LockdownPairRecordHandle pairRecord PlistHandle options The pairing options to pass. Can be NULL for no options. PlistHandle response If non-NULL a pointer to lockdownd's response dictionary is returned. The caller is responsible to free the response dictionary with plist_free(). Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_PLIST_ERROR if the pair_record certificates are wrong, LOCKDOWN_E_PAIRING_FAILED if the pairing failed, LOCKDOWN_E_PASSWORD_PROTECTED if the device is password protected, LOCKDOWN_E_INVALID_HOST_ID if the device does not know the caller's host id | Improve this Doc View Source lockdownd_query_type(LockdownClientHandle, out String) Query the type of the service daemon. Depending on whether the device is queried in normal mode or restore mode, different types will be returned. Declaration public virtual LockdownError lockdownd_query_type(LockdownClientHandle client, out string type) Parameters Type Name Description LockdownClientHandle client The lockdownd client System.String type The type returned by the service daemon. Pass NULL to ignore. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL | Improve this Doc View Source lockdownd_receive(LockdownClientHandle, out PlistHandle) Receives a plist from lockdownd. Declaration public virtual LockdownError lockdownd_receive(LockdownClientHandle client, out PlistHandle plist) Parameters Type Name Description LockdownClientHandle client The lockdownd client PlistHandle plist The plist to store the received data Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client or plist is NULL | Improve this Doc View Source lockdownd_remove_value(LockdownClientHandle, String, String) Removes a preference node by domain and/or key name. Declaration public virtual LockdownError lockdownd_remove_value(LockdownClientHandle client, string domain, string key) Parameters Type Name Description LockdownClientHandle client An initialized lockdownd client. System.String domain The domain to query on or NULL for global domain System.String key The key name to remove or NULL remove all keys for the current domain Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL Remarks : Use with caution as this could remove vital information on the device | Improve this Doc View Source lockdownd_send(LockdownClientHandle, PlistHandle) Sends a plist to lockdownd. Declaration public virtual LockdownError lockdownd_send(LockdownClientHandle client, PlistHandle plist) Parameters Type Name Description LockdownClientHandle client The lockdownd client PlistHandle plist The plist to send Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client or plist is NULL Remarks This function is low-level and should only be used if you need to send a new type of message. | Improve this Doc View Source lockdownd_service_descriptor_free(IntPtr) Frees memory of a service descriptor as returned by lockdownd_start_service() Declaration public virtual LockdownError lockdownd_service_descriptor_free(IntPtr service) Parameters Type Name Description System.IntPtr service A service descriptor instance to free. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success | Improve this Doc View Source lockdownd_set_value(LockdownClientHandle, String, String, PlistHandle) Sets a preferences value using a plist and optional by domain and/or key name. Declaration public virtual LockdownError lockdownd_set_value(LockdownClientHandle client, string domain, string key, PlistHandle value) Parameters Type Name Description LockdownClientHandle client an initialized lockdownd client. System.String domain the domain to query on or NULL for global domain System.String key the key name to set the value or NULL to set a value dict plist PlistHandle value a plist node of any node type representing the value to set Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client or value is NULL | Improve this Doc View Source lockdownd_start_service(LockdownClientHandle, String, out LockdownServiceDescriptorHandle) Requests to start a service and retrieve it's port on success. Declaration public virtual LockdownError lockdownd_start_service(LockdownClientHandle client, string identifier, out LockdownServiceDescriptorHandle service) Parameters Type Name Description LockdownClientHandle client The lockdownd client System.String identifier The identifier of the service to start LockdownServiceDescriptorHandle service The service descriptor on success or NULL on failure Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG if a parameter is NULL, LOCKDOWN_E_INVALID_SERVICE if the requested service is not known by the device, LOCKDOWN_E_START_SERVICE_FAILED if the service could not be started by the device | Improve this Doc View Source lockdownd_start_service_with_escrow_bag(LockdownClientHandle, String, out LockdownServiceDescriptorHandle) Requests to start a service and retrieve it's port on success. Sends the escrow bag from the device's pair record. Declaration public virtual LockdownError lockdownd_start_service_with_escrow_bag(LockdownClientHandle client, string identifier, out LockdownServiceDescriptorHandle service) Parameters Type Name Description LockdownClientHandle client The lockdownd client System.String identifier The identifier of the service to start LockdownServiceDescriptorHandle service The service descriptor on success or NULL on failure Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG if a parameter is NULL, LOCKDOWN_E_INVALID_SERVICE if the requested service is not known by the device, LOCKDOWN_E_START_SERVICE_FAILED if the service could not because started by the device, LOCKDOWN_E_INVALID_CONF if the host id or escrow bag are missing from the device record. | Improve this Doc View Source lockdownd_start_session(LockdownClientHandle, String, out String, ref Int32) Opens a session with lockdownd and switches to SSL mode if device wants it. Declaration public virtual LockdownError lockdownd_start_session(LockdownClientHandle client, string hostId, out string sessionId, ref int sslEnabled) Parameters Type Name Description LockdownClientHandle client The lockdownd client System.String hostId System.String sessionId System.Int32 sslEnabled Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when a client or host_id is NULL, LOCKDOWN_E_PLIST_ERROR if the response plist had errors, LOCKDOWN_E_INVALID_HOST_ID if the device does not know the supplied HostID, LOCKDOWN_E_SSL_ERROR if enabling SSL communication failed | Improve this Doc View Source lockdownd_stop_session(LockdownClientHandle, String) Closes the lockdownd session by sending the StopSession request. Declaration public virtual LockdownError lockdownd_stop_session(LockdownClientHandle client, string sessionId) Parameters Type Name Description LockdownClientHandle client The lockdown client System.String sessionId Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL | Improve this Doc View Source lockdownd_unpair(LockdownClientHandle, LockdownPairRecordHandle) Unpairs the device with the given HostID and removes the pairing records from the device and host if the internal pairing record management is used. Declaration public virtual LockdownError lockdownd_unpair(LockdownClientHandle client, LockdownPairRecordHandle pairRecord) Parameters Type Name Description LockdownClientHandle client The lockdown client LockdownPairRecordHandle pairRecord Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_PLIST_ERROR if the pair_record certificates are wrong, LOCKDOWN_E_PAIRING_FAILED if the pairing failed, LOCKDOWN_E_PASSWORD_PROTECTED if the device is password protected, LOCKDOWN_E_INVALID_HOST_ID if the device does not know the caller's host id | Improve this Doc View Source lockdownd_validate_pair(LockdownClientHandle, LockdownPairRecordHandle) Validates if the device is paired with the given HostID. If successful the specified host will become trusted host of the device indicated by the lockdownd preference named TrustedHostAttached. Otherwise the host must be paired using lockdownd_pair() first. Declaration public virtual LockdownError lockdownd_validate_pair(LockdownClientHandle client, LockdownPairRecordHandle pairRecord) Parameters Type Name Description LockdownClientHandle client The lockdown client LockdownPairRecordHandle pairRecord Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_PLIST_ERROR if the pair_record certificates are wrong, LOCKDOWN_E_PAIRING_FAILED if the pairing failed, LOCKDOWN_E_PASSWORD_PROTECTED if the device is password protected, LOCKDOWN_E_INVALID_HOST_ID if the device does not know the caller's host id Implements ILockdownApi"
  },
  "api/iMobileDevice.InstallationProxy.InstallationProxyApi.html": {
    "href": "api/iMobileDevice.InstallationProxy.InstallationProxyApi.html",
    "title": "Class InstallationProxyApi | imobiledevice-net API",
    "keywords": "Class InstallationProxyApi Inheritance System.Object InstallationProxyApi Implements IInstallationProxyApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.InstallationProxy Assembly : iMobileDevice-net.dll Syntax public class InstallationProxyApi : IInstallationProxyApi Constructors | Improve this Doc View Source InstallationProxyApi(ILibiMobileDevice) Declaration public InstallationProxyApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source instproxy_archive(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Archive an application on the device. This function tells the device to make an archive of the specified application. This results in the device creating a ZIP archive in the 'ApplicationArchives' directory and uninstalling the application. Declaration public virtual InstallationProxyError instproxy_archive(InstallationProxyClientHandle client, string appid, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation proxy client System.String appid ApplicationIdentifier of the app to archive. PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function. | Improve this Doc View Source instproxy_browse(InstallationProxyClientHandle, PlistHandle, out PlistHandle) List installed applications. This function runs synchronously. Declaration public virtual InstallationProxyError instproxy_browse(InstallationProxyClientHandle client, PlistHandle clientOptions, out PlistHandle result) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client PlistHandle clientOptions PlistHandle result Pointer that will be set to a plist that will hold an array of PLIST_DICT holding information about the applications found. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. | Improve this Doc View Source instproxy_browse_with_callback(InstallationProxyClientHandle, PlistHandle, InstallationProxyStatusCallBack, IntPtr) List pages of installed applications in a callback. Declaration public virtual InstallationProxyError instproxy_browse_with_callback(InstallationProxyClientHandle client, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. | Improve this Doc View Source instproxy_check_capabilities_match(InstallationProxyClientHandle, out String, PlistHandle, out PlistHandle) Checks a device for certain capabilities. Declaration public virtual InstallationProxyError instproxy_check_capabilities_match(InstallationProxyClientHandle client, out string capabilities, PlistHandle clientOptions, out PlistHandle result) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client System.String capabilities An array of char* with capability names that MUST have a terminatingÂ NULL entry. PlistHandle clientOptions PlistHandle result Pointer that will be set to a plist containing a PLIST_DICT holding information if the capabilities matched or NULL on errors. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. | Improve this Doc View Source instproxy_client_free(IntPtr) Disconnects an installation_proxy client from the device and frees up the installation_proxy client data. Declaration public virtual InstallationProxyError instproxy_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The installation_proxy client to disconnect and free. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or INSTPROXY_E_INVALID_ARG if client is NULL. | Improve this Doc View Source instproxy_client_get_path_for_bundle_identifier(InstallationProxyClientHandle, String, out String) Queries the device for the path of an application. Declaration public virtual InstallationProxyError instproxy_client_get_path_for_bundle_identifier(InstallationProxyClientHandle client, string bundleId, out string path) Parameters Type Name Description InstallationProxyClientHandle client The connected installation proxy client. System.String bundleId System.String path Pointer to store the device path for the application which is set to NULL if it could not be determined. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success, INSTPROXY_E_OP_FAILED if the path could not be determined or an INSTPROXY_E_* error value if an error occured. | Improve this Doc View Source instproxy_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out InstallationProxyClientHandle) Connects to the installation_proxy service on the specified device. Declaration public virtual InstallationProxyError instproxy_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out InstallationProxyClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. InstallationProxyClientHandle client Pointer that will be set to a newly allocated instproxy_client_t upon successful return. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success, or an INSTPROXY_E_* error value when an error occured. | Improve this Doc View Source instproxy_client_options_add(PlistHandle) Adds one or more new key:value pairs to the given client_options. Declaration public virtual void instproxy_client_options_add(PlistHandle clientOptions) Parameters Type Name Description PlistHandle clientOptions Remarks The keys and values passed are expected to be strings, except for the keys \"ApplicationSINF\", \"iTunesMetadata\", \"ReturnAttributes\" which are expecting a plist_t node as value and \"SkipUninstall\" expects int. | Improve this Doc View Source instproxy_client_options_add(PlistHandle, String, String, Byte) Declaration public void instproxy_client_options_add(PlistHandle client_options, string key, string value, byte term) Parameters Type Name Description PlistHandle client_options System.String key System.String value System.Byte term | Improve this Doc View Source instproxy_client_options_free(PlistHandle) Frees client_options plist. Declaration public virtual void instproxy_client_options_free(PlistHandle clientOptions) Parameters Type Name Description PlistHandle clientOptions | Improve this Doc View Source instproxy_client_options_new() Creates a new client_options plist. Declaration public virtual PlistHandle instproxy_client_options_new() Returns Type Description PlistHandle A new plist_t of type PLIST_DICT. | Improve this Doc View Source instproxy_client_options_set_return_attributes(PlistHandle) Adds attributes to the given client_options to filter browse results. Declaration public virtual void instproxy_client_options_set_return_attributes(PlistHandle clientOptions) Parameters Type Name Description PlistHandle clientOptions Remarks The values passed are expected to be strings. | Improve this Doc View Source instproxy_client_start_service(iDeviceHandle, out InstallationProxyClientHandle, String) Starts a new installation_proxy service on the specified device and connects to it. Declaration public virtual InstallationProxyError instproxy_client_start_service(iDeviceHandle device, out InstallationProxyClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. InstallationProxyClientHandle client Pointer that will point to a newly allocated instproxy_client_t upon successful return. Must be freed using instproxy_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success, or an INSTPROXY_E_* error code otherwise. | Improve this Doc View Source instproxy_command_get_name(PlistHandle, out String) Gets the name from a command dictionary. Declaration public virtual void instproxy_command_get_name(PlistHandle command, out string name) Parameters Type Name Description PlistHandle command The dictionary describing the command. System.String name Pointer to store the name of the command. | Improve this Doc View Source instproxy_install(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Install an application on the device. Declaration public virtual InstallationProxyError instproxy_install(InstallationProxyClientHandle client, string pkgPath, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client System.String pkgPath PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function. | Improve this Doc View Source instproxy_lookup(InstallationProxyClientHandle, ReadOnlyCollection<String>, PlistHandle, out PlistHandle) Lookup information about specific applications from the device. Declaration public virtual InstallationProxyError instproxy_lookup(InstallationProxyClientHandle client, ReadOnlyCollection<string> appids, PlistHandle clientOptions, out PlistHandle result) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client System.Collections.ObjectModel.ReadOnlyCollection < System.String > appids An array of bundle identifiers that MUST have a terminating NULL entry or NULL to lookup all. PlistHandle clientOptions PlistHandle result Pointer that will be set to a plist containing a PLIST_DICT holding requested information about the application or NULL on errors. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. | Improve this Doc View Source instproxy_lookup_archives(InstallationProxyClientHandle, PlistHandle, out PlistHandle) List archived applications. This function runs synchronously. Declaration public virtual InstallationProxyError instproxy_lookup_archives(InstallationProxyClientHandle client, PlistHandle clientOptions, out PlistHandle result) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client PlistHandle clientOptions PlistHandle result Pointer that will be set to a plist containing a PLIST_DICT holding information about the archived applications found. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. | Improve this Doc View Source instproxy_remove_archive(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Removes a previously archived application from the device. This function removes the ZIP archive from the 'ApplicationArchives' directory. Declaration public virtual InstallationProxyError instproxy_remove_archive(InstallationProxyClientHandle client, string appid, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation proxy client System.String appid ApplicationIdentifier of the archived app to remove. PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function. | Improve this Doc View Source instproxy_restore(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Restore a previously archived application on the device. This function is the counterpart to instproxy_archive. Declaration public virtual InstallationProxyError instproxy_restore(InstallationProxyClientHandle client, string appid, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation proxy client System.String appid ApplicationIdentifier of the app to restore. PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function. | Improve this Doc View Source instproxy_status_get_current_list(PlistHandle, ref UInt64, ref UInt64, ref UInt64, out PlistHandle) Gets total and current item information from a browse response if available. Declaration public virtual void instproxy_status_get_current_list(PlistHandle status, ref ulong total, ref ulong currentIndex, ref ulong currentAmount, out PlistHandle list) Parameters Type Name Description PlistHandle status The dictionary status response to use. System.UInt64 total Pointer to store the total number of items. System.UInt64 currentIndex System.UInt64 currentAmount PlistHandle list Pointer to store a newly allocated plist with items. The caller is reponsible for freeing the list after use. If NULL is passed no list will be returned. If NULL is returned no list was found in the status. | Improve this Doc View Source instproxy_status_get_error(PlistHandle, out String, out String, ref UInt64) Gets error name, code and description from a response if available. Declaration public virtual InstallationProxyError instproxy_status_get_error(PlistHandle status, out string name, out string description, ref ulong code) Parameters Type Name Description PlistHandle status The dictionary status response to use. System.String name Pointer to store the name of an error. System.String description Pointer to store error description text if available. The caller is reponsible for freeing the allocated buffer after use. If NULL is passed no description will be returned. System.UInt64 code Pointer to store the returned error code if available. If NULL is passed no error code will be returned. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS if no error is found or an INSTPROXY_E_* error value matching the error that áºƒas found in the status. | Improve this Doc View Source instproxy_status_get_name(PlistHandle, out String) Gets the name of a status. Declaration public virtual void instproxy_status_get_name(PlistHandle status, out string name) Parameters Type Name Description PlistHandle status The dictionary status response to use. System.String name Pointer to store the name of the status. | Improve this Doc View Source instproxy_status_get_percent_complete(PlistHandle, ref Int32) Gets progress in percentage from a status if available. Declaration public virtual void instproxy_status_get_percent_complete(PlistHandle status, ref int percent) Parameters Type Name Description PlistHandle status The dictionary status response to use. System.Int32 percent | Improve this Doc View Source instproxy_uninstall(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Uninstall an application from the device. Declaration public virtual InstallationProxyError instproxy_uninstall(InstallationProxyClientHandle client, string appid, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation proxy client System.String appid ApplicationIdentifier of the app to uninstall PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function. | Improve this Doc View Source instproxy_upgrade(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Upgrade an application on the device. This function is nearly the same as instproxy_install; the difference is that the installation progress on the device is faster if the application is already installed. Declaration public virtual InstallationProxyError instproxy_upgrade(InstallationProxyClientHandle client, string pkgPath, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client System.String pkgPath PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function. Implements IInstallationProxyApi"
  },
  "api/iMobileDevice.InstallationProxy.IInstallationProxyApi.html": {
    "href": "api/iMobileDevice.InstallationProxy.IInstallationProxyApi.html",
    "title": "Interface IInstallationProxyApi | imobiledevice-net API",
    "keywords": "Interface IInstallationProxyApi Namespace : iMobileDevice.InstallationProxy Assembly : iMobileDevice-net.dll Syntax public interface IInstallationProxyApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.InstallationProxy . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source instproxy_archive(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Archive an application on the device. This function tells the device to make an archive of the specified application. This results in the device creating a ZIP archive in the 'ApplicationArchives' directory and uninstalling the application. Declaration InstallationProxyError instproxy_archive(InstallationProxyClientHandle client, string appid, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation proxy client System.String appid ApplicationIdentifier of the app to archive. PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function. | Improve this Doc View Source instproxy_browse(InstallationProxyClientHandle, PlistHandle, out PlistHandle) List installed applications. This function runs synchronously. Declaration InstallationProxyError instproxy_browse(InstallationProxyClientHandle client, PlistHandle clientOptions, out PlistHandle result) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client PlistHandle clientOptions PlistHandle result Pointer that will be set to a plist that will hold an array of PLIST_DICT holding information about the applications found. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. | Improve this Doc View Source instproxy_browse_with_callback(InstallationProxyClientHandle, PlistHandle, InstallationProxyStatusCallBack, IntPtr) List pages of installed applications in a callback. Declaration InstallationProxyError instproxy_browse_with_callback(InstallationProxyClientHandle client, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. | Improve this Doc View Source instproxy_check_capabilities_match(InstallationProxyClientHandle, out String, PlistHandle, out PlistHandle) Checks a device for certain capabilities. Declaration InstallationProxyError instproxy_check_capabilities_match(InstallationProxyClientHandle client, out string capabilities, PlistHandle clientOptions, out PlistHandle result) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client System.String capabilities An array of char* with capability names that MUST have a terminatingÂ NULL entry. PlistHandle clientOptions PlistHandle result Pointer that will be set to a plist containing a PLIST_DICT holding information if the capabilities matched or NULL on errors. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. | Improve this Doc View Source instproxy_client_free(IntPtr) Disconnects an installation_proxy client from the device and frees up the installation_proxy client data. Declaration InstallationProxyError instproxy_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The installation_proxy client to disconnect and free. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or INSTPROXY_E_INVALID_ARG if client is NULL. | Improve this Doc View Source instproxy_client_get_path_for_bundle_identifier(InstallationProxyClientHandle, String, out String) Queries the device for the path of an application. Declaration InstallationProxyError instproxy_client_get_path_for_bundle_identifier(InstallationProxyClientHandle client, string bundleId, out string path) Parameters Type Name Description InstallationProxyClientHandle client The connected installation proxy client. System.String bundleId System.String path Pointer to store the device path for the application which is set to NULL if it could not be determined. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success, INSTPROXY_E_OP_FAILED if the path could not be determined or an INSTPROXY_E_* error value if an error occured. | Improve this Doc View Source instproxy_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out InstallationProxyClientHandle) Connects to the installation_proxy service on the specified device. Declaration InstallationProxyError instproxy_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out InstallationProxyClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. InstallationProxyClientHandle client Pointer that will be set to a newly allocated instproxy_client_t upon successful return. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success, or an INSTPROXY_E_* error value when an error occured. | Improve this Doc View Source instproxy_client_options_add(PlistHandle) Adds one or more new key:value pairs to the given client_options. Declaration void instproxy_client_options_add(PlistHandle clientOptions) Parameters Type Name Description PlistHandle clientOptions Remarks The keys and values passed are expected to be strings, except for the keys \"ApplicationSINF\", \"iTunesMetadata\", \"ReturnAttributes\" which are expecting a plist_t node as value and \"SkipUninstall\" expects int. | Improve this Doc View Source instproxy_client_options_add(PlistHandle, String, String, Byte) Declaration void instproxy_client_options_add(PlistHandle client_options, string key, string value, byte term) Parameters Type Name Description PlistHandle client_options System.String key System.String value System.Byte term | Improve this Doc View Source instproxy_client_options_free(PlistHandle) Frees client_options plist. Declaration void instproxy_client_options_free(PlistHandle clientOptions) Parameters Type Name Description PlistHandle clientOptions | Improve this Doc View Source instproxy_client_options_new() Creates a new client_options plist. Declaration PlistHandle instproxy_client_options_new() Returns Type Description PlistHandle A new plist_t of type PLIST_DICT. | Improve this Doc View Source instproxy_client_options_set_return_attributes(PlistHandle) Adds attributes to the given client_options to filter browse results. Declaration void instproxy_client_options_set_return_attributes(PlistHandle clientOptions) Parameters Type Name Description PlistHandle clientOptions Remarks The values passed are expected to be strings. | Improve this Doc View Source instproxy_client_start_service(iDeviceHandle, out InstallationProxyClientHandle, String) Starts a new installation_proxy service on the specified device and connects to it. Declaration InstallationProxyError instproxy_client_start_service(iDeviceHandle device, out InstallationProxyClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. InstallationProxyClientHandle client Pointer that will point to a newly allocated instproxy_client_t upon successful return. Must be freed using instproxy_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success, or an INSTPROXY_E_* error code otherwise. | Improve this Doc View Source instproxy_command_get_name(PlistHandle, out String) Gets the name from a command dictionary. Declaration void instproxy_command_get_name(PlistHandle command, out string name) Parameters Type Name Description PlistHandle command The dictionary describing the command. System.String name Pointer to store the name of the command. | Improve this Doc View Source instproxy_install(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Install an application on the device. Declaration InstallationProxyError instproxy_install(InstallationProxyClientHandle client, string pkgPath, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client System.String pkgPath PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function. | Improve this Doc View Source instproxy_lookup(InstallationProxyClientHandle, ReadOnlyCollection<String>, PlistHandle, out PlistHandle) Lookup information about specific applications from the device. Declaration InstallationProxyError instproxy_lookup(InstallationProxyClientHandle client, ReadOnlyCollection<string> appids, PlistHandle clientOptions, out PlistHandle result) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client System.Collections.ObjectModel.ReadOnlyCollection < System.String > appids An array of bundle identifiers that MUST have a terminating NULL entry or NULL to lookup all. PlistHandle clientOptions PlistHandle result Pointer that will be set to a plist containing a PLIST_DICT holding requested information about the application or NULL on errors. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. | Improve this Doc View Source instproxy_lookup_archives(InstallationProxyClientHandle, PlistHandle, out PlistHandle) List archived applications. This function runs synchronously. Declaration InstallationProxyError instproxy_lookup_archives(InstallationProxyClientHandle client, PlistHandle clientOptions, out PlistHandle result) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client PlistHandle clientOptions PlistHandle result Pointer that will be set to a plist containing a PLIST_DICT holding information about the archived applications found. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. | Improve this Doc View Source instproxy_remove_archive(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Removes a previously archived application from the device. This function removes the ZIP archive from the 'ApplicationArchives' directory. Declaration InstallationProxyError instproxy_remove_archive(InstallationProxyClientHandle client, string appid, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation proxy client System.String appid ApplicationIdentifier of the archived app to remove. PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function. | Improve this Doc View Source instproxy_restore(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Restore a previously archived application on the device. This function is the counterpart to instproxy_archive. Declaration InstallationProxyError instproxy_restore(InstallationProxyClientHandle client, string appid, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation proxy client System.String appid ApplicationIdentifier of the app to restore. PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function. | Improve this Doc View Source instproxy_status_get_current_list(PlistHandle, ref UInt64, ref UInt64, ref UInt64, out PlistHandle) Gets total and current item information from a browse response if available. Declaration void instproxy_status_get_current_list(PlistHandle status, ref ulong total, ref ulong currentIndex, ref ulong currentAmount, out PlistHandle list) Parameters Type Name Description PlistHandle status The dictionary status response to use. System.UInt64 total Pointer to store the total number of items. System.UInt64 currentIndex System.UInt64 currentAmount PlistHandle list Pointer to store a newly allocated plist with items. The caller is reponsible for freeing the list after use. If NULL is passed no list will be returned. If NULL is returned no list was found in the status. | Improve this Doc View Source instproxy_status_get_error(PlistHandle, out String, out String, ref UInt64) Gets error name, code and description from a response if available. Declaration InstallationProxyError instproxy_status_get_error(PlistHandle status, out string name, out string description, ref ulong code) Parameters Type Name Description PlistHandle status The dictionary status response to use. System.String name Pointer to store the name of an error. System.String description Pointer to store error description text if available. The caller is reponsible for freeing the allocated buffer after use. If NULL is passed no description will be returned. System.UInt64 code Pointer to store the returned error code if available. If NULL is passed no error code will be returned. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS if no error is found or an INSTPROXY_E_* error value matching the error that áºƒas found in the status. | Improve this Doc View Source instproxy_status_get_name(PlistHandle, out String) Gets the name of a status. Declaration void instproxy_status_get_name(PlistHandle status, out string name) Parameters Type Name Description PlistHandle status The dictionary status response to use. System.String name Pointer to store the name of the status. | Improve this Doc View Source instproxy_status_get_percent_complete(PlistHandle, ref Int32) Gets progress in percentage from a status if available. Declaration void instproxy_status_get_percent_complete(PlistHandle status, ref int percent) Parameters Type Name Description PlistHandle status The dictionary status response to use. System.Int32 percent | Improve this Doc View Source instproxy_uninstall(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Uninstall an application from the device. Declaration InstallationProxyError instproxy_uninstall(InstallationProxyClientHandle client, string appid, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation proxy client System.String appid ApplicationIdentifier of the app to uninstall PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function. | Improve this Doc View Source instproxy_upgrade(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Upgrade an application on the device. This function is nearly the same as instproxy_install; the difference is that the installation progress on the device is faster if the application is already installed. Declaration InstallationProxyError instproxy_upgrade(InstallationProxyClientHandle client, string pkgPath, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client System.String pkgPath PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function."
  },
  "api/iMobileDevice.iDevice.iDeviceEvent.html": {
    "href": "api/iMobileDevice.iDevice.iDeviceEvent.html",
    "title": "Struct iDeviceEvent | imobiledevice-net API",
    "keywords": "Struct iDeviceEvent Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : iMobileDevice.iDevice Assembly : iMobileDevice-net.dll Syntax public struct iDeviceEvent Fields | Improve this Doc View Source conn_type Declaration public int conn_type Field Value Type Description System.Int32 | Improve this Doc View Source event Declaration public iDeviceEventType event Field Value Type Description iDeviceEventType | Improve this Doc View Source udid Declaration public IntPtr udid Field Value Type Description System.IntPtr Properties | Improve this Doc View Source udidString Declaration public string udidString { get; } Property Value Type Description System.String"
  },
  "api/iMobileDevice.iDevice.iDeviceErrorExtensions.html": {
    "href": "api/iMobileDevice.iDevice.iDeviceErrorExtensions.html",
    "title": "Class iDeviceErrorExtensions | imobiledevice-net API",
    "keywords": "Class iDeviceErrorExtensions Inheritance System.Object iDeviceErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.iDevice Assembly : iMobileDevice-net.dll Syntax public static class iDeviceErrorExtensions Methods | Improve this Doc View Source IsError(iDeviceError) Declaration public static bool IsError(this iDeviceError value) Parameters Type Name Description iDeviceError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(iDeviceError) Declaration public static void ThrowOnError(this iDeviceError value) Parameters Type Name Description iDeviceError value | Improve this Doc View Source ThrowOnError(iDeviceError, String) Declaration public static void ThrowOnError(this iDeviceError value, string message) Parameters Type Name Description iDeviceError value System.String message"
  },
  "api/iMobileDevice.HouseArrest.HouseArrestException.html": {
    "href": "api/iMobileDevice.HouseArrest.HouseArrestException.html",
    "title": "Class HouseArrestException | imobiledevice-net API",
    "keywords": "Class HouseArrestException Inheritance System.Object System.Exception HouseArrestException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.HouseArrest Assembly : iMobileDevice-net.dll Syntax [Serializable] public class HouseArrestException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source HouseArrestException() Initializes a new instance of the HouseArrestException class. Declaration public HouseArrestException() | Improve this Doc View Source HouseArrestException(HouseArrestError) Declaration public HouseArrestException(HouseArrestError error) Parameters Type Name Description HouseArrestError error | Improve this Doc View Source HouseArrestException(HouseArrestError, String) Declaration public HouseArrestException(HouseArrestError error, string message) Parameters Type Name Description HouseArrestError error System.String message | Improve this Doc View Source HouseArrestException(SerializationInfo, StreamingContext) Initializes a new instance of the HouseArrestException class with serialized data. Declaration protected HouseArrestException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source HouseArrestException(String) Initializes a new instance of the HouseArrestException class with a specified error message. Declaration public HouseArrestException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source HouseArrestException(String, Exception) Initializes a new instance of the HouseArrestException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public HouseArrestException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual HouseArrestError ErrorCode { get; } Property Value Type Description HouseArrestError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.HeartBeat.HeartBeatErrorExtensions.html": {
    "href": "api/iMobileDevice.HeartBeat.HeartBeatErrorExtensions.html",
    "title": "Class HeartBeatErrorExtensions | imobiledevice-net API",
    "keywords": "Class HeartBeatErrorExtensions Inheritance System.Object HeartBeatErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.HeartBeat Assembly : iMobileDevice-net.dll Syntax public static class HeartBeatErrorExtensions Methods | Improve this Doc View Source IsError(HeartBeatError) Declaration public static bool IsError(this HeartBeatError value) Parameters Type Name Description HeartBeatError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(HeartBeatError) Declaration public static void ThrowOnError(this HeartBeatError value) Parameters Type Name Description HeartBeatError value | Improve this Doc View Source ThrowOnError(HeartBeatError, String) Declaration public static void ThrowOnError(this HeartBeatError value, string message) Parameters Type Name Description HeartBeatError value System.String message"
  },
  "api/iMobileDevice.FileRelay.FileRelayException.html": {
    "href": "api/iMobileDevice.FileRelay.FileRelayException.html",
    "title": "Class FileRelayException | imobiledevice-net API",
    "keywords": "Class FileRelayException Inheritance System.Object System.Exception FileRelayException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.FileRelay Assembly : iMobileDevice-net.dll Syntax [Serializable] public class FileRelayException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source FileRelayException() Initializes a new instance of the FileRelayException class. Declaration public FileRelayException() | Improve this Doc View Source FileRelayException(FileRelayError) Declaration public FileRelayException(FileRelayError error) Parameters Type Name Description FileRelayError error | Improve this Doc View Source FileRelayException(FileRelayError, String) Declaration public FileRelayException(FileRelayError error, string message) Parameters Type Name Description FileRelayError error System.String message | Improve this Doc View Source FileRelayException(SerializationInfo, StreamingContext) Initializes a new instance of the FileRelayException class with serialized data. Declaration protected FileRelayException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source FileRelayException(String) Initializes a new instance of the FileRelayException class with a specified error message. Declaration public FileRelayException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source FileRelayException(String, Exception) Initializes a new instance of the FileRelayException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public FileRelayException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual FileRelayError ErrorCode { get; } Property Value Type Description FileRelayError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.DiagnosticsRelay.html": {
    "href": "api/iMobileDevice.DiagnosticsRelay.html",
    "title": "Namespace iMobileDevice.DiagnosticsRelay | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.DiagnosticsRelay Classes DiagnosticsRelayApi DiagnosticsRelayClientHandle DiagnosticsRelayClientHandleDelegateMarshaler DiagnosticsRelayErrorExtensions DiagnosticsRelayException DiagnosticsRelayNativeMethods Interfaces IDiagnosticsRelayApi Enums DiagnosticsRelayAction DiagnosticsRelayError Error Codes"
  },
  "api/iMobileDevice.DiagnosticsRelay.DiagnosticsRelayApi.html": {
    "href": "api/iMobileDevice.DiagnosticsRelay.DiagnosticsRelayApi.html",
    "title": "Class DiagnosticsRelayApi | imobiledevice-net API",
    "keywords": "Class DiagnosticsRelayApi Inheritance System.Object DiagnosticsRelayApi Implements IDiagnosticsRelayApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.DiagnosticsRelay Assembly : iMobileDevice-net.dll Syntax public class DiagnosticsRelayApi : IDiagnosticsRelayApi Constructors | Improve this Doc View Source DiagnosticsRelayApi(ILibiMobileDevice) Declaration public DiagnosticsRelayApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source diagnostics_relay_client_free(IntPtr) Disconnects a diagnostics_relay client from the device and frees up the diagnostics_relay client data. Declaration public virtual DiagnosticsRelayError diagnostics_relay_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The diagnostics_relay client to disconnect and free. Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when one of client or client->parent is invalid, or DIAGNOSTICS_RELAY_E_UNKNOWN_ERROR when the was an error freeing the parent property_list_service client. | Improve this Doc View Source diagnostics_relay_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out DiagnosticsRelayClientHandle) Connects to the diagnostics_relay service on the specified device. Declaration public virtual DiagnosticsRelayError diagnostics_relay_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out DiagnosticsRelayClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. DiagnosticsRelayClientHandle client Reference that will point to a newly allocated diagnostics_relay_client_t upon successful return. Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when one of the parameters is invalid, or DIAGNOSTICS_RELAY_E_MUX_ERROR when the connection failed. | Improve this Doc View Source diagnostics_relay_client_start_service(iDeviceHandle, out DiagnosticsRelayClientHandle, String) Starts a new diagnostics_relay service on the specified device and connects to it. Declaration public virtual DiagnosticsRelayError diagnostics_relay_client_start_service(iDeviceHandle device, out DiagnosticsRelayClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. DiagnosticsRelayClientHandle client Pointer that will point to a newly allocated diagnostics_relay_client_t upon successful return. Must be freed using diagnostics_relay_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, or an DIAGNOSTICS_RELAY_E_* error code otherwise. | Improve this Doc View Source diagnostics_relay_goodbye(DiagnosticsRelayClientHandle) Sends the Goodbye request signaling the end of communication. Declaration public virtual DiagnosticsRelayError diagnostics_relay_goodbye(DiagnosticsRelayClientHandle client) Parameters Type Name Description DiagnosticsRelayClientHandle client The diagnostics_relay client Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client is NULL, DIAGNOSTICS_RELAY_E_PLIST_ERROR if the device did not acknowledge the request | Improve this Doc View Source diagnostics_relay_query_ioregistry_entry(DiagnosticsRelayClientHandle, String, String, out PlistHandle) Declaration public virtual DiagnosticsRelayError diagnostics_relay_query_ioregistry_entry(DiagnosticsRelayClientHandle client, string name, string classname, out PlistHandle result) Parameters Type Name Description DiagnosticsRelayClientHandle client System.String name System.String classname PlistHandle result Returns Type Description DiagnosticsRelayError | Improve this Doc View Source diagnostics_relay_query_ioregistry_plane(DiagnosticsRelayClientHandle, String, out PlistHandle) Declaration public virtual DiagnosticsRelayError diagnostics_relay_query_ioregistry_plane(DiagnosticsRelayClientHandle client, string plane, out PlistHandle result) Parameters Type Name Description DiagnosticsRelayClientHandle client System.String plane PlistHandle result Returns Type Description DiagnosticsRelayError | Improve this Doc View Source diagnostics_relay_query_mobilegestalt(DiagnosticsRelayClientHandle, PlistHandle, out PlistHandle) Declaration public virtual DiagnosticsRelayError diagnostics_relay_query_mobilegestalt(DiagnosticsRelayClientHandle client, PlistHandle keys, out PlistHandle result) Parameters Type Name Description DiagnosticsRelayClientHandle client PlistHandle keys PlistHandle result Returns Type Description DiagnosticsRelayError | Improve this Doc View Source diagnostics_relay_request_diagnostics(DiagnosticsRelayClientHandle, String, out PlistHandle) Shutdown of the device and optionally show a user notification. Declaration public virtual DiagnosticsRelayError diagnostics_relay_request_diagnostics(DiagnosticsRelayClientHandle client, string type, out PlistHandle diagnostics) Parameters Type Name Description DiagnosticsRelayClientHandle client The diagnostics_relay client System.String type PlistHandle diagnostics Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client is NULL, DIAGNOSTICS_RELAY_E_PLIST_ERROR if the device did not acknowledge the request | Improve this Doc View Source diagnostics_relay_restart(DiagnosticsRelayClientHandle, DiagnosticsRelayAction) Restart the device and optionally show a user notification. Declaration public virtual DiagnosticsRelayError diagnostics_relay_restart(DiagnosticsRelayClientHandle client, DiagnosticsRelayAction flags) Parameters Type Name Description DiagnosticsRelayClientHandle client The diagnostics_relay client DiagnosticsRelayAction flags A binary flag combination of DIAGNOSTICS_RELAY_ACTION_FLAG_WAIT_FOR_DISCONNECT to wait until diagnostics_relay_client_free() disconnects before execution and DIAGNOSTICS_RELAY_ACTION_FLAG_DISPLAY_FAIL to show a \"FAIL\" dialog or DIAGNOSTICS_RELAY_ACTION_FLAG_DISPLAY_PASS to show an \"OK\" dialog Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client is NULL, DIAGNOSTICS_RELAY_E_PLIST_ERROR if the device did not acknowledge the request | Improve this Doc View Source diagnostics_relay_shutdown(DiagnosticsRelayClientHandle, DiagnosticsRelayAction) Shutdown of the device and optionally show a user notification. Declaration public virtual DiagnosticsRelayError diagnostics_relay_shutdown(DiagnosticsRelayClientHandle client, DiagnosticsRelayAction flags) Parameters Type Name Description DiagnosticsRelayClientHandle client The diagnostics_relay client DiagnosticsRelayAction flags A binary flag combination of DIAGNOSTICS_RELAY_ACTION_FLAG_WAIT_FOR_DISCONNECT to wait until diagnostics_relay_client_free() disconnects before execution and DIAGNOSTICS_RELAY_ACTION_FLAG_DISPLAY_FAIL to show a \"FAIL\" dialog or DIAGNOSTICS_RELAY_ACTION_FLAG_DISPLAY_PASS to show an \"OK\" dialog Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client is NULL, DIAGNOSTICS_RELAY_E_PLIST_ERROR if the device did not acknowledge the request | Improve this Doc View Source diagnostics_relay_sleep(DiagnosticsRelayClientHandle) Puts the device into deep sleep mode and disconnects from host. Declaration public virtual DiagnosticsRelayError diagnostics_relay_sleep(DiagnosticsRelayClientHandle client) Parameters Type Name Description DiagnosticsRelayClientHandle client The diagnostics_relay client Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client is NULL, DIAGNOSTICS_RELAY_E_PLIST_ERROR if the device did not acknowledge the request Implements IDiagnosticsRelayApi"
  },
  "api/iMobileDevice.DebugServer.DebugServerError.html": {
    "href": "api/iMobileDevice.DebugServer.DebugServerError.html",
    "title": "Enum DebugServerError | imobiledevice-net API",
    "keywords": "Enum DebugServerError Error Codes Namespace : iMobileDevice.DebugServer Assembly : iMobileDevice-net.dll Syntax public enum DebugServerError Fields Name Description InvalidArg MuxError ResponseError SslError Success UnknownError Extension Methods DebugServerErrorExtensions.ThrowOnError() DebugServerErrorExtensions.ThrowOnError(String) DebugServerErrorExtensions.IsError()"
  },
  "api/iMobileDevice.DebugServer.DebugServerApi.html": {
    "href": "api/iMobileDevice.DebugServer.DebugServerApi.html",
    "title": "Class DebugServerApi | imobiledevice-net API",
    "keywords": "Class DebugServerApi Inheritance System.Object DebugServerApi Implements IDebugServerApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.DebugServer Assembly : iMobileDevice-net.dll Syntax public class DebugServerApi : IDebugServerApi Constructors | Improve this Doc View Source DebugServerApi(ILibiMobileDevice) Declaration public DebugServerApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source debugserver_client_free(IntPtr) Disconnects a debugserver client from the device and frees up the debugserver client data. Declaration public virtual DebugServerError debugserver_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The debugserver client to disconnect and free. Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client is NULL, or an DEBUGSERVER_E_* error code otherwise. | Improve this Doc View Source debugserver_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out DebugServerClientHandle) Connects to the debugserver service on the specified device. Declaration public virtual DebugServerError debugserver_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out DebugServerClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. DebugServerClientHandle client Pointer that will point to a newly allocated debugserver_client_t upon successful return. Must be freed using debugserver_client_free() after use. Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client is NULL, or an DEBUGSERVER_E_* error code otherwise. | Improve this Doc View Source debugserver_client_receive(DebugServerClientHandle, Byte[], UInt32, ref UInt32) Receives raw data from the debugserver service. Declaration public virtual DebugServerError debugserver_client_receive(DebugServerClientHandle client, byte[] data, uint size, ref uint received) Parameters Type Name Description DebugServerClientHandle client The debugserver client System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client or plist is NULL Remarks The default read timeout is 10 seconds. | Improve this Doc View Source debugserver_client_receive_response(DebugServerClientHandle, out String) Receives and parses response of debugserver service. Declaration public virtual DebugServerError debugserver_client_receive_response(DebugServerClientHandle client, out string response) Parameters Type Name Description DebugServerClientHandle client The debugserver client System.String response Response received for last command (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client is NULL | Improve this Doc View Source debugserver_client_receive_with_timeout(DebugServerClientHandle, Byte[], UInt32, ref UInt32, UInt32) Receives raw data using the given debugserver client with specified timeout. Declaration public virtual DebugServerError debugserver_client_receive_with_timeout(DebugServerClientHandle client, byte[] data, uint size, ref uint received, uint timeout) Parameters Type Name Description DebugServerClientHandle client The debugserver client to use for receiving System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) System.UInt32 timeout Maximum time in milliseconds to wait for data. Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when one or more parameters are invalid, DEBUGSERVER_E_MUX_ERROR when a communication error occurs, or DEBUGSERVER_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source debugserver_client_send(DebugServerClientHandle, Byte[], UInt32, ref UInt32) Sends raw data using the given debugserver service client. Declaration public virtual DebugServerError debugserver_client_send(DebugServerClientHandle client, byte[] data, uint size, ref uint sent) Parameters Type Name Description DebugServerClientHandle client The debugserver client to use for sending System.Byte [] data Data to send System.UInt32 size Size of the data to send System.UInt32 sent Number of bytes sent (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when one or more parameters are invalid, or DEBUGSERVER_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source debugserver_client_send_command(DebugServerClientHandle, DebugServerCommandHandle, out String) Sends a command to the debugserver service. Declaration public virtual DebugServerError debugserver_client_send_command(DebugServerClientHandle client, DebugServerCommandHandle command, out string response) Parameters Type Name Description DebugServerClientHandle client The debugserver client DebugServerCommandHandle command Command to process and send System.String response Response received for the command (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client or command is NULL | Improve this Doc View Source debugserver_client_set_ack_mode(DebugServerClientHandle, Int32) Controls status of ACK mode when sending commands or receiving responses. Declaration public virtual DebugServerError debugserver_client_set_ack_mode(DebugServerClientHandle client, int enabled) Parameters Type Name Description DebugServerClientHandle client The debugserver client System.Int32 enabled A boolean flag indicating whether the internal ACK mode handling should be enabled or disabled. Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, or an DEBUGSERVER_E_* error code otherwise. | Improve this Doc View Source debugserver_client_set_argv(DebugServerClientHandle, Int32, ReadOnlyCollection<String>, out String) Sets the argv which launches an app. Declaration public virtual DebugServerError debugserver_client_set_argv(DebugServerClientHandle client, int argc, ReadOnlyCollection<string> argv, out string response) Parameters Type Name Description DebugServerClientHandle client The debugserver client System.Int32 argc Number of arguments System.Collections.ObjectModel.ReadOnlyCollection < System.String > argv Array starting with the executable to be run followed by it's arguments System.String response Response received for the command (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client is NULL | Improve this Doc View Source debugserver_client_set_environment_hex_encoded(DebugServerClientHandle, String, out String) Adds or sets an environment variable. Declaration public virtual DebugServerError debugserver_client_set_environment_hex_encoded(DebugServerClientHandle client, string env, out string response) Parameters Type Name Description DebugServerClientHandle client The debugserver client System.String env The environment variable in \"KEY=VALUE\" notation System.String response Response received for the command (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client is NULL | Improve this Doc View Source debugserver_client_start_service(iDeviceHandle, out DebugServerClientHandle, String) Starts a new debugserver service on the specified device and connects to it. Declaration public virtual DebugServerError debugserver_client_start_service(iDeviceHandle device, out DebugServerClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. DebugServerClientHandle client Pointer that will point to a newly allocated debugserver_client_t upon successful return. Must be freed using debugserver_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, or an DEBUGSERVER_E_* error code otherwise. | Improve this Doc View Source debugserver_command_free(IntPtr) Frees memory of command object. Declaration public virtual DebugServerError debugserver_command_free(IntPtr command) Parameters Type Name Description System.IntPtr command The command object Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when command is NULL | Improve this Doc View Source debugserver_command_new(String, Int32, ReadOnlyCollection<String>, out DebugServerCommandHandle) Creates and initializes a new command object. Declaration public virtual DebugServerError debugserver_command_new(string name, int argc, ReadOnlyCollection<string> argv, out DebugServerCommandHandle command) Parameters Type Name Description System.String name The name of the command which is sent in plain text System.Int32 argc Number of items in the token array System.Collections.ObjectModel.ReadOnlyCollection < System.String > argv Array of tokens for the command ment to be encoded DebugServerCommandHandle command New command object Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when name or command is NULL | Improve this Doc View Source debugserver_decode_string(String, UInt32, out String) Decodes a hex encoded string. Declaration public virtual void debugserver_decode_string(string encodedBuffer, uint encodedLength, out string buffer) Parameters Type Name Description System.String encodedBuffer System.UInt32 encodedLength System.String buffer Decoded string to be freed by the caller | Improve this Doc View Source debugserver_encode_string(String, out String, ref UInt32) Encodes a string into hex notation. Declaration public virtual void debugserver_encode_string(string buffer, out string encodedBuffer, ref uint encodedLength) Parameters Type Name Description System.String buffer String to encode into hex notiation System.String encodedBuffer System.UInt32 encodedLength Implements IDebugServerApi"
  },
  "api/iMobileDevice.Afc.AfcFileMode.html": {
    "href": "api/iMobileDevice.Afc.AfcFileMode.html",
    "title": "Enum AfcFileMode | imobiledevice-net API",
    "keywords": "Enum AfcFileMode Flags for afc_file_open Namespace : iMobileDevice.Afc Assembly : iMobileDevice-net.dll Syntax public enum AfcFileMode Fields Name Description FopenAppend FopenRdappend FopenRdonly FopenRw FopenWr FopenWronly"
  },
  "api/iMobileDevice.Usbmuxd.UsbmuxdSocketType.html": {
    "href": "api/iMobileDevice.Usbmuxd.UsbmuxdSocketType.html",
    "title": "Enum UsbmuxdSocketType | imobiledevice-net API",
    "keywords": "Enum UsbmuxdSocketType specifies how libusbmuxd should connect to usbmuxd Namespace : iMobileDevice.Usbmuxd Assembly : iMobileDevice-net.dll Syntax public enum UsbmuxdSocketType Fields Name Description TypeTcp TypeUnix"
  },
  "api/iMobileDevice.Usbmuxd.UsbmuxdNativeMethods.html": {
    "href": "api/iMobileDevice.Usbmuxd.UsbmuxdNativeMethods.html",
    "title": "Class UsbmuxdNativeMethods | imobiledevice-net API",
    "keywords": "Class UsbmuxdNativeMethods Inheritance System.Object UsbmuxdNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Usbmuxd Assembly : iMobileDevice-net.dll Syntax public class UsbmuxdNativeMethods Methods libusbmuxd_set_debug_level(Int32) Declaration public static void libusbmuxd_set_debug_level(int level) Parameters Type Name Description System.Int32 level libusbmuxd_set_use_inotify(Int32) Enable or disable the use of inotify extension. Enabled by default. Use 0 to disable and 1 to enable inotify support. This only has an effect on linux systems if inotify support has been built in. Otherwise and on all other platforms this function has no effect. Declaration public static void libusbmuxd_set_use_inotify(int set) Parameters Type Name Description System.Int32 set usbmuxd_connect(Int32, UInt16) Request proxy connect to Declaration public static int usbmuxd_connect(int handle, ushort tcpPort) Parameters Type Name Description System.Int32 handle returned by 'usbmuxd_scan()' System.UInt16 tcpPort Returns Type Description System.Int32 file descriptor socket of the connection, or -1 on error usbmuxd_delete_pair_record(String) Delete a pairing record Declaration public static int usbmuxd_delete_pair_record(string recordId) Parameters Type Name Description System.String recordId Returns Type Description System.Int32 0 on success, a negative errno value otherwise. usbmuxd_device_list_free(IntPtr) Frees the device list returned by an usbmuxd_get_device_list call Declaration public static int usbmuxd_device_list_free(IntPtr deviceList) Parameters Type Name Description System.IntPtr deviceList Returns Type Description System.Int32 0 on success, -1 on error. usbmuxd_disconnect(Int32) Disconnect. For now, this just closes the socket file descriptor. Declaration public static int usbmuxd_disconnect(int sfd) Parameters Type Name Description System.Int32 sfd socker file descriptor returned by usbmuxd_connect() Returns Type Description System.Int32 0 on success, -1 on error. usbmuxd_get_device_by_udid(String, ref UsbmuxdDeviceInfo) Gets device information for the device specified by udid. Declaration public static int usbmuxd_get_device_by_udid(string udid, ref UsbmuxdDeviceInfo device) Parameters Type Name Description System.String udid A device UDID of the device to look for. If udid is NULL, This function will return the first device found. UsbmuxdDeviceInfo device Pointer to a previously allocated (or static) usbmuxd_device_info_t that will be filled with the device info. Returns Type Description System.Int32 0 if no matching device is connected, 1 if the device was found, or a negative value on error. usbmuxd_get_device_list(ref IntPtr) Contacts usbmuxd and retrieves a list of connected devices. Declaration public static int usbmuxd_get_device_list(ref IntPtr deviceList) Parameters Type Name Description System.IntPtr deviceList Returns Type Description System.Int32 number of attached devices, zero on no devices, or negative if an error occured. Remarks The user has to free the list returned. usbmuxd_get_socket_type(ref Int32) Gets the socket type (Unix socket or TCP socket) libusbmuxd should use when connecting to usbmuxd. Declaration public static int usbmuxd_get_socket_type(ref int value) Parameters Type Name Description System.Int32 value A pointer to an integer which will reveive the current socket type Returns Type Description System.Int32 0 on success or negative on error usbmuxd_get_tcp_endpoint(out IntPtr, ref UInt16) Gets the TCP endpoint to which usbmuxd will connect if th esocket type is set to SOCKET_TYPE_TCP Declaration public static int usbmuxd_get_tcp_endpoint(out IntPtr host, ref ushort port) Parameters Type Name Description System.IntPtr host A pointer which will be set to the hostname or IP address to which to connect. The caller must free this string. System.UInt16 port The port to which to connect Returns Type Description System.Int32 0 on success or negative on error | Improve this Doc View Source usbmuxd_get_tcp_endpoint(out String, ref UInt16) Declaration public static int usbmuxd_get_tcp_endpoint(out string host, ref ushort port) Parameters Type Name Description System.String host System.UInt16 port Returns Type Description System.Int32 usbmuxd_read_buid(out IntPtr) Reads the SystemBUID Declaration public static int usbmuxd_read_buid(out IntPtr buid) Parameters Type Name Description System.IntPtr buid pointer to a variable that will be set to point to a newly allocated string with the System BUID returned by usbmuxd Returns Type Description System.Int32 0 on success, a negative errno value otherwise. | Improve this Doc View Source usbmuxd_read_buid(out String) Declaration public static int usbmuxd_read_buid(out string buid) Parameters Type Name Description System.String buid Returns Type Description System.Int32 usbmuxd_read_pair_record(String, out IntPtr, ref UInt32) Read a pairing record Declaration public static int usbmuxd_read_pair_record(string recordId, out IntPtr recordData, ref uint recordSize) Parameters Type Name Description System.String recordId System.IntPtr recordData System.UInt32 recordSize Returns Type Description System.Int32 0 on success, a negative error value otherwise. | Improve this Doc View Source usbmuxd_read_pair_record(String, out String, ref UInt32) Declaration public static int usbmuxd_read_pair_record(string recordId, out string recordData, ref uint recordSize) Parameters Type Name Description System.String recordId System.String recordData System.UInt32 recordSize Returns Type Description System.Int32 usbmuxd_recv(Int32, Byte[], UInt32, ref UInt32) Receive data from the specified socket with a default timeout. Declaration public static int usbmuxd_recv(int sfd, byte[] data, uint len, ref uint recvBytes) Parameters Type Name Description System.Int32 sfd socket file descriptor returned by usbmuxd_connect() System.Byte [] data buffer to put the data to System.UInt32 len number of bytes to receive System.UInt32 recvBytes Returns Type Description System.Int32 0 on success, a negative errno value otherwise. usbmuxd_recv_timeout(Int32, Byte[], UInt32, ref UInt32, UInt32) Receive data from the specified socket. Declaration public static int usbmuxd_recv_timeout(int sfd, byte[] data, uint len, ref uint recvBytes, uint timeout) Parameters Type Name Description System.Int32 sfd socket file descriptor returned by usbmuxd_connect() System.Byte [] data buffer to put the data to System.UInt32 len number of bytes to receive System.UInt32 recvBytes System.UInt32 timeout how many milliseconds to wait for data Returns Type Description System.Int32 0 on success, a negative errno value otherwise. usbmuxd_save_pair_record(String, String, UInt32) Save a pairing record Declaration public static int usbmuxd_save_pair_record(string recordId, string recordData, uint recordSize) Parameters Type Name Description System.String recordId System.String recordData System.UInt32 recordSize Returns Type Description System.Int32 0 on success, a negative error value otherwise. usbmuxd_send(Int32, Byte[], UInt32, ref UInt32) Send data to the specified socket. Declaration public static int usbmuxd_send(int sfd, byte[] data, uint len, ref uint sentBytes) Parameters Type Name Description System.Int32 sfd socket file descriptor returned by usbmuxd_connect() System.Byte [] data buffer to send System.UInt32 len size of buffer to send System.UInt32 sentBytes Returns Type Description System.Int32 0 on success, a negative errno value otherwise. usbmuxd_set_socket_type(Int32) Sets the socket type (Unix socket or TCP socket) libusbmuxd should use when connecting to usbmuxd. Declaration public static int usbmuxd_set_socket_type(int value) Parameters Type Name Description System.Int32 value SOCKET_TYPE_UNIX or SOCKET_TYPE_TCP Returns Type Description System.Int32 0 on success or negative on error usbmuxd_set_tcp_endpoint(String, UInt16) Sets the TCP endpoint to which usbmuxd will connect if the socket type is set to SOCKET_TYPE_TCP Declaration public static int usbmuxd_set_tcp_endpoint(string host, ushort port) Parameters Type Name Description System.String host The hostname or IP address to which to connect System.UInt16 port The port to which to connect. Returns Type Description System.Int32 0 on success or negative on error usbmuxd_subscribe(UsbmuxdEventCallBack, IntPtr) Subscribe a callback function so that applications get to know about device add/remove events. Declaration public static int usbmuxd_subscribe(UsbmuxdEventCallBack callback, IntPtr userData) Parameters Type Name Description UsbmuxdEventCallBack callback A callback function that is executed when an event occurs. System.IntPtr userData Returns Type Description System.Int32 0 on success or negative on error. usbmuxd_unsubscribe() Unsubscribe callback. Declaration public static int usbmuxd_unsubscribe() Returns Type Description System.Int32 only 0 for now."
  },
  "api/iMobileDevice.Usbmuxd.UsbmuxdEventType.html": {
    "href": "api/iMobileDevice.Usbmuxd.UsbmuxdEventType.html",
    "title": "Enum UsbmuxdEventType | imobiledevice-net API",
    "keywords": "Enum UsbmuxdEventType event types for event callback function Namespace : iMobileDevice.Usbmuxd Assembly : iMobileDevice-net.dll Syntax public enum UsbmuxdEventType Fields Name Description DeviceAdd DevicePaired DeviceRemove"
  },
  "api/iMobileDevice.Service.ServiceError.html": {
    "href": "api/iMobileDevice.Service.ServiceError.html",
    "title": "Enum ServiceError | imobiledevice-net API",
    "keywords": "Enum ServiceError Error Codes Namespace : iMobileDevice.Service Assembly : iMobileDevice-net.dll Syntax public enum ServiceError Fields Name Description InvalidArg MuxError SslError StartServiceError Success UnknownError Extension Methods ServiceErrorExtensions.ThrowOnError() ServiceErrorExtensions.ThrowOnError(String) ServiceErrorExtensions.IsError()"
  },
  "api/iMobileDevice.Service.ServiceClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.Service.ServiceClientHandleDelegateMarshaler.html",
    "title": "Class ServiceClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class ServiceClientHandleDelegateMarshaler Inheritance System.Object ServiceClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Service Assembly : iMobileDevice-net.dll Syntax public class ServiceClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.Service.ServiceClientHandle.html": {
    "href": "api/iMobileDevice.Service.ServiceClientHandle.html",
    "title": "Class ServiceClientHandle | imobiledevice-net API",
    "keywords": "Class ServiceClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid ServiceClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Service Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class ServiceClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source ServiceClientHandle() Declaration protected ServiceClientHandle() | Improve this Doc View Source ServiceClientHandle(Boolean) Declaration protected ServiceClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static ServiceClientHandle Zero { get; } Property Value Type Description ServiceClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static ServiceClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description ServiceClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static ServiceClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description ServiceClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.Service.ServiceApi.html": {
    "href": "api/iMobileDevice.Service.ServiceApi.html",
    "title": "Class ServiceApi | imobiledevice-net API",
    "keywords": "Class ServiceApi Inheritance System.Object ServiceApi Implements IServiceApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Service Assembly : iMobileDevice-net.dll Syntax public class ServiceApi : IServiceApi Constructors | Improve this Doc View Source ServiceApi(ILibiMobileDevice) Declaration public ServiceApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source service_client_factory_start_service(iDeviceHandle, String, ref IntPtr, String, ref ConstructorFunc, ref Int32) Starts a new service on the specified device with given name and connects to it. Declaration public virtual ServiceError service_client_factory_start_service(iDeviceHandle device, string serviceName, ref IntPtr client, string label, ref ConstructorFunc constructorFunc, ref int errorCode) Parameters Type Name Description iDeviceHandle device The device to connect to. System.String serviceName System.IntPtr client Pointer that will point to a newly allocated service_client_t upon successful return. Must be freed using service_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. ConstructorFunc constructorFunc System.Int32 errorCode Returns Type Description ServiceError SERVICE_E_SUCCESS on success, or a SERVICE_E_* error code otherwise. | Improve this Doc View Source service_client_free(IntPtr) Frees a service instance. Declaration public virtual ServiceError service_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The service instance to free. Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG when client is invalid, or a SERVICE_E_UNKNOWN_ERROR when another error occured. | Improve this Doc View Source service_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out ServiceClientHandle) Creates a new service for the specified service descriptor. Declaration public virtual ServiceError service_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out ServiceClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. ServiceClientHandle client Pointer that will be set to a newly allocated service_client_t upon successful return. Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG when one of the arguments is invalid, or SERVICE_E_MUX_ERROR when connecting to the device failed. | Improve this Doc View Source service_disable_ssl(ServiceClientHandle) Disable SSL for the given service client. Declaration public virtual ServiceError service_disable_ssl(ServiceClientHandle client) Parameters Type Name Description ServiceClientHandle client The connected service client for that SSL should be disabled. Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG if client or client->connection is NULL, or SERVICE_E_UNKNOWN_ERROR otherwise. | Improve this Doc View Source service_enable_ssl(ServiceClientHandle) Enable SSL for the given service client. Declaration public virtual ServiceError service_enable_ssl(ServiceClientHandle client) Parameters Type Name Description ServiceClientHandle client The connected service client for that SSL should be enabled. Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG if client or client->connection is NULL, SERVICE_E_SSL_ERROR when SSL could not be enabled, or SERVICE_E_UNKNOWN_ERROR otherwise. | Improve this Doc View Source service_receive(ServiceClientHandle, Byte[], UInt32, ref UInt32) Receives data using the given service client. Declaration public virtual ServiceError service_receive(ServiceClientHandle client, byte[] data, uint size, ref uint received) Parameters Type Name Description ServiceClientHandle client The service client to use for receiving System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG when one or more parameters are invalid, SERVICE_E_MUX_ERROR when a communication error occurs, or SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source service_receive_with_timeout(ServiceClientHandle, Byte[], UInt32, ref UInt32, UInt32) Receives data using the given service client with specified timeout. Declaration public virtual ServiceError service_receive_with_timeout(ServiceClientHandle client, byte[] data, uint size, ref uint received, uint timeout) Parameters Type Name Description ServiceClientHandle client The service client to use for receiving System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) System.UInt32 timeout Maximum time in milliseconds to wait for data. Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG when one or more parameters are invalid, SERVICE_E_MUX_ERROR when a communication error occurs, or SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source service_send(ServiceClientHandle, Byte[], UInt32, ref UInt32) Sends data using the given service client. Declaration public virtual ServiceError service_send(ServiceClientHandle client, byte[] data, uint size, ref uint sent) Parameters Type Name Description ServiceClientHandle client The service client to use for sending. System.Byte [] data Data to send System.UInt32 size Size of the data to send System.UInt32 sent Number of bytes sent (can be NULL to ignore) Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG when one or more parameters are invalid, or SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. Implements IServiceApi"
  },
  "api/iMobileDevice.PropertyListService.html": {
    "href": "api/iMobileDevice.PropertyListService.html",
    "title": "Namespace iMobileDevice.PropertyListService | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.PropertyListService Classes PropertyListServiceApi PropertyListServiceClientHandle PropertyListServiceClientHandleDelegateMarshaler PropertyListServiceErrorExtensions PropertyListServiceException PropertyListServiceNativeMethods Interfaces IPropertyListServiceApi Enums PropertyListServiceError"
  },
  "api/iMobileDevice.PropertyListService.PropertyListServiceNativeMethods.html": {
    "href": "api/iMobileDevice.PropertyListService.PropertyListServiceNativeMethods.html",
    "title": "Class PropertyListServiceNativeMethods | imobiledevice-net API",
    "keywords": "Class PropertyListServiceNativeMethods Inheritance System.Object PropertyListServiceNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.PropertyListService Assembly : iMobileDevice-net.dll Syntax public class PropertyListServiceNativeMethods Methods property_list_service_client_free(IntPtr) Frees a PropertyList service. Declaration public static PropertyListServiceError property_list_service_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The property list service to free. Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when client is invalid, or a PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR when another error occured. property_list_service_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out PropertyListServiceClientHandle) Creates a new property list service for the specified port. Declaration public static PropertyListServiceError property_list_service_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out PropertyListServiceClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. PropertyListServiceClientHandle client Pointer that will be set to a newly allocated property_list_service_client_t upon successful return. Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when one of the arguments is invalid, or PROPERTY_LIST_SERVICE_E_MUX_ERROR when connecting to the device failed. property_list_service_disable_ssl(PropertyListServiceClientHandle) Disable SSL for the given property list service client. Declaration public static PropertyListServiceError property_list_service_disable_ssl(PropertyListServiceClientHandle client) Parameters Type Name Description PropertyListServiceClientHandle client The connected property list service client for which SSL should be disabled. Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG if client or client->connection is NULL, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR otherwise. property_list_service_enable_ssl(PropertyListServiceClientHandle) Enable SSL for the given property list service client. Declaration public static PropertyListServiceError property_list_service_enable_ssl(PropertyListServiceClientHandle client) Parameters Type Name Description PropertyListServiceClientHandle client The connected property list service client for which SSL should be enabled. Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG if client or client->connection is NULL, PROPERTY_LIST_SERVICE_E_SSL_ERROR when SSL could not be enabled, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR otherwise. property_list_service_receive_plist(PropertyListServiceClientHandle, out PlistHandle) Receives a plist using the given property list service client. Binary or XML plists are automatically handled. This function is like property_list_service_receive_plist_with_timeout using a timeout of 10 seconds. Declaration public static PropertyListServiceError property_list_service_receive_plist(PropertyListServiceClientHandle client, out PlistHandle plist) Parameters Type Name Description PropertyListServiceClientHandle client The property list service client to use for receiving PlistHandle plist pointer to a plist_t that will point to the received plist upon successful return Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when client or *plist is NULL, PROPERTY_LIST_SERVICE_E_PLIST_ERROR when the received data cannot be converted to a plist, PROPERTY_LIST_SERVICE_E_MUX_ERROR when a communication error occurs, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. property_list_service_receive_plist_with_timeout(PropertyListServiceClientHandle, out PlistHandle, UInt32) Receives a plist using the given property list service client with specified timeout. Binary or XML plists are automatically handled. Declaration public static PropertyListServiceError property_list_service_receive_plist_with_timeout(PropertyListServiceClientHandle client, out PlistHandle plist, uint timeout) Parameters Type Name Description PropertyListServiceClientHandle client The property list service client to use for receiving PlistHandle plist pointer to a plist_t that will point to the received plist upon successful return System.UInt32 timeout Maximum time in milliseconds to wait for data. Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when connection or *plist is NULL, PROPERTY_LIST_SERVICE_E_PLIST_ERROR when the received data cannot be converted to a plist, PROPERTY_LIST_SERVICE_E_MUX_ERROR when a communication error occurs, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. property_list_service_send_binary_plist(PropertyListServiceClientHandle, PlistHandle) Sends a binary plist. Declaration public static PropertyListServiceError property_list_service_send_binary_plist(PropertyListServiceClientHandle client, PlistHandle plist) Parameters Type Name Description PropertyListServiceClientHandle client The property list service client to use for sending. PlistHandle plist plist to send Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when client or plist is NULL, PROPERTY_LIST_SERVICE_E_PLIST_ERROR when dict is not a valid plist, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. property_list_service_send_xml_plist(PropertyListServiceClientHandle, PlistHandle) Sends an XML plist. Declaration public static PropertyListServiceError property_list_service_send_xml_plist(PropertyListServiceClientHandle client, PlistHandle plist) Parameters Type Name Description PropertyListServiceClientHandle client The property list service client to use for sending. PlistHandle plist plist to send Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when client or plist is NULL, PROPERTY_LIST_SERVICE_E_PLIST_ERROR when dict is not a valid plist, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs."
  },
  "api/iMobileDevice.Plist.PlistHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.Plist.PlistHandleDelegateMarshaler.html",
    "title": "Class PlistHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class PlistHandleDelegateMarshaler Inheritance System.Object PlistHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Plist Assembly : iMobileDevice-net.dll Syntax public class PlistHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.Plist.PlistHandle.html": {
    "href": "api/iMobileDevice.Plist.PlistHandle.html",
    "title": "Class PlistHandle | imobiledevice-net API",
    "keywords": "Class PlistHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid PlistHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Plist Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class PlistHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source PlistHandle() Declaration protected PlistHandle() | Improve this Doc View Source PlistHandle(Boolean) Declaration protected PlistHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static PlistHandle Zero { get; } Property Value Type Description PlistHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static PlistHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description PlistHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static PlistHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description PlistHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.NotificationProxy.NotificationProxyClientHandle.html": {
    "href": "api/iMobileDevice.NotificationProxy.NotificationProxyClientHandle.html",
    "title": "Class NotificationProxyClientHandle | imobiledevice-net API",
    "keywords": "Class NotificationProxyClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid NotificationProxyClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.NotificationProxy Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class NotificationProxyClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source NotificationProxyClientHandle() Declaration protected NotificationProxyClientHandle() | Improve this Doc View Source NotificationProxyClientHandle(Boolean) Declaration protected NotificationProxyClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static NotificationProxyClientHandle Zero { get; } Property Value Type Description NotificationProxyClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static NotificationProxyClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description NotificationProxyClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static NotificationProxyClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description NotificationProxyClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.NotificationProxy.NotificationProxyApi.html": {
    "href": "api/iMobileDevice.NotificationProxy.NotificationProxyApi.html",
    "title": "Class NotificationProxyApi | imobiledevice-net API",
    "keywords": "Class NotificationProxyApi Inheritance System.Object NotificationProxyApi Implements INotificationProxyApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.NotificationProxy Assembly : iMobileDevice-net.dll Syntax public class NotificationProxyApi : INotificationProxyApi Constructors | Improve this Doc View Source NotificationProxyApi(ILibiMobileDevice) Declaration public NotificationProxyApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source np_client_free(IntPtr) Disconnects a notification_proxy client from the device and frees up the notification_proxy client data. Declaration public virtual NotificationProxyError np_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The notification_proxy client to disconnect and free. Returns Type Description NotificationProxyError NP_E_SUCCESS on success, or NP_E_INVALID_ARG when client is NULL. | Improve this Doc View Source np_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out NotificationProxyClientHandle) Connects to the notification_proxy on the specified device. Declaration public virtual NotificationProxyError np_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out NotificationProxyClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. NotificationProxyClientHandle client Pointer that will be set to a newly allocated np_client_t upon successful return. Returns Type Description NotificationProxyError NP_E_SUCCESS on success, NP_E_INVALID_ARG when device is NULL, or NP_E_CONN_FAILED when the connection to the device could not be established. | Improve this Doc View Source np_client_start_service(iDeviceHandle, out NotificationProxyClientHandle, String) Starts a new notification proxy service on the specified device and connects to it. Declaration public virtual NotificationProxyError np_client_start_service(iDeviceHandle device, out NotificationProxyClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. NotificationProxyClientHandle client Pointer that will point to a newly allocated np_client_t upon successful return. Must be freed using np_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description NotificationProxyError NP_E_SUCCESS on success, or an NP_E_* error code otherwise. | Improve this Doc View Source np_observe_notification(NotificationProxyClientHandle, String) Tells the device to send a notification on the specified event. Declaration public virtual NotificationProxyError np_observe_notification(NotificationProxyClientHandle client, string notification) Parameters Type Name Description NotificationProxyClientHandle client The client to send to System.String notification The notifications that should be observed. Returns Type Description NotificationProxyError NP_E_SUCCESS on success, NP_E_INVALID_ARG when client or notification are NULL, or an error returned by np_plist_send. | Improve this Doc View Source np_observe_notifications(NotificationProxyClientHandle, out String) Tells the device to send a notification on specified events. Declaration public virtual NotificationProxyError np_observe_notifications(NotificationProxyClientHandle client, out string notificationSpec) Parameters Type Name Description NotificationProxyClientHandle client The client to send to System.String notificationSpec Returns Type Description NotificationProxyError NP_E_SUCCESS on success, NP_E_INVALID_ARG when client is null, or an error returned by np_observe_notification. | Improve this Doc View Source np_post_notification(NotificationProxyClientHandle, String) Sends a notification to the device's notification_proxy. Declaration public virtual NotificationProxyError np_post_notification(NotificationProxyClientHandle client, string notification) Parameters Type Name Description NotificationProxyClientHandle client The client to send to System.String notification The notification message to send Returns Type Description NotificationProxyError NP_E_SUCCESS on success, or an error returned by np_plist_send | Improve this Doc View Source np_set_notify_callback(NotificationProxyClientHandle, NotificationProxyNotifyCallBack, IntPtr) This function allows an application to define a callback function that will be called when a notification has been received. It will start a thread that polls for notifications and calls the callback function if a notification has been received. In case of an error condition when polling for notifications - e.g. device disconnect - the thread will call the callback function with an empty notification \"\" and terminate itself. Declaration public virtual NotificationProxyError np_set_notify_callback(NotificationProxyClientHandle client, NotificationProxyNotifyCallBack notifyCallBack, IntPtr userdata) Parameters Type Name Description NotificationProxyClientHandle client the NP client NotificationProxyNotifyCallBack notifyCallBack System.IntPtr userdata Returns Type Description NotificationProxyError NP_E_SUCCESS when the callback was successfully registered, NP_E_INVALID_ARG when client is NULL, or NP_E_UNKNOWN_ERROR when the callback thread could no be created. Remarks Only one callback function can be registered at the same time; any previously set callback function will be removed automatically. Implements INotificationProxyApi"
  },
  "api/iMobileDevice.MobileSync.MobileSyncAnchorsHandle.html": {
    "href": "api/iMobileDevice.MobileSync.MobileSyncAnchorsHandle.html",
    "title": "Class MobileSyncAnchorsHandle | imobiledevice-net API",
    "keywords": "Class MobileSyncAnchorsHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid MobileSyncAnchorsHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileSync Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class MobileSyncAnchorsHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source MobileSyncAnchorsHandle() Declaration protected MobileSyncAnchorsHandle() | Improve this Doc View Source MobileSyncAnchorsHandle(Boolean) Declaration protected MobileSyncAnchorsHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static MobileSyncAnchorsHandle Zero { get; } Property Value Type Description MobileSyncAnchorsHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static MobileSyncAnchorsHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description MobileSyncAnchorsHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static MobileSyncAnchorsHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description MobileSyncAnchorsHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.MobileSync.MobileSyncAnchors.html": {
    "href": "api/iMobileDevice.MobileSync.MobileSyncAnchors.html",
    "title": "Struct MobileSyncAnchors | imobiledevice-net API",
    "keywords": "Struct MobileSyncAnchors Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : iMobileDevice.MobileSync Assembly : iMobileDevice-net.dll Syntax public struct MobileSyncAnchors Fields | Improve this Doc View Source computer_anchor Declaration public IntPtr computer_anchor Field Value Type Description System.IntPtr | Improve this Doc View Source device_anchor Declaration public IntPtr device_anchor Field Value Type Description System.IntPtr Properties | Improve this Doc View Source computer_anchorString Declaration public string computer_anchorString { get; } Property Value Type Description System.String | Improve this Doc View Source device_anchorString Declaration public string device_anchorString { get; } Property Value Type Description System.String"
  },
  "api/iMobileDevice.MobileBackup2.MobileBackup2ErrorExtensions.html": {
    "href": "api/iMobileDevice.MobileBackup2.MobileBackup2ErrorExtensions.html",
    "title": "Class MobileBackup2ErrorExtensions | imobiledevice-net API",
    "keywords": "Class MobileBackup2ErrorExtensions Inheritance System.Object MobileBackup2ErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileBackup2 Assembly : iMobileDevice-net.dll Syntax public static class MobileBackup2ErrorExtensions Methods | Improve this Doc View Source IsError(MobileBackup2Error) Declaration public static bool IsError(this MobileBackup2Error value) Parameters Type Name Description MobileBackup2Error value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(MobileBackup2Error) Declaration public static void ThrowOnError(this MobileBackup2Error value) Parameters Type Name Description MobileBackup2Error value | Improve this Doc View Source ThrowOnError(MobileBackup2Error, String) Declaration public static void ThrowOnError(this MobileBackup2Error value, string message) Parameters Type Name Description MobileBackup2Error value System.String message"
  },
  "api/iMobileDevice.MobileBackup2.MobileBackup2Error.html": {
    "href": "api/iMobileDevice.MobileBackup2.MobileBackup2Error.html",
    "title": "Enum MobileBackup2Error | imobiledevice-net API",
    "keywords": "Enum MobileBackup2Error Error Codes Namespace : iMobileDevice.MobileBackup2 Assembly : iMobileDevice-net.dll Syntax public enum MobileBackup2Error Fields Name Description BadVersion InvalidArg MuxError NoCommonVersion PlistError ReplyNotOk Success UnknownError Extension Methods MobileBackup2ErrorExtensions.ThrowOnError() MobileBackup2ErrorExtensions.ThrowOnError(String) MobileBackup2ErrorExtensions.IsError()"
  },
  "api/iMobileDevice.Lockdown.LockdownException.html": {
    "href": "api/iMobileDevice.Lockdown.LockdownException.html",
    "title": "Class LockdownException | imobiledevice-net API",
    "keywords": "Class LockdownException Inheritance System.Object System.Exception LockdownException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.Lockdown Assembly : iMobileDevice-net.dll Syntax [Serializable] public class LockdownException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source LockdownException() Initializes a new instance of the LockdownException class. Declaration public LockdownException() | Improve this Doc View Source LockdownException(LockdownError) Declaration public LockdownException(LockdownError error) Parameters Type Name Description LockdownError error | Improve this Doc View Source LockdownException(LockdownError, String) Declaration public LockdownException(LockdownError error, string message) Parameters Type Name Description LockdownError error System.String message | Improve this Doc View Source LockdownException(SerializationInfo, StreamingContext) Initializes a new instance of the LockdownException class with serialized data. Declaration protected LockdownException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source LockdownException(String) Initializes a new instance of the LockdownException class with a specified error message. Declaration public LockdownException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source LockdownException(String, Exception) Initializes a new instance of the LockdownException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public LockdownException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual LockdownError ErrorCode { get; } Property Value Type Description LockdownError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.Lockdown.LockdownErrorExtensions.html": {
    "href": "api/iMobileDevice.Lockdown.LockdownErrorExtensions.html",
    "title": "Class LockdownErrorExtensions | imobiledevice-net API",
    "keywords": "Class LockdownErrorExtensions Inheritance System.Object LockdownErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Lockdown Assembly : iMobileDevice-net.dll Syntax public static class LockdownErrorExtensions Methods | Improve this Doc View Source IsError(LockdownError) Declaration public static bool IsError(this LockdownError value) Parameters Type Name Description LockdownError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(LockdownError) Declaration public static void ThrowOnError(this LockdownError value) Parameters Type Name Description LockdownError value | Improve this Doc View Source ThrowOnError(LockdownError, String) Declaration public static void ThrowOnError(this LockdownError value, string message) Parameters Type Name Description LockdownError value System.String message"
  },
  "api/iMobileDevice.InstallationProxy.InstallationProxyClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.InstallationProxy.InstallationProxyClientHandleDelegateMarshaler.html",
    "title": "Class InstallationProxyClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class InstallationProxyClientHandleDelegateMarshaler Inheritance System.Object InstallationProxyClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.InstallationProxy Assembly : iMobileDevice-net.dll Syntax public class InstallationProxyClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.InstallationProxy.InstallationProxyClientHandle.html": {
    "href": "api/iMobileDevice.InstallationProxy.InstallationProxyClientHandle.html",
    "title": "Class InstallationProxyClientHandle | imobiledevice-net API",
    "keywords": "Class InstallationProxyClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid InstallationProxyClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.InstallationProxy Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class InstallationProxyClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source InstallationProxyClientHandle() Declaration protected InstallationProxyClientHandle() | Improve this Doc View Source InstallationProxyClientHandle(Boolean) Declaration protected InstallationProxyClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static InstallationProxyClientHandle Zero { get; } Property Value Type Description InstallationProxyClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static InstallationProxyClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description InstallationProxyClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static InstallationProxyClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description InstallationProxyClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.iDevice.iDeviceError.html": {
    "href": "api/iMobileDevice.iDevice.iDeviceError.html",
    "title": "Enum iDeviceError | imobiledevice-net API",
    "keywords": "Enum iDeviceError Error Codes Namespace : iMobileDevice.iDevice Assembly : iMobileDevice-net.dll Syntax public enum iDeviceError Fields Name Description BadHeader InvalidArg NoDevice NotEnoughData SslError Success UnknownError Extension Methods iDeviceErrorExtensions.ThrowOnError() iDeviceErrorExtensions.ThrowOnError(String) iDeviceErrorExtensions.IsError()"
  },
  "api/iMobileDevice.iDevice.iDeviceDebugCallBack.html": {
    "href": "api/iMobileDevice.iDevice.iDeviceDebugCallBack.html",
    "title": "Delegate iDeviceDebugCallBack | imobiledevice-net API",
    "keywords": "Delegate iDeviceDebugCallBack Namespace : iMobileDevice.iDevice Assembly : iMobileDevice-net.dll Syntax public delegate void iDeviceDebugCallBack(string message); Parameters Type Name Description System.String message"
  },
  "api/iMobileDevice.HouseArrest.HouseArrestErrorExtensions.html": {
    "href": "api/iMobileDevice.HouseArrest.HouseArrestErrorExtensions.html",
    "title": "Class HouseArrestErrorExtensions | imobiledevice-net API",
    "keywords": "Class HouseArrestErrorExtensions Inheritance System.Object HouseArrestErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.HouseArrest Assembly : iMobileDevice-net.dll Syntax public static class HouseArrestErrorExtensions Methods | Improve this Doc View Source IsError(HouseArrestError) Declaration public static bool IsError(this HouseArrestError value) Parameters Type Name Description HouseArrestError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(HouseArrestError) Declaration public static void ThrowOnError(this HouseArrestError value) Parameters Type Name Description HouseArrestError value | Improve this Doc View Source ThrowOnError(HouseArrestError, String) Declaration public static void ThrowOnError(this HouseArrestError value, string message) Parameters Type Name Description HouseArrestError value System.String message"
  },
  "api/iMobileDevice.HeartBeat.HeartBeatException.html": {
    "href": "api/iMobileDevice.HeartBeat.HeartBeatException.html",
    "title": "Class HeartBeatException | imobiledevice-net API",
    "keywords": "Class HeartBeatException Inheritance System.Object System.Exception HeartBeatException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.HeartBeat Assembly : iMobileDevice-net.dll Syntax [Serializable] public class HeartBeatException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source HeartBeatException() Initializes a new instance of the HeartBeatException class. Declaration public HeartBeatException() | Improve this Doc View Source HeartBeatException(HeartBeatError) Declaration public HeartBeatException(HeartBeatError error) Parameters Type Name Description HeartBeatError error | Improve this Doc View Source HeartBeatException(HeartBeatError, String) Declaration public HeartBeatException(HeartBeatError error, string message) Parameters Type Name Description HeartBeatError error System.String message | Improve this Doc View Source HeartBeatException(SerializationInfo, StreamingContext) Initializes a new instance of the HeartBeatException class with serialized data. Declaration protected HeartBeatException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source HeartBeatException(String) Initializes a new instance of the HeartBeatException class with a specified error message. Declaration public HeartBeatException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source HeartBeatException(String, Exception) Initializes a new instance of the HeartBeatException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public HeartBeatException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual HeartBeatError ErrorCode { get; } Property Value Type Description HeartBeatError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.FileRelay.FileRelayNativeMethods.html": {
    "href": "api/iMobileDevice.FileRelay.FileRelayNativeMethods.html",
    "title": "Class FileRelayNativeMethods | imobiledevice-net API",
    "keywords": "Class FileRelayNativeMethods Inheritance System.Object FileRelayNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.FileRelay Assembly : iMobileDevice-net.dll Syntax public class FileRelayNativeMethods Methods file_relay_client_free(IntPtr) Disconnects a file_relay client from the device and frees up the file_relay client data. Declaration public static FileRelayError file_relay_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The file_relay client to disconnect and free. Returns Type Description FileRelayError FILE_RELAY_E_SUCCESS on success, FILE_RELAY_E_INVALID_ARG when one of client or client->parent is invalid, or FILE_RELAY_E_UNKNOWN_ERROR when the was an error freeing the parent property_list_service client. file_relay_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out FileRelayClientHandle) Connects to the file_relay service on the specified device. Declaration public static FileRelayError file_relay_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out FileRelayClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. FileRelayClientHandle client Reference that will point to a newly allocated file_relay_client_t upon successful return. Returns Type Description FileRelayError FILE_RELAY_E_SUCCESS on success, FILE_RELAY_E_INVALID_ARG when one of the parameters is invalid, or FILE_RELAY_E_MUX_ERROR when the connection failed. file_relay_client_start_service(iDeviceHandle, out FileRelayClientHandle, String) Starts a new file_relay service on the specified device and connects to it. Declaration public static FileRelayError file_relay_client_start_service(iDeviceHandle device, out FileRelayClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. FileRelayClientHandle client Pointer that will point to a newly allocated file_relay_client_t upon successful return. Must be freed using file_relay_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description FileRelayError FILE_RELAY_E_SUCCESS on success, or an FILE_RELAY_E_* error code otherwise. file_relay_request_sources(FileRelayClientHandle, out IntPtr, out iDeviceConnectionHandle) Request data for the given sources. Declaration public static FileRelayError file_relay_request_sources(FileRelayClientHandle client, out IntPtr sources, out iDeviceConnectionHandle connection) Parameters Type Name Description FileRelayClientHandle client The connected file_relay client. System.IntPtr sources A NULL-terminated list of sources to retrieve. Valid sources are: AppleSupport Network VPN WiFi UserDatabases CrashReporter tmp SystemConfiguration iDeviceConnectionHandle connection The connection that has to be used for receiving the data using idevice_connection_receive(). The connection will be closed automatically by the device, but use file_relay_client_free() to clean up properly. Returns Type Description FileRelayError FILE_RELAY_E_SUCCESS on succes, FILE_RELAY_E_INVALID_ARG when one or more parameters are invalid, FILE_RELAY_E_MUX_ERROR if a communication error occurs, FILE_RELAY_E_PLIST_ERROR when the received result is NULL or is not a valid plist, FILE_RELAY_E_INVALID_SOURCE if one or more sources are invalid, FILE_RELAY_E_STAGING_EMPTY if no data is available for the given sources, or FILE_RELAY_E_UNKNOWN_ERROR otherwise. Remarks WARNING: Don't call this function without reading the data afterwards. A directory mobile_file_relay.XXXX used for creating the archive will remain in the /tmp directory otherwise. | Improve this Doc View Source file_relay_request_sources(FileRelayClientHandle, out String, out iDeviceConnectionHandle) Declaration public static FileRelayError file_relay_request_sources(FileRelayClientHandle client, out string sources, out iDeviceConnectionHandle connection) Parameters Type Name Description FileRelayClientHandle client System.String sources iDeviceConnectionHandle connection Returns Type Description FileRelayError file_relay_request_sources_timeout(FileRelayClientHandle, out IntPtr, out iDeviceConnectionHandle, UInt32) Request data for the given sources. Calls file_relay_request_sources_timeout() with a timeout of 60000 milliseconds (60 seconds). Declaration public static FileRelayError file_relay_request_sources_timeout(FileRelayClientHandle client, out IntPtr sources, out iDeviceConnectionHandle connection, uint timeout) Parameters Type Name Description FileRelayClientHandle client The connected file_relay client. System.IntPtr sources A NULL-terminated list of sources to retrieve. Valid sources are: AppleSupport Network VPN WiFi UserDatabases CrashReporter tmp SystemConfiguration iDeviceConnectionHandle connection The connection that has to be used for receiving the data using idevice_connection_receive(). The connection will be closed automatically by the device, but use file_relay_client_free() to clean up properly. System.UInt32 timeout Returns Type Description FileRelayError FILE_RELAY_E_SUCCESS on succes, FILE_RELAY_E_INVALID_ARG when one or more parameters are invalid, FILE_RELAY_E_MUX_ERROR if a communication error occurs, FILE_RELAY_E_PLIST_ERROR when the received result is NULL or is not a valid plist, FILE_RELAY_E_INVALID_SOURCE if one or more sources are invalid, FILE_RELAY_E_STAGING_EMPTY if no data is available for the given sources, or FILE_RELAY_E_UNKNOWN_ERROR otherwise. Remarks WARNING: Don't call this function without reading the data afterwards. A directory mobile_file_relay.XXXX used for creating the archive will remain in the /tmp directory otherwise. | Improve this Doc View Source file_relay_request_sources_timeout(FileRelayClientHandle, out String, out iDeviceConnectionHandle, UInt32) Declaration public static FileRelayError file_relay_request_sources_timeout(FileRelayClientHandle client, out string sources, out iDeviceConnectionHandle connection, uint timeout) Parameters Type Name Description FileRelayClientHandle client System.String sources iDeviceConnectionHandle connection System.UInt32 timeout Returns Type Description FileRelayError"
  },
  "api/iMobileDevice.DiagnosticsRelay.DiagnosticsRelayNativeMethods.html": {
    "href": "api/iMobileDevice.DiagnosticsRelay.DiagnosticsRelayNativeMethods.html",
    "title": "Class DiagnosticsRelayNativeMethods | imobiledevice-net API",
    "keywords": "Class DiagnosticsRelayNativeMethods Inheritance System.Object DiagnosticsRelayNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.DiagnosticsRelay Assembly : iMobileDevice-net.dll Syntax public class DiagnosticsRelayNativeMethods Methods diagnostics_relay_client_free(IntPtr) Disconnects a diagnostics_relay client from the device and frees up the diagnostics_relay client data. Declaration public static DiagnosticsRelayError diagnostics_relay_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The diagnostics_relay client to disconnect and free. Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when one of client or client->parent is invalid, or DIAGNOSTICS_RELAY_E_UNKNOWN_ERROR when the was an error freeing the parent property_list_service client. diagnostics_relay_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out DiagnosticsRelayClientHandle) Connects to the diagnostics_relay service on the specified device. Declaration public static DiagnosticsRelayError diagnostics_relay_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out DiagnosticsRelayClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. DiagnosticsRelayClientHandle client Reference that will point to a newly allocated diagnostics_relay_client_t upon successful return. Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when one of the parameters is invalid, or DIAGNOSTICS_RELAY_E_MUX_ERROR when the connection failed. diagnostics_relay_client_start_service(iDeviceHandle, out DiagnosticsRelayClientHandle, String) Starts a new diagnostics_relay service on the specified device and connects to it. Declaration public static DiagnosticsRelayError diagnostics_relay_client_start_service(iDeviceHandle device, out DiagnosticsRelayClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. DiagnosticsRelayClientHandle client Pointer that will point to a newly allocated diagnostics_relay_client_t upon successful return. Must be freed using diagnostics_relay_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, or an DIAGNOSTICS_RELAY_E_* error code otherwise. diagnostics_relay_goodbye(DiagnosticsRelayClientHandle) Sends the Goodbye request signaling the end of communication. Declaration public static DiagnosticsRelayError diagnostics_relay_goodbye(DiagnosticsRelayClientHandle client) Parameters Type Name Description DiagnosticsRelayClientHandle client The diagnostics_relay client Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client is NULL, DIAGNOSTICS_RELAY_E_PLIST_ERROR if the device did not acknowledge the request diagnostics_relay_query_ioregistry_entry(DiagnosticsRelayClientHandle, String, String, out PlistHandle) Declaration public static DiagnosticsRelayError diagnostics_relay_query_ioregistry_entry(DiagnosticsRelayClientHandle client, string name, string classname, out PlistHandle result) Parameters Type Name Description DiagnosticsRelayClientHandle client System.String name System.String classname PlistHandle result Returns Type Description DiagnosticsRelayError diagnostics_relay_query_ioregistry_plane(DiagnosticsRelayClientHandle, String, out PlistHandle) Declaration public static DiagnosticsRelayError diagnostics_relay_query_ioregistry_plane(DiagnosticsRelayClientHandle client, string plane, out PlistHandle result) Parameters Type Name Description DiagnosticsRelayClientHandle client System.String plane PlistHandle result Returns Type Description DiagnosticsRelayError diagnostics_relay_query_mobilegestalt(DiagnosticsRelayClientHandle, PlistHandle, out PlistHandle) Declaration public static DiagnosticsRelayError diagnostics_relay_query_mobilegestalt(DiagnosticsRelayClientHandle client, PlistHandle keys, out PlistHandle result) Parameters Type Name Description DiagnosticsRelayClientHandle client PlistHandle keys PlistHandle result Returns Type Description DiagnosticsRelayError diagnostics_relay_request_diagnostics(DiagnosticsRelayClientHandle, String, out PlistHandle) Shutdown of the device and optionally show a user notification. Declaration public static DiagnosticsRelayError diagnostics_relay_request_diagnostics(DiagnosticsRelayClientHandle client, string type, out PlistHandle diagnostics) Parameters Type Name Description DiagnosticsRelayClientHandle client The diagnostics_relay client System.String type PlistHandle diagnostics Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client is NULL, DIAGNOSTICS_RELAY_E_PLIST_ERROR if the device did not acknowledge the request diagnostics_relay_restart(DiagnosticsRelayClientHandle, DiagnosticsRelayAction) Restart the device and optionally show a user notification. Declaration public static DiagnosticsRelayError diagnostics_relay_restart(DiagnosticsRelayClientHandle client, DiagnosticsRelayAction flags) Parameters Type Name Description DiagnosticsRelayClientHandle client The diagnostics_relay client DiagnosticsRelayAction flags A binary flag combination of DIAGNOSTICS_RELAY_ACTION_FLAG_WAIT_FOR_DISCONNECT to wait until diagnostics_relay_client_free() disconnects before execution and DIAGNOSTICS_RELAY_ACTION_FLAG_DISPLAY_FAIL to show a \"FAIL\" dialog or DIAGNOSTICS_RELAY_ACTION_FLAG_DISPLAY_PASS to show an \"OK\" dialog Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client is NULL, DIAGNOSTICS_RELAY_E_PLIST_ERROR if the device did not acknowledge the request diagnostics_relay_shutdown(DiagnosticsRelayClientHandle, DiagnosticsRelayAction) Shutdown of the device and optionally show a user notification. Declaration public static DiagnosticsRelayError diagnostics_relay_shutdown(DiagnosticsRelayClientHandle client, DiagnosticsRelayAction flags) Parameters Type Name Description DiagnosticsRelayClientHandle client The diagnostics_relay client DiagnosticsRelayAction flags A binary flag combination of DIAGNOSTICS_RELAY_ACTION_FLAG_WAIT_FOR_DISCONNECT to wait until diagnostics_relay_client_free() disconnects before execution and DIAGNOSTICS_RELAY_ACTION_FLAG_DISPLAY_FAIL to show a \"FAIL\" dialog or DIAGNOSTICS_RELAY_ACTION_FLAG_DISPLAY_PASS to show an \"OK\" dialog Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client is NULL, DIAGNOSTICS_RELAY_E_PLIST_ERROR if the device did not acknowledge the request diagnostics_relay_sleep(DiagnosticsRelayClientHandle) Puts the device into deep sleep mode and disconnects from host. Declaration public static DiagnosticsRelayError diagnostics_relay_sleep(DiagnosticsRelayClientHandle client) Parameters Type Name Description DiagnosticsRelayClientHandle client The diagnostics_relay client Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client is NULL, DIAGNOSTICS_RELAY_E_PLIST_ERROR if the device did not acknowledge the request"
  },
  "api/iMobileDevice.DiagnosticsRelay.DiagnosticsRelayClientHandle.html": {
    "href": "api/iMobileDevice.DiagnosticsRelay.DiagnosticsRelayClientHandle.html",
    "title": "Class DiagnosticsRelayClientHandle | imobiledevice-net API",
    "keywords": "Class DiagnosticsRelayClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid DiagnosticsRelayClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.DiagnosticsRelay Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class DiagnosticsRelayClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source DiagnosticsRelayClientHandle() Declaration protected DiagnosticsRelayClientHandle() | Improve this Doc View Source DiagnosticsRelayClientHandle(Boolean) Declaration protected DiagnosticsRelayClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static DiagnosticsRelayClientHandle Zero { get; } Property Value Type Description DiagnosticsRelayClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static DiagnosticsRelayClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description DiagnosticsRelayClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static DiagnosticsRelayClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description DiagnosticsRelayClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.DebugServer.DebugServerErrorExtensions.html": {
    "href": "api/iMobileDevice.DebugServer.DebugServerErrorExtensions.html",
    "title": "Class DebugServerErrorExtensions | imobiledevice-net API",
    "keywords": "Class DebugServerErrorExtensions Inheritance System.Object DebugServerErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.DebugServer Assembly : iMobileDevice-net.dll Syntax public static class DebugServerErrorExtensions Methods | Improve this Doc View Source IsError(DebugServerError) Declaration public static bool IsError(this DebugServerError value) Parameters Type Name Description DebugServerError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(DebugServerError) Declaration public static void ThrowOnError(this DebugServerError value) Parameters Type Name Description DebugServerError value | Improve this Doc View Source ThrowOnError(DebugServerError, String) Declaration public static void ThrowOnError(this DebugServerError value, string message) Parameters Type Name Description DebugServerError value System.String message"
  },
  "api/iMobileDevice.Afc.IAfcApi.html": {
    "href": "api/iMobileDevice.Afc.IAfcApi.html",
    "title": "Interface IAfcApi | imobiledevice-net API",
    "keywords": "Interface IAfcApi Namespace : iMobileDevice.Afc Assembly : iMobileDevice-net.dll Syntax public interface IAfcApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.Afc . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source afc_client_free(IntPtr) Frees up an AFC client. If the connection was created by the client itself, the connection will be closed. Declaration AfcError afc_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The client to free. Returns Type Description AfcError | Improve this Doc View Source afc_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out AfcClientHandle) Makes a connection to the AFC service on the device. Declaration AfcError afc_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out AfcClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. AfcClientHandle client Pointer that will be set to a newly allocated afc_client_t upon successful return. Returns Type Description AfcError AFC_E_SUCCESS on success, AFC_E_INVALID_ARG if device or service is invalid, AFC_E_MUX_ERROR if the connection cannot be established, or AFC_E_NO_MEM if there is a memory allocation problem. | Improve this Doc View Source afc_client_start_service(iDeviceHandle, out AfcClientHandle, String) Starts a new AFC service on the specified device and connects to it. Declaration AfcError afc_client_start_service(iDeviceHandle device, out AfcClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. AfcClientHandle client Pointer that will point to a newly allocated afc_client_t upon successful return. Must be freed using afc_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description AfcError AFC_E_SUCCESS on success, or an AFC_E_* error code otherwise. | Improve this Doc View Source afc_dictionary_free(IntPtr) Frees up a char dictionary as returned by some AFC functions. Declaration AfcError afc_dictionary_free(IntPtr dictionary) Parameters Type Name Description System.IntPtr dictionary The char array terminated by an empty string. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_file_close(AfcClientHandle, UInt64) Closes a file on the device. Declaration AfcError afc_file_close(AfcClientHandle client, ulong handle) Parameters Type Name Description AfcClientHandle client The client to close the file with. System.UInt64 handle File handle of a previously opened file. Returns Type Description AfcError | Improve this Doc View Source afc_file_lock(AfcClientHandle, UInt64, AfcLockOp) Locks or unlocks a file on the device. Makes use of flock on the device. Declaration AfcError afc_file_lock(AfcClientHandle client, ulong handle, AfcLockOp operation) Parameters Type Name Description AfcClientHandle client The client to lock the file with. System.UInt64 handle File handle of a previously opened file. AfcLockOp operation the lock or unlock operation to perform, this is one of AFC_LOCK_SH (shared lock), AFC_LOCK_EX (exclusive lock), or AFC_LOCK_UN (unlock). Returns Type Description AfcError | Improve this Doc View Source afc_file_open(AfcClientHandle, String, AfcFileMode, ref UInt64) Opens a file on the device. Declaration AfcError afc_file_open(AfcClientHandle client, string filename, AfcFileMode fileMode, ref ulong handle) Parameters Type Name Description AfcClientHandle client The client to use to open the file. System.String filename The file to open. (must be a fully-qualified path) AfcFileMode fileMode System.UInt64 handle Pointer to a uint64_t that will hold the handle of the file Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_file_read(AfcClientHandle, UInt64, Byte[], UInt32, ref UInt32) Attempts to the read the given number of bytes from the given file. Declaration AfcError afc_file_read(AfcClientHandle client, ulong handle, byte[] data, uint length, ref uint bytesRead) Parameters Type Name Description AfcClientHandle client The relevant AFC client System.UInt64 handle File handle of a previously opened file System.Byte [] data The pointer to the memory region to store the read data System.UInt32 length The number of bytes to read System.UInt32 bytesRead Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_file_seek(AfcClientHandle, UInt64, Int64, Int32) Seeks to a given position of a pre-opened file on the device. Declaration AfcError afc_file_seek(AfcClientHandle client, ulong handle, long offset, int whence) Parameters Type Name Description AfcClientHandle client The client to use to seek to the position. System.UInt64 handle File handle of a previously opened. System.Int64 offset Seek offset. System.Int32 whence Seeking direction, one of SEEK_SET, SEEK_CUR, or SEEK_END. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_file_tell(AfcClientHandle, UInt64, ref UInt64) Returns current position in a pre-opened file on the device. Declaration AfcError afc_file_tell(AfcClientHandle client, ulong handle, ref ulong position) Parameters Type Name Description AfcClientHandle client The client to use. System.UInt64 handle File handle of a previously opened file. System.UInt64 position Position in bytes of indicator Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_file_truncate(AfcClientHandle, UInt64, UInt64) Sets the size of a file on the device. Declaration AfcError afc_file_truncate(AfcClientHandle client, ulong handle, ulong newsize) Parameters Type Name Description AfcClientHandle client The client to use to set the file size. System.UInt64 handle File handle of a previously opened file. System.UInt64 newsize The size to set the file to. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. Remarks This function is more akin to ftruncate than truncate, and truncate calls would have to open the file before calling this, sadly. | Improve this Doc View Source afc_file_write(AfcClientHandle, UInt64, Byte[], UInt32, ref UInt32) Writes a given number of bytes to a file. Declaration AfcError afc_file_write(AfcClientHandle client, ulong handle, byte[] data, uint length, ref uint bytesWritten) Parameters Type Name Description AfcClientHandle client The client to use to write to the file. System.UInt64 handle File handle of previously opened file. System.Byte [] data The data to write to the file. System.UInt32 length How much data to write. System.UInt32 bytesWritten Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_get_device_info(AfcClientHandle, out ReadOnlyCollection<String>) Get device information for a connected client. The device information returned is the device model as well as the free space, the total capacity and blocksize on the accessed disk partition. Declaration AfcError afc_get_device_info(AfcClientHandle client, out ReadOnlyCollection<string> deviceInformation) Parameters Type Name Description AfcClientHandle client The client to get device info for. System.Collections.ObjectModel.ReadOnlyCollection < System.String > deviceInformation Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_get_device_info_key(AfcClientHandle, String, out String) Get a specific key of the device info list for a client connection. Known key values are: Model, FSTotalBytes, FSFreeBytes and FSBlockSize. This is a helper function for afc_get_device_info(). Declaration AfcError afc_get_device_info_key(AfcClientHandle client, string key, out string value) Parameters Type Name Description AfcClientHandle client The client to get device info for. System.String key The key to get the value of. System.String value The value for the key if successful or NULL otherwise. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_get_file_info(AfcClientHandle, String, out ReadOnlyCollection<String>) Gets information about a specific file. Declaration AfcError afc_get_file_info(AfcClientHandle client, string filename, out ReadOnlyCollection<string> fileInformation) Parameters Type Name Description AfcClientHandle client The client to use to get the information of the file. System.String filename The fully-qualified path to the file. System.Collections.ObjectModel.ReadOnlyCollection < System.String > fileInformation Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_make_directory(AfcClientHandle, String) Creates a directory on the device. Declaration AfcError afc_make_directory(AfcClientHandle client, string path) Parameters Type Name Description AfcClientHandle client The client to use to make a directory. System.String path The directory's path. (must be a fully-qualified path, I assume all other mkdir restrictions apply as well) Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_make_link(AfcClientHandle, AfcLinkType, String, String) Creates a hard link or symbolic link on the device. Declaration AfcError afc_make_link(AfcClientHandle client, AfcLinkType linktype, string target, string linkname) Parameters Type Name Description AfcClientHandle client The client to use for making a link AfcLinkType linktype 1 = hard link, 2 = symlink System.String target The file to be linked. System.String linkname The name of link. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_read_directory(AfcClientHandle, String, out ReadOnlyCollection<String>) Gets a directory listing of the directory requested. Declaration AfcError afc_read_directory(AfcClientHandle client, string path, out ReadOnlyCollection<string> directoryInformation) Parameters Type Name Description AfcClientHandle client The client to get a directory listing from. System.String path The directory for listing. (must be a fully-qualified path) System.Collections.ObjectModel.ReadOnlyCollection < System.String > directoryInformation Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_remove_path(AfcClientHandle, String) Deletes a file or directory. Declaration AfcError afc_remove_path(AfcClientHandle client, string path) Parameters Type Name Description AfcClientHandle client The client to use. System.String path The path to delete. (must be a fully-qualified path) Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_remove_path_and_contents(AfcClientHandle, String) Deletes a file or directory including possible contents. Declaration AfcError afc_remove_path_and_contents(AfcClientHandle client, string path) Parameters Type Name Description AfcClientHandle client The client to use. System.String path The path to delete. (must be a fully-qualified path) Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. Remarks Only available in iOS 6 and later. | Improve this Doc View Source afc_rename_path(AfcClientHandle, String, String) Renames a file or directory on the device. Declaration AfcError afc_rename_path(AfcClientHandle client, string from, string to) Parameters Type Name Description AfcClientHandle client The client to have rename. System.String from The name to rename from. (must be a fully-qualified path) System.String to The new name. (must also be a fully-qualified path) Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_set_file_time(AfcClientHandle, String, UInt64) Sets the modification time of a file on the device. Declaration AfcError afc_set_file_time(AfcClientHandle client, string path, ulong mtime) Parameters Type Name Description AfcClientHandle client The client to use to set the file size. System.String path Path of the file for which the modification time should be set. System.UInt64 mtime The modification time to set in nanoseconds since epoch. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_truncate(AfcClientHandle, String, UInt64) Sets the size of a file on the device without prior opening it. Declaration AfcError afc_truncate(AfcClientHandle client, string path, ulong newsize) Parameters Type Name Description AfcClientHandle client The client to use to set the file size. System.String path The path of the file to be truncated. System.UInt64 newsize The size to set the file to. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value."
  },
  "api/iMobileDevice.Afc.AfcException.html": {
    "href": "api/iMobileDevice.Afc.AfcException.html",
    "title": "Class AfcException | imobiledevice-net API",
    "keywords": "Class AfcException Inheritance System.Object System.Exception AfcException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.Afc Assembly : iMobileDevice-net.dll Syntax [Serializable] public class AfcException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source AfcException() Initializes a new instance of the AfcException class. Declaration public AfcException() | Improve this Doc View Source AfcException(AfcError) Declaration public AfcException(AfcError error) Parameters Type Name Description AfcError error | Improve this Doc View Source AfcException(AfcError, String) Declaration public AfcException(AfcError error, string message) Parameters Type Name Description AfcError error System.String message | Improve this Doc View Source AfcException(SerializationInfo, StreamingContext) Initializes a new instance of the AfcException class with serialized data. Declaration protected AfcException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source AfcException(String) Initializes a new instance of the AfcException class with a specified error message. Declaration public AfcException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source AfcException(String, Exception) Initializes a new instance of the AfcException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public AfcException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual AfcError ErrorCode { get; } Property Value Type Description AfcError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.SyslogRelay.SyslogRelayErrorExtensions.html": {
    "href": "api/iMobileDevice.SyslogRelay.SyslogRelayErrorExtensions.html",
    "title": "Class SyslogRelayErrorExtensions | imobiledevice-net API",
    "keywords": "Class SyslogRelayErrorExtensions Inheritance System.Object SyslogRelayErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.SyslogRelay Assembly : iMobileDevice-net.dll Syntax public static class SyslogRelayErrorExtensions Methods | Improve this Doc View Source IsError(SyslogRelayError) Declaration public static bool IsError(this SyslogRelayError value) Parameters Type Name Description SyslogRelayError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(SyslogRelayError) Declaration public static void ThrowOnError(this SyslogRelayError value) Parameters Type Name Description SyslogRelayError value | Improve this Doc View Source ThrowOnError(SyslogRelayError, String) Declaration public static void ThrowOnError(this SyslogRelayError value, string message) Parameters Type Name Description SyslogRelayError value System.String message"
  },
  "api/iMobileDevice.SyslogRelay.SyslogRelayError.html": {
    "href": "api/iMobileDevice.SyslogRelay.SyslogRelayError.html",
    "title": "Enum SyslogRelayError | imobiledevice-net API",
    "keywords": "Enum SyslogRelayError Error Codes Namespace : iMobileDevice.SyslogRelay Assembly : iMobileDevice-net.dll Syntax public enum SyslogRelayError Fields Name Description InvalidArg MuxError SslError Success UnknownError Extension Methods SyslogRelayErrorExtensions.ThrowOnError() SyslogRelayErrorExtensions.ThrowOnError(String) SyslogRelayErrorExtensions.IsError()"
  },
  "api/iMobileDevice.SyslogRelay.SyslogRelayClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.SyslogRelay.SyslogRelayClientHandleDelegateMarshaler.html",
    "title": "Class SyslogRelayClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class SyslogRelayClientHandleDelegateMarshaler Inheritance System.Object SyslogRelayClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.SyslogRelay Assembly : iMobileDevice-net.dll Syntax public class SyslogRelayClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.SyslogRelay.SyslogRelayClientHandle.html": {
    "href": "api/iMobileDevice.SyslogRelay.SyslogRelayClientHandle.html",
    "title": "Class SyslogRelayClientHandle | imobiledevice-net API",
    "keywords": "Class SyslogRelayClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid SyslogRelayClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.SyslogRelay Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class SyslogRelayClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source SyslogRelayClientHandle() Declaration protected SyslogRelayClientHandle() | Improve this Doc View Source SyslogRelayClientHandle(Boolean) Declaration protected SyslogRelayClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static SyslogRelayClientHandle Zero { get; } Property Value Type Description SyslogRelayClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static SyslogRelayClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description SyslogRelayClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static SyslogRelayClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description SyslogRelayClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.Screenshotr.ScreenshotrClientHandle.html": {
    "href": "api/iMobileDevice.Screenshotr.ScreenshotrClientHandle.html",
    "title": "Class ScreenshotrClientHandle | imobiledevice-net API",
    "keywords": "Class ScreenshotrClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid ScreenshotrClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Screenshotr Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class ScreenshotrClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source ScreenshotrClientHandle() Declaration protected ScreenshotrClientHandle() | Improve this Doc View Source ScreenshotrClientHandle(Boolean) Declaration protected ScreenshotrClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static ScreenshotrClientHandle Zero { get; } Property Value Type Description ScreenshotrClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static ScreenshotrClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description ScreenshotrClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static ScreenshotrClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description ScreenshotrClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.Screenshotr.ScreenshotrApi.html": {
    "href": "api/iMobileDevice.Screenshotr.ScreenshotrApi.html",
    "title": "Class ScreenshotrApi | imobiledevice-net API",
    "keywords": "Class ScreenshotrApi Inheritance System.Object ScreenshotrApi Implements IScreenshotrApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Screenshotr Assembly : iMobileDevice-net.dll Syntax public class ScreenshotrApi : IScreenshotrApi Constructors | Improve this Doc View Source ScreenshotrApi(ILibiMobileDevice) Declaration public ScreenshotrApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source screenshotr_client_free(IntPtr) Disconnects a screenshotr client from the device and frees up the screenshotr client data. Declaration public virtual ScreenshotrError screenshotr_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The screenshotr client to disconnect and free. Returns Type Description ScreenshotrError SCREENSHOTR_E_SUCCESS on success, or SCREENSHOTR_E_INVALID_ARG if client is NULL. | Improve this Doc View Source screenshotr_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out ScreenshotrClientHandle) Connects to the screenshotr service on the specified device. Declaration public virtual ScreenshotrError screenshotr_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out ScreenshotrClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. ScreenshotrClientHandle client Pointer that will be set to a newly allocated screenshotr_client_t upon successful return. Returns Type Description ScreenshotrError SCREENSHOTR_E_SUCCESS on success, SCREENSHOTR_E_INVALID ARG if one or more parameters are invalid, or SCREENSHOTR_E_CONN_FAILED if the connection to the device could not be established. Remarks This service is only available if a developer disk image has been mounted. | Improve this Doc View Source screenshotr_client_start_service(iDeviceHandle, out ScreenshotrClientHandle, String) Starts a new screenshotr service on the specified device and connects to it. Declaration public virtual ScreenshotrError screenshotr_client_start_service(iDeviceHandle device, out ScreenshotrClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. ScreenshotrClientHandle client Pointer that will point to a newly allocated screenshotr_client_t upon successful return. Must be freed using screenshotr_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description ScreenshotrError SCREENSHOTR_E_SUCCESS on success, or an SCREENSHOTR_E_* error code otherwise. | Improve this Doc View Source screenshotr_screenshot_free(IntPtr) Frees the memory used by a screen shot Declaration public virtual ScreenshotrError screenshotr_screenshot_free(IntPtr imgdata) Parameters Type Name Description System.IntPtr imgdata The screenshot Returns Type Description ScreenshotrError SCREENSHOTR_E_SUCCESS on success | Improve this Doc View Source screenshotr_take_screenshot(ScreenshotrClientHandle, ref IntPtr, ref UInt64) Get a screen shot from the connected device. Declaration public virtual ScreenshotrError screenshotr_take_screenshot(ScreenshotrClientHandle client, ref IntPtr imgdata, ref ulong imgsize) Parameters Type Name Description ScreenshotrClientHandle client The connection screenshotr service client. System.IntPtr imgdata Pointer that will point to a newly allocated buffer containing TIFF image data upon successful return. It is up to the caller to free the memory. System.UInt64 imgsize Pointer to a uint64_t that will be set to the size of the buffer imgdata points to upon successful return. Returns Type Description ScreenshotrError SCREENSHOTR_E_SUCCESS on success, SCREENSHOTR_E_INVALID_ARG if one or more parameters are invalid, or another error code if an error occured. Implements IScreenshotrApi"
  },
  "api/iMobileDevice.Afc.html": {
    "href": "api/iMobileDevice.Afc.html",
    "title": "Namespace iMobileDevice.Afc | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.Afc Classes AfcApi AfcClientHandle AfcClientHandleDelegateMarshaler AfcDictionaryMarshaler AfcErrorExtensions AfcException AfcNativeMethods Interfaces IAfcApi Enums AfcError Error Codes AfcFileMode Flags for afc_file_open AfcLinkType Type of link for afc_make_link() calls AfcLockOp Lock operation flags"
  },
  "api/iMobileDevice.Afc.AfcApi.html": {
    "href": "api/iMobileDevice.Afc.AfcApi.html",
    "title": "Class AfcApi | imobiledevice-net API",
    "keywords": "Class AfcApi Inheritance System.Object AfcApi Implements IAfcApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Afc Assembly : iMobileDevice-net.dll Syntax public class AfcApi : IAfcApi Constructors | Improve this Doc View Source AfcApi(ILibiMobileDevice) Declaration public AfcApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source afc_client_free(IntPtr) Frees up an AFC client. If the connection was created by the client itself, the connection will be closed. Declaration public virtual AfcError afc_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The client to free. Returns Type Description AfcError | Improve this Doc View Source afc_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out AfcClientHandle) Makes a connection to the AFC service on the device. Declaration public virtual AfcError afc_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out AfcClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. AfcClientHandle client Pointer that will be set to a newly allocated afc_client_t upon successful return. Returns Type Description AfcError AFC_E_SUCCESS on success, AFC_E_INVALID_ARG if device or service is invalid, AFC_E_MUX_ERROR if the connection cannot be established, or AFC_E_NO_MEM if there is a memory allocation problem. | Improve this Doc View Source afc_client_start_service(iDeviceHandle, out AfcClientHandle, String) Starts a new AFC service on the specified device and connects to it. Declaration public virtual AfcError afc_client_start_service(iDeviceHandle device, out AfcClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. AfcClientHandle client Pointer that will point to a newly allocated afc_client_t upon successful return. Must be freed using afc_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description AfcError AFC_E_SUCCESS on success, or an AFC_E_* error code otherwise. | Improve this Doc View Source afc_dictionary_free(IntPtr) Frees up a char dictionary as returned by some AFC functions. Declaration public virtual AfcError afc_dictionary_free(IntPtr dictionary) Parameters Type Name Description System.IntPtr dictionary The char array terminated by an empty string. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_file_close(AfcClientHandle, UInt64) Closes a file on the device. Declaration public virtual AfcError afc_file_close(AfcClientHandle client, ulong handle) Parameters Type Name Description AfcClientHandle client The client to close the file with. System.UInt64 handle File handle of a previously opened file. Returns Type Description AfcError | Improve this Doc View Source afc_file_lock(AfcClientHandle, UInt64, AfcLockOp) Locks or unlocks a file on the device. Makes use of flock on the device. Declaration public virtual AfcError afc_file_lock(AfcClientHandle client, ulong handle, AfcLockOp operation) Parameters Type Name Description AfcClientHandle client The client to lock the file with. System.UInt64 handle File handle of a previously opened file. AfcLockOp operation the lock or unlock operation to perform, this is one of AFC_LOCK_SH (shared lock), AFC_LOCK_EX (exclusive lock), or AFC_LOCK_UN (unlock). Returns Type Description AfcError | Improve this Doc View Source afc_file_open(AfcClientHandle, String, AfcFileMode, ref UInt64) Opens a file on the device. Declaration public virtual AfcError afc_file_open(AfcClientHandle client, string filename, AfcFileMode fileMode, ref ulong handle) Parameters Type Name Description AfcClientHandle client The client to use to open the file. System.String filename The file to open. (must be a fully-qualified path) AfcFileMode fileMode System.UInt64 handle Pointer to a uint64_t that will hold the handle of the file Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_file_read(AfcClientHandle, UInt64, Byte[], UInt32, ref UInt32) Attempts to the read the given number of bytes from the given file. Declaration public virtual AfcError afc_file_read(AfcClientHandle client, ulong handle, byte[] data, uint length, ref uint bytesRead) Parameters Type Name Description AfcClientHandle client The relevant AFC client System.UInt64 handle File handle of a previously opened file System.Byte [] data The pointer to the memory region to store the read data System.UInt32 length The number of bytes to read System.UInt32 bytesRead Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_file_seek(AfcClientHandle, UInt64, Int64, Int32) Seeks to a given position of a pre-opened file on the device. Declaration public virtual AfcError afc_file_seek(AfcClientHandle client, ulong handle, long offset, int whence) Parameters Type Name Description AfcClientHandle client The client to use to seek to the position. System.UInt64 handle File handle of a previously opened. System.Int64 offset Seek offset. System.Int32 whence Seeking direction, one of SEEK_SET, SEEK_CUR, or SEEK_END. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_file_tell(AfcClientHandle, UInt64, ref UInt64) Returns current position in a pre-opened file on the device. Declaration public virtual AfcError afc_file_tell(AfcClientHandle client, ulong handle, ref ulong position) Parameters Type Name Description AfcClientHandle client The client to use. System.UInt64 handle File handle of a previously opened file. System.UInt64 position Position in bytes of indicator Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_file_truncate(AfcClientHandle, UInt64, UInt64) Sets the size of a file on the device. Declaration public virtual AfcError afc_file_truncate(AfcClientHandle client, ulong handle, ulong newsize) Parameters Type Name Description AfcClientHandle client The client to use to set the file size. System.UInt64 handle File handle of a previously opened file. System.UInt64 newsize The size to set the file to. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. Remarks This function is more akin to ftruncate than truncate, and truncate calls would have to open the file before calling this, sadly. | Improve this Doc View Source afc_file_write(AfcClientHandle, UInt64, Byte[], UInt32, ref UInt32) Writes a given number of bytes to a file. Declaration public virtual AfcError afc_file_write(AfcClientHandle client, ulong handle, byte[] data, uint length, ref uint bytesWritten) Parameters Type Name Description AfcClientHandle client The client to use to write to the file. System.UInt64 handle File handle of previously opened file. System.Byte [] data The data to write to the file. System.UInt32 length How much data to write. System.UInt32 bytesWritten Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_get_device_info(AfcClientHandle, out ReadOnlyCollection<String>) Get device information for a connected client. The device information returned is the device model as well as the free space, the total capacity and blocksize on the accessed disk partition. Declaration public virtual AfcError afc_get_device_info(AfcClientHandle client, out ReadOnlyCollection<string> deviceInformation) Parameters Type Name Description AfcClientHandle client The client to get device info for. System.Collections.ObjectModel.ReadOnlyCollection < System.String > deviceInformation Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_get_device_info_key(AfcClientHandle, String, out String) Get a specific key of the device info list for a client connection. Known key values are: Model, FSTotalBytes, FSFreeBytes and FSBlockSize. This is a helper function for afc_get_device_info(). Declaration public virtual AfcError afc_get_device_info_key(AfcClientHandle client, string key, out string value) Parameters Type Name Description AfcClientHandle client The client to get device info for. System.String key The key to get the value of. System.String value The value for the key if successful or NULL otherwise. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_get_file_info(AfcClientHandle, String, out ReadOnlyCollection<String>) Gets information about a specific file. Declaration public virtual AfcError afc_get_file_info(AfcClientHandle client, string filename, out ReadOnlyCollection<string> fileInformation) Parameters Type Name Description AfcClientHandle client The client to use to get the information of the file. System.String filename The fully-qualified path to the file. System.Collections.ObjectModel.ReadOnlyCollection < System.String > fileInformation Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_make_directory(AfcClientHandle, String) Creates a directory on the device. Declaration public virtual AfcError afc_make_directory(AfcClientHandle client, string path) Parameters Type Name Description AfcClientHandle client The client to use to make a directory. System.String path The directory's path. (must be a fully-qualified path, I assume all other mkdir restrictions apply as well) Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_make_link(AfcClientHandle, AfcLinkType, String, String) Creates a hard link or symbolic link on the device. Declaration public virtual AfcError afc_make_link(AfcClientHandle client, AfcLinkType linktype, string target, string linkname) Parameters Type Name Description AfcClientHandle client The client to use for making a link AfcLinkType linktype 1 = hard link, 2 = symlink System.String target The file to be linked. System.String linkname The name of link. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_read_directory(AfcClientHandle, String, out ReadOnlyCollection<String>) Gets a directory listing of the directory requested. Declaration public virtual AfcError afc_read_directory(AfcClientHandle client, string path, out ReadOnlyCollection<string> directoryInformation) Parameters Type Name Description AfcClientHandle client The client to get a directory listing from. System.String path The directory for listing. (must be a fully-qualified path) System.Collections.ObjectModel.ReadOnlyCollection < System.String > directoryInformation Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_remove_path(AfcClientHandle, String) Deletes a file or directory. Declaration public virtual AfcError afc_remove_path(AfcClientHandle client, string path) Parameters Type Name Description AfcClientHandle client The client to use. System.String path The path to delete. (must be a fully-qualified path) Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_remove_path_and_contents(AfcClientHandle, String) Deletes a file or directory including possible contents. Declaration public virtual AfcError afc_remove_path_and_contents(AfcClientHandle client, string path) Parameters Type Name Description AfcClientHandle client The client to use. System.String path The path to delete. (must be a fully-qualified path) Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. Remarks Only available in iOS 6 and later. | Improve this Doc View Source afc_rename_path(AfcClientHandle, String, String) Renames a file or directory on the device. Declaration public virtual AfcError afc_rename_path(AfcClientHandle client, string from, string to) Parameters Type Name Description AfcClientHandle client The client to have rename. System.String from The name to rename from. (must be a fully-qualified path) System.String to The new name. (must also be a fully-qualified path) Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_set_file_time(AfcClientHandle, String, UInt64) Sets the modification time of a file on the device. Declaration public virtual AfcError afc_set_file_time(AfcClientHandle client, string path, ulong mtime) Parameters Type Name Description AfcClientHandle client The client to use to set the file size. System.String path Path of the file for which the modification time should be set. System.UInt64 mtime The modification time to set in nanoseconds since epoch. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_truncate(AfcClientHandle, String, UInt64) Sets the size of a file on the device without prior opening it. Declaration public virtual AfcError afc_truncate(AfcClientHandle client, string path, ulong newsize) Parameters Type Name Description AfcClientHandle client The client to use to set the file size. System.String path The path of the file to be truncated. System.UInt64 newsize The size to set the file to. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. Implements IAfcApi"
  },
  "api/iMobileDevice.WebInspector.WebInspectorErrorExtensions.html": {
    "href": "api/iMobileDevice.WebInspector.WebInspectorErrorExtensions.html",
    "title": "Class WebInspectorErrorExtensions | imobiledevice-net API",
    "keywords": "Class WebInspectorErrorExtensions Inheritance System.Object WebInspectorErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.WebInspector Assembly : iMobileDevice-net.dll Syntax public static class WebInspectorErrorExtensions Methods | Improve this Doc View Source IsError(WebInspectorError) Declaration public static bool IsError(this WebInspectorError value) Parameters Type Name Description WebInspectorError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(WebInspectorError) Declaration public static void ThrowOnError(this WebInspectorError value) Parameters Type Name Description WebInspectorError value | Improve this Doc View Source ThrowOnError(WebInspectorError, String) Declaration public static void ThrowOnError(this WebInspectorError value, string message) Parameters Type Name Description WebInspectorError value System.String message"
  },
  "api/iMobileDevice.Screenshotr.IScreenshotrApi.html": {
    "href": "api/iMobileDevice.Screenshotr.IScreenshotrApi.html",
    "title": "Interface IScreenshotrApi | imobiledevice-net API",
    "keywords": "Interface IScreenshotrApi Namespace : iMobileDevice.Screenshotr Assembly : iMobileDevice-net.dll Syntax public interface IScreenshotrApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.Screenshotr . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source screenshotr_client_free(IntPtr) Disconnects a screenshotr client from the device and frees up the screenshotr client data. Declaration ScreenshotrError screenshotr_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The screenshotr client to disconnect and free. Returns Type Description ScreenshotrError SCREENSHOTR_E_SUCCESS on success, or SCREENSHOTR_E_INVALID_ARG if client is NULL. | Improve this Doc View Source screenshotr_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out ScreenshotrClientHandle) Connects to the screenshotr service on the specified device. Declaration ScreenshotrError screenshotr_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out ScreenshotrClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. ScreenshotrClientHandle client Pointer that will be set to a newly allocated screenshotr_client_t upon successful return. Returns Type Description ScreenshotrError SCREENSHOTR_E_SUCCESS on success, SCREENSHOTR_E_INVALID ARG if one or more parameters are invalid, or SCREENSHOTR_E_CONN_FAILED if the connection to the device could not be established. Remarks This service is only available if a developer disk image has been mounted. | Improve this Doc View Source screenshotr_client_start_service(iDeviceHandle, out ScreenshotrClientHandle, String) Starts a new screenshotr service on the specified device and connects to it. Declaration ScreenshotrError screenshotr_client_start_service(iDeviceHandle device, out ScreenshotrClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. ScreenshotrClientHandle client Pointer that will point to a newly allocated screenshotr_client_t upon successful return. Must be freed using screenshotr_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description ScreenshotrError SCREENSHOTR_E_SUCCESS on success, or an SCREENSHOTR_E_* error code otherwise. | Improve this Doc View Source screenshotr_screenshot_free(IntPtr) Frees the memory used by a screen shot Declaration ScreenshotrError screenshotr_screenshot_free(IntPtr imgdata) Parameters Type Name Description System.IntPtr imgdata The screenshot Returns Type Description ScreenshotrError SCREENSHOTR_E_SUCCESS on success | Improve this Doc View Source screenshotr_take_screenshot(ScreenshotrClientHandle, ref IntPtr, ref UInt64) Get a screen shot from the connected device. Declaration ScreenshotrError screenshotr_take_screenshot(ScreenshotrClientHandle client, ref IntPtr imgdata, ref ulong imgsize) Parameters Type Name Description ScreenshotrClientHandle client The connection screenshotr service client. System.IntPtr imgdata Pointer that will point to a newly allocated buffer containing TIFF image data upon successful return. It is up to the caller to free the memory. System.UInt64 imgsize Pointer to a uint64_t that will be set to the size of the buffer imgdata points to upon successful return. Returns Type Description ScreenshotrError SCREENSHOTR_E_SUCCESS on success, SCREENSHOTR_E_INVALID_ARG if one or more parameters are invalid, or another error code if an error occured."
  },
  "api/iMobileDevice.Restore.html": {
    "href": "api/iMobileDevice.Restore.html",
    "title": "Namespace iMobileDevice.Restore | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.Restore Classes RestoreApi RestoreClientHandle RestoreClientHandleDelegateMarshaler RestoreErrorExtensions RestoreException RestoreNativeMethods Interfaces IRestoreApi Enums RestoreError Error Codes"
  },
  "api/iMobileDevice.NotificationProxy.NotificationProxyNotifyCallBack.html": {
    "href": "api/iMobileDevice.NotificationProxy.NotificationProxyNotifyCallBack.html",
    "title": "Delegate NotificationProxyNotifyCallBack | imobiledevice-net API",
    "keywords": "Delegate NotificationProxyNotifyCallBack Namespace : iMobileDevice.NotificationProxy Assembly : iMobileDevice-net.dll Syntax public delegate void NotificationProxyNotifyCallBack(string notification, IntPtr userData); Parameters Type Name Description System.String notification System.IntPtr userData"
  },
  "api/iMobileDevice.NotificationProxy.NotificationProxyNativeMethods.html": {
    "href": "api/iMobileDevice.NotificationProxy.NotificationProxyNativeMethods.html",
    "title": "Class NotificationProxyNativeMethods | imobiledevice-net API",
    "keywords": "Class NotificationProxyNativeMethods Inheritance System.Object NotificationProxyNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.NotificationProxy Assembly : iMobileDevice-net.dll Syntax public class NotificationProxyNativeMethods Methods np_client_free(IntPtr) Disconnects a notification_proxy client from the device and frees up the notification_proxy client data. Declaration public static NotificationProxyError np_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The notification_proxy client to disconnect and free. Returns Type Description NotificationProxyError NP_E_SUCCESS on success, or NP_E_INVALID_ARG when client is NULL. np_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out NotificationProxyClientHandle) Connects to the notification_proxy on the specified device. Declaration public static NotificationProxyError np_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out NotificationProxyClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. NotificationProxyClientHandle client Pointer that will be set to a newly allocated np_client_t upon successful return. Returns Type Description NotificationProxyError NP_E_SUCCESS on success, NP_E_INVALID_ARG when device is NULL, or NP_E_CONN_FAILED when the connection to the device could not be established. np_client_start_service(iDeviceHandle, out NotificationProxyClientHandle, String) Starts a new notification proxy service on the specified device and connects to it. Declaration public static NotificationProxyError np_client_start_service(iDeviceHandle device, out NotificationProxyClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. NotificationProxyClientHandle client Pointer that will point to a newly allocated np_client_t upon successful return. Must be freed using np_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description NotificationProxyError NP_E_SUCCESS on success, or an NP_E_* error code otherwise. np_observe_notification(NotificationProxyClientHandle, String) Tells the device to send a notification on the specified event. Declaration public static NotificationProxyError np_observe_notification(NotificationProxyClientHandle client, string notification) Parameters Type Name Description NotificationProxyClientHandle client The client to send to System.String notification The notifications that should be observed. Returns Type Description NotificationProxyError NP_E_SUCCESS on success, NP_E_INVALID_ARG when client or notification are NULL, or an error returned by np_plist_send. np_observe_notifications(NotificationProxyClientHandle, out IntPtr) Tells the device to send a notification on specified events. Declaration public static NotificationProxyError np_observe_notifications(NotificationProxyClientHandle client, out IntPtr notificationSpec) Parameters Type Name Description NotificationProxyClientHandle client The client to send to System.IntPtr notificationSpec Returns Type Description NotificationProxyError NP_E_SUCCESS on success, NP_E_INVALID_ARG when client is null, or an error returned by np_observe_notification. | Improve this Doc View Source np_observe_notifications(NotificationProxyClientHandle, out String) Declaration public static NotificationProxyError np_observe_notifications(NotificationProxyClientHandle client, out string notificationSpec) Parameters Type Name Description NotificationProxyClientHandle client System.String notificationSpec Returns Type Description NotificationProxyError np_post_notification(NotificationProxyClientHandle, String) Sends a notification to the device's notification_proxy. Declaration public static NotificationProxyError np_post_notification(NotificationProxyClientHandle client, string notification) Parameters Type Name Description NotificationProxyClientHandle client The client to send to System.String notification The notification message to send Returns Type Description NotificationProxyError NP_E_SUCCESS on success, or an error returned by np_plist_send np_set_notify_callback(NotificationProxyClientHandle, NotificationProxyNotifyCallBack, IntPtr) This function allows an application to define a callback function that will be called when a notification has been received. It will start a thread that polls for notifications and calls the callback function if a notification has been received. In case of an error condition when polling for notifications - e.g. device disconnect - the thread will call the callback function with an empty notification \"\" and terminate itself. Declaration public static NotificationProxyError np_set_notify_callback(NotificationProxyClientHandle client, NotificationProxyNotifyCallBack notifyCallBack, IntPtr userdata) Parameters Type Name Description NotificationProxyClientHandle client the NP client NotificationProxyNotifyCallBack notifyCallBack System.IntPtr userdata Returns Type Description NotificationProxyError NP_E_SUCCESS when the callback was successfully registered, NP_E_INVALID_ARG when client is NULL, or NP_E_UNKNOWN_ERROR when the callback thread could no be created. Remarks Only one callback function can be registered at the same time; any previously set callback function will be removed automatically."
  },
  "api/iMobileDevice.NotificationProxy.NotificationProxyException.html": {
    "href": "api/iMobileDevice.NotificationProxy.NotificationProxyException.html",
    "title": "Class NotificationProxyException | imobiledevice-net API",
    "keywords": "Class NotificationProxyException Inheritance System.Object System.Exception NotificationProxyException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.NotificationProxy Assembly : iMobileDevice-net.dll Syntax [Serializable] public class NotificationProxyException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source NotificationProxyException() Initializes a new instance of the NotificationProxyException class. Declaration public NotificationProxyException() | Improve this Doc View Source NotificationProxyException(NotificationProxyError) Declaration public NotificationProxyException(NotificationProxyError error) Parameters Type Name Description NotificationProxyError error | Improve this Doc View Source NotificationProxyException(NotificationProxyError, String) Declaration public NotificationProxyException(NotificationProxyError error, string message) Parameters Type Name Description NotificationProxyError error System.String message | Improve this Doc View Source NotificationProxyException(SerializationInfo, StreamingContext) Initializes a new instance of the NotificationProxyException class with serialized data. Declaration protected NotificationProxyException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source NotificationProxyException(String) Initializes a new instance of the NotificationProxyException class with a specified error message. Declaration public NotificationProxyException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source NotificationProxyException(String, Exception) Initializes a new instance of the NotificationProxyException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public NotificationProxyException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual NotificationProxyError ErrorCode { get; } Property Value Type Description NotificationProxyError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.NotificationProxy.NotificationProxyErrorExtensions.html": {
    "href": "api/iMobileDevice.NotificationProxy.NotificationProxyErrorExtensions.html",
    "title": "Class NotificationProxyErrorExtensions | imobiledevice-net API",
    "keywords": "Class NotificationProxyErrorExtensions Inheritance System.Object NotificationProxyErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.NotificationProxy Assembly : iMobileDevice-net.dll Syntax public static class NotificationProxyErrorExtensions Methods | Improve this Doc View Source IsError(NotificationProxyError) Declaration public static bool IsError(this NotificationProxyError value) Parameters Type Name Description NotificationProxyError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(NotificationProxyError) Declaration public static void ThrowOnError(this NotificationProxyError value) Parameters Type Name Description NotificationProxyError value | Improve this Doc View Source ThrowOnError(NotificationProxyError, String) Declaration public static void ThrowOnError(this NotificationProxyError value, string message) Parameters Type Name Description NotificationProxyError value System.String message"
  },
  "api/iMobileDevice.MobileSync.MobileSyncClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.MobileSync.MobileSyncClientHandleDelegateMarshaler.html",
    "title": "Class MobileSyncClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class MobileSyncClientHandleDelegateMarshaler Inheritance System.Object MobileSyncClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileSync Assembly : iMobileDevice-net.dll Syntax public class MobileSyncClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.MobileSync.MobileSyncClientHandle.html": {
    "href": "api/iMobileDevice.MobileSync.MobileSyncClientHandle.html",
    "title": "Class MobileSyncClientHandle | imobiledevice-net API",
    "keywords": "Class MobileSyncClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid MobileSyncClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileSync Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class MobileSyncClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source MobileSyncClientHandle() Declaration protected MobileSyncClientHandle() | Improve this Doc View Source MobileSyncClientHandle(Boolean) Declaration protected MobileSyncClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static MobileSyncClientHandle Zero { get; } Property Value Type Description MobileSyncClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static MobileSyncClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description MobileSyncClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static MobileSyncClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description MobileSyncClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.MobileBackup2.MobileBackup2NativeMethods.html": {
    "href": "api/iMobileDevice.MobileBackup2.MobileBackup2NativeMethods.html",
    "title": "Class MobileBackup2NativeMethods | imobiledevice-net API",
    "keywords": "Class MobileBackup2NativeMethods Inheritance System.Object MobileBackup2NativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileBackup2 Assembly : iMobileDevice-net.dll Syntax public class MobileBackup2NativeMethods Methods mobilebackup2_client_free(IntPtr) Disconnects a mobilebackup2 client from the device and frees up the mobilebackup2 client data. Declaration public static MobileBackup2Error mobilebackup2_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The mobilebackup2 client to disconnect and free. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS on success, or MOBILEBACKUP2_E_INVALID_ARG if client is NULL. mobilebackup2_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MobileBackup2ClientHandle) Connects to the mobilebackup2 service on the specified device. Declaration public static MobileBackup2Error mobilebackup2_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MobileBackup2ClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MobileBackup2ClientHandle client Pointer that will be set to a newly allocated mobilebackup2_client_t upon successful return. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS on success, MOBILEBACKUP2_E_INVALID ARG if one or more parameter is invalid, or MOBILEBACKUP2_E_BAD_VERSION if the mobilebackup2 version on the device is newer. mobilebackup2_client_start_service(iDeviceHandle, out MobileBackup2ClientHandle, String) Starts a new mobilebackup2 service on the specified device and connects to it. Declaration public static MobileBackup2Error mobilebackup2_client_start_service(iDeviceHandle device, out MobileBackup2ClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MobileBackup2ClientHandle client Pointer that will point to a newly allocated mobilebackup2_client_t upon successful return. Must be freed using mobilebackup2_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS on success, or an MOBILEBACKUP2_E_* error code otherwise. mobilebackup2_receive_message(MobileBackup2ClientHandle, out PlistHandle, out IntPtr) Receives a DL* message plist from the device. This function is a wrapper around device_link_service_receive_message. Declaration public static MobileBackup2Error mobilebackup2_receive_message(MobileBackup2ClientHandle client, out PlistHandle msgPlist, out IntPtr dlmessage) Parameters Type Name Description MobileBackup2ClientHandle client The connected MobileBackup client to use. PlistHandle msgPlist System.IntPtr dlmessage A pointer that will be set to a newly allocated char* containing the DL* string from the given plist. It is up to the caller to free the allocated memory. If this parameter is NULL it will be ignored. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS if a DL* message was received, MOBILEBACKUP2_E_INVALID_ARG if client or message is invalid, MOBILEBACKUP2_E_PLIST_ERROR if the received plist is invalid or is not a DL* message plist, or MOBILEBACKUP2_E_MUX_ERROR if receiving from the device failed. | Improve this Doc View Source mobilebackup2_receive_message(MobileBackup2ClientHandle, out PlistHandle, out String) Declaration public static MobileBackup2Error mobilebackup2_receive_message(MobileBackup2ClientHandle client, out PlistHandle msgPlist, out string dlmessage) Parameters Type Name Description MobileBackup2ClientHandle client PlistHandle msgPlist System.String dlmessage Returns Type Description MobileBackup2Error mobilebackup2_receive_raw(MobileBackup2ClientHandle, Byte[], UInt32, ref UInt32) Receive binary from the device. Declaration public static MobileBackup2Error mobilebackup2_receive_raw(MobileBackup2ClientHandle client, byte[] data, uint length, ref uint bytes) Parameters Type Name Description MobileBackup2ClientHandle client The MobileBackup client to receive from. System.Byte [] data Pointer to a buffer that will be filled with the received data. System.UInt32 length Number of bytes to receive. The data buffer needs to be large enough to store this amount of data. System.UInt32 bytes Number of bytes actually received. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS if any or no data was received, MOBILEBACKUP2_E_INVALID_ARG if one of the parameters is invalid, or MOBILEBACKUP2_E_MUX_ERROR if receiving the data failed. Remarks This function returns MOBILEBACKUP2_E_SUCCESS even if no data has been received (unless a communication error occured). The fourth parameter is required and must be checked to know how many bytes were actually received. mobilebackup2_send_message(MobileBackup2ClientHandle, String, PlistHandle) Sends a backup message plist. Declaration public static MobileBackup2Error mobilebackup2_send_message(MobileBackup2ClientHandle client, string message, PlistHandle options) Parameters Type Name Description MobileBackup2ClientHandle client The connected MobileBackup client to use. System.String message The message to send. This will be inserted into the request plist as value for MessageName. If this parameter is NULL, the plist passed in the options parameter will be sent directly. PlistHandle options Additional options as PLIST_DICT to add to the request. The MessageName key with the value passed in the message parameter will be inserted into this plist before sending it. This parameter can be NULL if message is not NULL. Returns Type Description MobileBackup2Error mobilebackup2_send_raw(MobileBackup2ClientHandle, Byte[], UInt32, ref UInt32) Send binary data to the device. Declaration public static MobileBackup2Error mobilebackup2_send_raw(MobileBackup2ClientHandle client, byte[] data, uint length, ref uint bytes) Parameters Type Name Description MobileBackup2ClientHandle client The MobileBackup client to send to. System.Byte [] data Pointer to the data to send System.UInt32 length Number of bytes to send System.UInt32 bytes Number of bytes actually sent Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS if any data was successfully sent, MOBILEBACKUP2_E_INVALID_ARG if one of the parameters is invalid, or MOBILEBACKUP2_E_MUX_ERROR if sending of the data failed. Remarks This function returns MOBILEBACKUP2_E_SUCCESS even if less than the requested length has been sent. The fourth parameter is required and must be checked to ensure if the whole data has been sent. mobilebackup2_send_request(MobileBackup2ClientHandle, String, String, String, PlistHandle) Send a request to the connected mobilebackup2 service. Declaration public static MobileBackup2Error mobilebackup2_send_request(MobileBackup2ClientHandle client, string request, string targetIdentifier, string sourceIdentifier, PlistHandle options) Parameters Type Name Description MobileBackup2ClientHandle client System.String request The request to send to the backup service. Currently, this is one of \"Backup\", \"Restore\", \"Info\", or \"List\". System.String targetIdentifier System.String sourceIdentifier PlistHandle options Additional options in a plist of type PLIST_DICT. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS if the request was successfully sent, or a MOBILEBACKUP2_E_* error value otherwise. mobilebackup2_send_status_response(MobileBackup2ClientHandle, Int32, String, PlistHandle) Sends a DLMessageStatusResponse to the device. Declaration public static MobileBackup2Error mobilebackup2_send_status_response(MobileBackup2ClientHandle client, int statusCode, string status1, PlistHandle status2) Parameters Type Name Description MobileBackup2ClientHandle client The MobileBackup client to use. System.Int32 statusCode System.String status1 A status message to send. Can be NULL if not required. PlistHandle status2 An additional status plist to attach to the response. Can be NULL if not required. Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS on success, MOBILEBACKUP2_E_INVALID_ARG if client is invalid, or another MOBILEBACKUP2_E_* otherwise. mobilebackup2_version_exchange(MobileBackup2ClientHandle, IntPtr, SByte, ref Double) Performs the mobilebackup2 protocol version exchange. Declaration public static MobileBackup2Error mobilebackup2_version_exchange(MobileBackup2ClientHandle client, IntPtr localVersions, sbyte count, ref double remoteVersion) Parameters Type Name Description MobileBackup2ClientHandle client The MobileBackup client to use. System.IntPtr localVersions System.SByte count The number of items in local_versions. System.Double remoteVersion Returns Type Description MobileBackup2Error MOBILEBACKUP2_E_SUCCESS on success, or a MOBILEBACKUP2_E_* error code otherwise."
  },
  "api/iMobileDevice.MobileBackup2.MobileBackup2Exception.html": {
    "href": "api/iMobileDevice.MobileBackup2.MobileBackup2Exception.html",
    "title": "Class MobileBackup2Exception | imobiledevice-net API",
    "keywords": "Class MobileBackup2Exception Inheritance System.Object System.Exception MobileBackup2Exception Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileBackup2 Assembly : iMobileDevice-net.dll Syntax [Serializable] public class MobileBackup2Exception : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source MobileBackup2Exception() Initializes a new instance of the MobileBackup2Exception class. Declaration public MobileBackup2Exception() | Improve this Doc View Source MobileBackup2Exception(MobileBackup2Error) Declaration public MobileBackup2Exception(MobileBackup2Error error) Parameters Type Name Description MobileBackup2Error error | Improve this Doc View Source MobileBackup2Exception(MobileBackup2Error, String) Declaration public MobileBackup2Exception(MobileBackup2Error error, string message) Parameters Type Name Description MobileBackup2Error error System.String message | Improve this Doc View Source MobileBackup2Exception(SerializationInfo, StreamingContext) Initializes a new instance of the MobileBackup2Exception class with serialized data. Declaration protected MobileBackup2Exception(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source MobileBackup2Exception(String) Initializes a new instance of the MobileBackup2Exception class with a specified error message. Declaration public MobileBackup2Exception(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source MobileBackup2Exception(String, Exception) Initializes a new instance of the MobileBackup2Exception class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public MobileBackup2Exception(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual MobileBackup2Error ErrorCode { get; } Property Value Type Description MobileBackup2Error Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.MobileBackup.MobileBackupErrorExtensions.html": {
    "href": "api/iMobileDevice.MobileBackup.MobileBackupErrorExtensions.html",
    "title": "Class MobileBackupErrorExtensions | imobiledevice-net API",
    "keywords": "Class MobileBackupErrorExtensions Inheritance System.Object MobileBackupErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileBackup Assembly : iMobileDevice-net.dll Syntax public static class MobileBackupErrorExtensions Methods | Improve this Doc View Source IsError(MobileBackupError) Declaration public static bool IsError(this MobileBackupError value) Parameters Type Name Description MobileBackupError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(MobileBackupError) Declaration public static void ThrowOnError(this MobileBackupError value) Parameters Type Name Description MobileBackupError value | Improve this Doc View Source ThrowOnError(MobileBackupError, String) Declaration public static void ThrowOnError(this MobileBackupError value, string message) Parameters Type Name Description MobileBackupError value System.String message"
  },
  "api/iMobileDevice.MobileBackup.MobileBackupError.html": {
    "href": "api/iMobileDevice.MobileBackup.MobileBackupError.html",
    "title": "Enum MobileBackupError | imobiledevice-net API",
    "keywords": "Enum MobileBackupError Error Codes Namespace : iMobileDevice.MobileBackup Assembly : iMobileDevice-net.dll Syntax public enum MobileBackupError Fields Name Description BadVersion InvalidArg MuxError PlistError ReplyNotOk Success UnknownError Extension Methods MobileBackupErrorExtensions.ThrowOnError() MobileBackupErrorExtensions.ThrowOnError(String) MobileBackupErrorExtensions.IsError()"
  },
  "api/iMobileDevice.Mobileactivation.IMobileactivationApi.html": {
    "href": "api/iMobileDevice.Mobileactivation.IMobileactivationApi.html",
    "title": "Interface IMobileactivationApi | imobiledevice-net API",
    "keywords": "Interface IMobileactivationApi Namespace : iMobileDevice.Mobileactivation Assembly : iMobileDevice-net.dll Syntax public interface IMobileactivationApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.Mobileactivation . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source mobileactivation_activate(MobileactivationClientHandle, PlistHandle) Activates the device with the given activation record. The activation record plist dictionary must be obtained using the activation protocol requesting from Apple's https webservice. Declaration MobileactivationError mobileactivation_activate(MobileactivationClientHandle client, PlistHandle activationRecord) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client PlistHandle activationRecord Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. | Improve this Doc View Source mobileactivation_activate_with_session(MobileactivationClientHandle, PlistHandle) Activates the device with the given activation record in 'session' mode. The activation record plist dictionary must be obtained using the activation protocol requesting from Apple's https webservice. Declaration MobileactivationError mobileactivation_activate_with_session(MobileactivationClientHandle client, PlistHandle activationRecord) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client PlistHandle activationRecord Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. | Improve this Doc View Source mobileactivation_client_free(IntPtr) Disconnects a mobileactivation client from the device and frees up the mobileactivation client data. Declaration MobileactivationError mobileactivation_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The mobileactivation client to disconnect and free. Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, MOBILEACTIVATION_E_INVALID_ARG when one of client or client->parent is invalid, or MOBILEACTIVATION_E_UNKNOWN_ERROR when the was an error freeing the parent property_list_service client. | Improve this Doc View Source mobileactivation_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MobileactivationClientHandle) Connects to the mobileactivation service on the specified device. Declaration MobileactivationError mobileactivation_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MobileactivationClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MobileactivationClientHandle client Reference that will point to a newly allocated mobileactivation_client_t upon successful return. Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, MOBILEACTIVATION_E_INVALID_ARG when one of the parameters is invalid, or MOBILEACTIVATION_E_MUX_ERROR when the connection failed. | Improve this Doc View Source mobileactivation_client_start_service(iDeviceHandle, out MobileactivationClientHandle, String) Starts a new mobileactivation service on the specified device and connects to it. Declaration MobileactivationError mobileactivation_client_start_service(iDeviceHandle device, out MobileactivationClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MobileactivationClientHandle client Pointer that will point to a newly allocated mobileactivation_client_t upon successful return. Must be freed using mobileactivation_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. | Improve this Doc View Source mobileactivation_create_activation_info(MobileactivationClientHandle, out PlistHandle) Retrieves the activation info required for device activation. Declaration MobileactivationError mobileactivation_create_activation_info(MobileactivationClientHandle client, out PlistHandle info) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client PlistHandle info Pointer to a plist_t variable that will be set to the activation info created by the mobileactivation service. The consumer is responsible for freeing the returned object using plist_free(). Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. | Improve this Doc View Source mobileactivation_create_activation_info_with_session(MobileactivationClientHandle, PlistHandle, out PlistHandle) Retrieves the activation info required for device activation in 'session' mode. This function expects a handshake result retrieved from https://albert.apple.com/deviceservies/drmHandshake with a blob provided by mobileactivation_create_activation_session_info(). Declaration MobileactivationError mobileactivation_create_activation_info_with_session(MobileactivationClientHandle client, PlistHandle handshakeResult, out PlistHandle info) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client PlistHandle handshakeResult PlistHandle info Pointer to a plist_t variable that will be set to the activation info created by the mobileactivation service. The consumer is responsible for freeing the returned object using plist_free(). Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. | Improve this Doc View Source mobileactivation_create_activation_session_info(MobileactivationClientHandle, out PlistHandle) Retrieves a session blob required for 'drmHandshake' via albert.apple.com. Declaration MobileactivationError mobileactivation_create_activation_session_info(MobileactivationClientHandle client, out PlistHandle blob) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client PlistHandle blob Pointer to a plist_t variable that will be set to the session blob created by the mobielactivation service. The consumer is responsible for freeing the returned object using plist_free(). Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. | Improve this Doc View Source mobileactivation_deactivate(MobileactivationClientHandle) Deactivates the device. Declaration MobileactivationError mobileactivation_deactivate(MobileactivationClientHandle client) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client Returns Type Description MobileactivationError | Improve this Doc View Source mobileactivation_get_activation_state(MobileactivationClientHandle, out PlistHandle) Retrieves the device's activation state. Declaration MobileactivationError mobileactivation_get_activation_state(MobileactivationClientHandle client, out PlistHandle state) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client. PlistHandle state Pointer to a plist_t variable that will be set to the activation state reported by the mobileactivation service. The consumer is responsible for freeing the returned object using plist_free(). Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise."
  },
  "api/iMobileDevice.Misagent.html": {
    "href": "api/iMobileDevice.Misagent.html",
    "title": "Namespace iMobileDevice.Misagent | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.Misagent Classes MisagentApi MisagentClientHandle MisagentClientHandleDelegateMarshaler MisagentErrorExtensions MisagentException MisagentNativeMethods Interfaces IMisagentApi Enums MisagentError Error Codes"
  },
  "api/iMobileDevice.Lockdown.LockdownServiceDescriptorHandle.html": {
    "href": "api/iMobileDevice.Lockdown.LockdownServiceDescriptorHandle.html",
    "title": "Class LockdownServiceDescriptorHandle | imobiledevice-net API",
    "keywords": "Class LockdownServiceDescriptorHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid LockdownServiceDescriptorHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Lockdown Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class LockdownServiceDescriptorHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source LockdownServiceDescriptorHandle() Declaration protected LockdownServiceDescriptorHandle() | Improve this Doc View Source LockdownServiceDescriptorHandle(Boolean) Declaration protected LockdownServiceDescriptorHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Value Declaration public virtual LockdownServiceDescriptor Value { get; } Property Value Type Description LockdownServiceDescriptor | Improve this Doc View Source Zero Declaration public static LockdownServiceDescriptorHandle Zero { get; } Property Value Type Description LockdownServiceDescriptorHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static LockdownServiceDescriptorHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description LockdownServiceDescriptorHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static LockdownServiceDescriptorHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description LockdownServiceDescriptorHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.Lockdown.LockdownServiceDescriptor.html": {
    "href": "api/iMobileDevice.Lockdown.LockdownServiceDescriptor.html",
    "title": "Struct LockdownServiceDescriptor | imobiledevice-net API",
    "keywords": "Struct LockdownServiceDescriptor Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : iMobileDevice.Lockdown Assembly : iMobileDevice-net.dll Syntax public struct LockdownServiceDescriptor Fields | Improve this Doc View Source port Declaration public ushort port Field Value Type Description System.UInt16 | Improve this Doc View Source ssl_enabled Declaration public char ssl_enabled Field Value Type Description System.Char"
  },
  "api/iMobileDevice.InstallationProxy.InstallationProxyStatusCallBack.html": {
    "href": "api/iMobileDevice.InstallationProxy.InstallationProxyStatusCallBack.html",
    "title": "Delegate InstallationProxyStatusCallBack | imobiledevice-net API",
    "keywords": "Delegate InstallationProxyStatusCallBack Namespace : iMobileDevice.InstallationProxy Assembly : iMobileDevice-net.dll Syntax public delegate void InstallationProxyStatusCallBack(IntPtr command, IntPtr status, IntPtr userData); Parameters Type Name Description System.IntPtr command System.IntPtr status System.IntPtr userData"
  },
  "api/iMobileDevice.InstallationProxy.InstallationProxyNativeMethods.html": {
    "href": "api/iMobileDevice.InstallationProxy.InstallationProxyNativeMethods.html",
    "title": "Class InstallationProxyNativeMethods | imobiledevice-net API",
    "keywords": "Class InstallationProxyNativeMethods Inheritance System.Object InstallationProxyNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.InstallationProxy Assembly : iMobileDevice-net.dll Syntax public class InstallationProxyNativeMethods Methods instproxy_archive(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Archive an application on the device. This function tells the device to make an archive of the specified application. This results in the device creating a ZIP archive in the 'ApplicationArchives' directory and uninstalling the application. Declaration public static InstallationProxyError instproxy_archive(InstallationProxyClientHandle client, string appid, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation proxy client System.String appid ApplicationIdentifier of the app to archive. PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function. instproxy_browse(InstallationProxyClientHandle, PlistHandle, out PlistHandle) List installed applications. This function runs synchronously. Declaration public static InstallationProxyError instproxy_browse(InstallationProxyClientHandle client, PlistHandle clientOptions, out PlistHandle result) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client PlistHandle clientOptions PlistHandle result Pointer that will be set to a plist that will hold an array of PLIST_DICT holding information about the applications found. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. instproxy_browse_with_callback(InstallationProxyClientHandle, PlistHandle, InstallationProxyStatusCallBack, IntPtr) List pages of installed applications in a callback. Declaration public static InstallationProxyError instproxy_browse_with_callback(InstallationProxyClientHandle client, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. instproxy_check_capabilities_match(InstallationProxyClientHandle, out IntPtr, PlistHandle, out PlistHandle) Checks a device for certain capabilities. Declaration public static InstallationProxyError instproxy_check_capabilities_match(InstallationProxyClientHandle client, out IntPtr capabilities, PlistHandle clientOptions, out PlistHandle result) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client System.IntPtr capabilities An array of char* with capability names that MUST have a terminatingÂ NULL entry. PlistHandle clientOptions PlistHandle result Pointer that will be set to a plist containing a PLIST_DICT holding information if the capabilities matched or NULL on errors. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. | Improve this Doc View Source instproxy_check_capabilities_match(InstallationProxyClientHandle, out String, PlistHandle, out PlistHandle) Declaration public static InstallationProxyError instproxy_check_capabilities_match(InstallationProxyClientHandle client, out string capabilities, PlistHandle clientOptions, out PlistHandle result) Parameters Type Name Description InstallationProxyClientHandle client System.String capabilities PlistHandle clientOptions PlistHandle result Returns Type Description InstallationProxyError instproxy_client_free(IntPtr) Disconnects an installation_proxy client from the device and frees up the installation_proxy client data. Declaration public static InstallationProxyError instproxy_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The installation_proxy client to disconnect and free. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or INSTPROXY_E_INVALID_ARG if client is NULL. instproxy_client_get_path_for_bundle_identifier(InstallationProxyClientHandle, String, out IntPtr) Queries the device for the path of an application. Declaration public static InstallationProxyError instproxy_client_get_path_for_bundle_identifier(InstallationProxyClientHandle client, string bundleId, out IntPtr path) Parameters Type Name Description InstallationProxyClientHandle client The connected installation proxy client. System.String bundleId System.IntPtr path Pointer to store the device path for the application which is set to NULL if it could not be determined. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success, INSTPROXY_E_OP_FAILED if the path could not be determined or an INSTPROXY_E_* error value if an error occured. | Improve this Doc View Source instproxy_client_get_path_for_bundle_identifier(InstallationProxyClientHandle, String, out String) Declaration public static InstallationProxyError instproxy_client_get_path_for_bundle_identifier(InstallationProxyClientHandle client, string bundleId, out string path) Parameters Type Name Description InstallationProxyClientHandle client System.String bundleId System.String path Returns Type Description InstallationProxyError instproxy_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out InstallationProxyClientHandle) Connects to the installation_proxy service on the specified device. Declaration public static InstallationProxyError instproxy_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out InstallationProxyClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. InstallationProxyClientHandle client Pointer that will be set to a newly allocated instproxy_client_t upon successful return. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success, or an INSTPROXY_E_* error value when an error occured. instproxy_client_options_add(PlistHandle) Adds one or more new key:value pairs to the given client_options. Declaration public static void instproxy_client_options_add(PlistHandle clientOptions) Parameters Type Name Description PlistHandle clientOptions Remarks The keys and values passed are expected to be strings, except for the keys \"ApplicationSINF\", \"iTunesMetadata\", \"ReturnAttributes\" which are expecting a plist_t node as value and \"SkipUninstall\" expects int. instproxy_client_options_add(PlistHandle, String, String, Byte) Declaration public static void instproxy_client_options_add(PlistHandle client_options, string key, string value, byte term) Parameters Type Name Description PlistHandle client_options System.String key System.String value System.Byte term instproxy_client_options_free(PlistHandle) Frees client_options plist. Declaration public static void instproxy_client_options_free(PlistHandle clientOptions) Parameters Type Name Description PlistHandle clientOptions instproxy_client_options_new() Creates a new client_options plist. Declaration public static PlistHandle instproxy_client_options_new() Returns Type Description PlistHandle A new plist_t of type PLIST_DICT. instproxy_client_options_set_return_attributes(PlistHandle) Adds attributes to the given client_options to filter browse results. Declaration public static void instproxy_client_options_set_return_attributes(PlistHandle clientOptions) Parameters Type Name Description PlistHandle clientOptions Remarks The values passed are expected to be strings. instproxy_client_start_service(iDeviceHandle, out InstallationProxyClientHandle, String) Starts a new installation_proxy service on the specified device and connects to it. Declaration public static InstallationProxyError instproxy_client_start_service(iDeviceHandle device, out InstallationProxyClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. InstallationProxyClientHandle client Pointer that will point to a newly allocated instproxy_client_t upon successful return. Must be freed using instproxy_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success, or an INSTPROXY_E_* error code otherwise. instproxy_command_get_name(PlistHandle, out IntPtr) Gets the name from a command dictionary. Declaration public static void instproxy_command_get_name(PlistHandle command, out IntPtr name) Parameters Type Name Description PlistHandle command The dictionary describing the command. System.IntPtr name Pointer to store the name of the command. | Improve this Doc View Source instproxy_command_get_name(PlistHandle, out String) Declaration public static void instproxy_command_get_name(PlistHandle command, out string name) Parameters Type Name Description PlistHandle command System.String name instproxy_install(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Install an application on the device. Declaration public static InstallationProxyError instproxy_install(InstallationProxyClientHandle client, string pkgPath, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client System.String pkgPath PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function. | Improve this Doc View Source instproxy_lookup(InstallationProxyClientHandle, ReadOnlyCollection<String>, PlistHandle, out PlistHandle) Declaration public static InstallationProxyError instproxy_lookup(InstallationProxyClientHandle client, ReadOnlyCollection<string> appids, PlistHandle clientOptions, out PlistHandle result) Parameters Type Name Description InstallationProxyClientHandle client System.Collections.ObjectModel.ReadOnlyCollection < System.String > appids PlistHandle clientOptions PlistHandle result Returns Type Description InstallationProxyError instproxy_lookup(InstallationProxyClientHandle, IntPtr, PlistHandle, out PlistHandle) Lookup information about specific applications from the device. Declaration public static InstallationProxyError instproxy_lookup(InstallationProxyClientHandle client, IntPtr appids, PlistHandle clientOptions, out PlistHandle result) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client System.IntPtr appids An array of bundle identifiers that MUST have a terminating NULL entry or NULL to lookup all. PlistHandle clientOptions PlistHandle result Pointer that will be set to a plist containing a PLIST_DICT holding requested information about the application or NULL on errors. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. instproxy_lookup_archives(InstallationProxyClientHandle, PlistHandle, out PlistHandle) List archived applications. This function runs synchronously. Declaration public static InstallationProxyError instproxy_lookup_archives(InstallationProxyClientHandle client, PlistHandle clientOptions, out PlistHandle result) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client PlistHandle clientOptions PlistHandle result Pointer that will be set to a plist containing a PLIST_DICT holding information about the archived applications found. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. instproxy_remove_archive(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Removes a previously archived application from the device. This function removes the ZIP archive from the 'ApplicationArchives' directory. Declaration public static InstallationProxyError instproxy_remove_archive(InstallationProxyClientHandle client, string appid, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation proxy client System.String appid ApplicationIdentifier of the archived app to remove. PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function. instproxy_restore(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Restore a previously archived application on the device. This function is the counterpart to instproxy_archive. Declaration public static InstallationProxyError instproxy_restore(InstallationProxyClientHandle client, string appid, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation proxy client System.String appid ApplicationIdentifier of the app to restore. PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function. instproxy_status_get_current_list(PlistHandle, ref UInt64, ref UInt64, ref UInt64, out PlistHandle) Gets total and current item information from a browse response if available. Declaration public static void instproxy_status_get_current_list(PlistHandle status, ref ulong total, ref ulong currentIndex, ref ulong currentAmount, out PlistHandle list) Parameters Type Name Description PlistHandle status The dictionary status response to use. System.UInt64 total Pointer to store the total number of items. System.UInt64 currentIndex System.UInt64 currentAmount PlistHandle list Pointer to store a newly allocated plist with items. The caller is reponsible for freeing the list after use. If NULL is passed no list will be returned. If NULL is returned no list was found in the status. instproxy_status_get_error(PlistHandle, out IntPtr, out IntPtr, ref UInt64) Gets error name, code and description from a response if available. Declaration public static InstallationProxyError instproxy_status_get_error(PlistHandle status, out IntPtr name, out IntPtr description, ref ulong code) Parameters Type Name Description PlistHandle status The dictionary status response to use. System.IntPtr name Pointer to store the name of an error. System.IntPtr description Pointer to store error description text if available. The caller is reponsible for freeing the allocated buffer after use. If NULL is passed no description will be returned. System.UInt64 code Pointer to store the returned error code if available. If NULL is passed no error code will be returned. Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS if no error is found or an INSTPROXY_E_* error value matching the error that áºƒas found in the status. | Improve this Doc View Source instproxy_status_get_error(PlistHandle, out String, out String, ref UInt64) Declaration public static InstallationProxyError instproxy_status_get_error(PlistHandle status, out string name, out string description, ref ulong code) Parameters Type Name Description PlistHandle status System.String name System.String description System.UInt64 code Returns Type Description InstallationProxyError instproxy_status_get_name(PlistHandle, out IntPtr) Gets the name of a status. Declaration public static void instproxy_status_get_name(PlistHandle status, out IntPtr name) Parameters Type Name Description PlistHandle status The dictionary status response to use. System.IntPtr name Pointer to store the name of the status. | Improve this Doc View Source instproxy_status_get_name(PlistHandle, out String) Declaration public static void instproxy_status_get_name(PlistHandle status, out string name) Parameters Type Name Description PlistHandle status System.String name instproxy_status_get_percent_complete(PlistHandle, ref Int32) Gets progress in percentage from a status if available. Declaration public static void instproxy_status_get_percent_complete(PlistHandle status, ref int percent) Parameters Type Name Description PlistHandle status The dictionary status response to use. System.Int32 percent instproxy_uninstall(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Uninstall an application from the device. Declaration public static InstallationProxyError instproxy_uninstall(InstallationProxyClientHandle client, string appid, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation proxy client System.String appid ApplicationIdentifier of the app to uninstall PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function. instproxy_upgrade(InstallationProxyClientHandle, String, PlistHandle, InstallationProxyStatusCallBack, IntPtr) Upgrade an application on the device. This function is nearly the same as instproxy_install; the difference is that the installation progress on the device is faster if the application is already installed. Declaration public static InstallationProxyError instproxy_upgrade(InstallationProxyClientHandle client, string pkgPath, PlistHandle clientOptions, InstallationProxyStatusCallBack statusCallBack, IntPtr userData) Parameters Type Name Description InstallationProxyClientHandle client The connected installation_proxy client System.String pkgPath PlistHandle clientOptions InstallationProxyStatusCallBack statusCallBack System.IntPtr userData Returns Type Description InstallationProxyError INSTPROXY_E_SUCCESS on success or an INSTPROXY_E_* error value if an error occured. Remarks If a callback function is given (async mode), this function returns INSTPROXY_E_SUCCESS immediately if the status updater thread has been created successfully; any error occuring during the command has to be handled inside the specified callback function."
  },
  "api/iMobileDevice.iDevice.iDeviceListMarshaler.html": {
    "href": "api/iMobileDevice.iDevice.iDeviceListMarshaler.html",
    "title": "Class iDeviceListMarshaler | imobiledevice-net API",
    "keywords": "Class iDeviceListMarshaler Inheritance System.Object NativeStringArrayMarshaler iDeviceListMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members NativeStringArrayMarshaler.CleanUpManagedData(Object) NativeStringArrayMarshaler.GetNativeDataSize() NativeStringArrayMarshaler.MarshalManagedToNative(Object) NativeStringArrayMarshaler.MarshalNativeToManaged(IntPtr) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.iDevice Assembly : iMobileDevice-net.dll Syntax public class iDeviceListMarshaler : NativeStringArrayMarshaler, ICustomMarshaler Methods | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public override void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Overrides NativeStringArrayMarshaler.CleanUpNativeData(IntPtr) | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.iDevice.iDeviceHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.iDevice.iDeviceHandleDelegateMarshaler.html",
    "title": "Class iDeviceHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class iDeviceHandleDelegateMarshaler Inheritance System.Object iDeviceHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.iDevice Assembly : iMobileDevice-net.dll Syntax public class iDeviceHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.HouseArrest.HouseArrestClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.HouseArrest.HouseArrestClientHandleDelegateMarshaler.html",
    "title": "Class HouseArrestClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class HouseArrestClientHandleDelegateMarshaler Inheritance System.Object HouseArrestClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.HouseArrest Assembly : iMobileDevice-net.dll Syntax public class HouseArrestClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.HouseArrest.HouseArrestClientHandle.html": {
    "href": "api/iMobileDevice.HouseArrest.HouseArrestClientHandle.html",
    "title": "Class HouseArrestClientHandle | imobiledevice-net API",
    "keywords": "Class HouseArrestClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid HouseArrestClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.HouseArrest Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class HouseArrestClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source HouseArrestClientHandle() Declaration protected HouseArrestClientHandle() | Improve this Doc View Source HouseArrestClientHandle(Boolean) Declaration protected HouseArrestClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static HouseArrestClientHandle Zero { get; } Property Value Type Description HouseArrestClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static HouseArrestClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description HouseArrestClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static HouseArrestClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description HouseArrestClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.HeartBeat.HeartBeatClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.HeartBeat.HeartBeatClientHandleDelegateMarshaler.html",
    "title": "Class HeartBeatClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class HeartBeatClientHandleDelegateMarshaler Inheritance System.Object HeartBeatClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.HeartBeat Assembly : iMobileDevice-net.dll Syntax public class HeartBeatClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.FileRelay.FileRelayErrorExtensions.html": {
    "href": "api/iMobileDevice.FileRelay.FileRelayErrorExtensions.html",
    "title": "Class FileRelayErrorExtensions | imobiledevice-net API",
    "keywords": "Class FileRelayErrorExtensions Inheritance System.Object FileRelayErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.FileRelay Assembly : iMobileDevice-net.dll Syntax public static class FileRelayErrorExtensions Methods | Improve this Doc View Source IsError(FileRelayError) Declaration public static bool IsError(this FileRelayError value) Parameters Type Name Description FileRelayError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(FileRelayError) Declaration public static void ThrowOnError(this FileRelayError value) Parameters Type Name Description FileRelayError value | Improve this Doc View Source ThrowOnError(FileRelayError, String) Declaration public static void ThrowOnError(this FileRelayError value, string message) Parameters Type Name Description FileRelayError value System.String message"
  },
  "api/iMobileDevice.FileRelay.FileRelayApi.html": {
    "href": "api/iMobileDevice.FileRelay.FileRelayApi.html",
    "title": "Class FileRelayApi | imobiledevice-net API",
    "keywords": "Class FileRelayApi Inheritance System.Object FileRelayApi Implements IFileRelayApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.FileRelay Assembly : iMobileDevice-net.dll Syntax public class FileRelayApi : IFileRelayApi Constructors | Improve this Doc View Source FileRelayApi(ILibiMobileDevice) Declaration public FileRelayApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source file_relay_client_free(IntPtr) Disconnects a file_relay client from the device and frees up the file_relay client data. Declaration public virtual FileRelayError file_relay_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The file_relay client to disconnect and free. Returns Type Description FileRelayError FILE_RELAY_E_SUCCESS on success, FILE_RELAY_E_INVALID_ARG when one of client or client->parent is invalid, or FILE_RELAY_E_UNKNOWN_ERROR when the was an error freeing the parent property_list_service client. | Improve this Doc View Source file_relay_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out FileRelayClientHandle) Connects to the file_relay service on the specified device. Declaration public virtual FileRelayError file_relay_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out FileRelayClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. FileRelayClientHandle client Reference that will point to a newly allocated file_relay_client_t upon successful return. Returns Type Description FileRelayError FILE_RELAY_E_SUCCESS on success, FILE_RELAY_E_INVALID_ARG when one of the parameters is invalid, or FILE_RELAY_E_MUX_ERROR when the connection failed. | Improve this Doc View Source file_relay_client_start_service(iDeviceHandle, out FileRelayClientHandle, String) Starts a new file_relay service on the specified device and connects to it. Declaration public virtual FileRelayError file_relay_client_start_service(iDeviceHandle device, out FileRelayClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. FileRelayClientHandle client Pointer that will point to a newly allocated file_relay_client_t upon successful return. Must be freed using file_relay_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description FileRelayError FILE_RELAY_E_SUCCESS on success, or an FILE_RELAY_E_* error code otherwise. | Improve this Doc View Source file_relay_request_sources(FileRelayClientHandle, out String, out iDeviceConnectionHandle) Request data for the given sources. Declaration public virtual FileRelayError file_relay_request_sources(FileRelayClientHandle client, out string sources, out iDeviceConnectionHandle connection) Parameters Type Name Description FileRelayClientHandle client The connected file_relay client. System.String sources A NULL-terminated list of sources to retrieve. Valid sources are: AppleSupport Network VPN WiFi UserDatabases CrashReporter tmp SystemConfiguration iDeviceConnectionHandle connection The connection that has to be used for receiving the data using idevice_connection_receive(). The connection will be closed automatically by the device, but use file_relay_client_free() to clean up properly. Returns Type Description FileRelayError FILE_RELAY_E_SUCCESS on succes, FILE_RELAY_E_INVALID_ARG when one or more parameters are invalid, FILE_RELAY_E_MUX_ERROR if a communication error occurs, FILE_RELAY_E_PLIST_ERROR when the received result is NULL or is not a valid plist, FILE_RELAY_E_INVALID_SOURCE if one or more sources are invalid, FILE_RELAY_E_STAGING_EMPTY if no data is available for the given sources, or FILE_RELAY_E_UNKNOWN_ERROR otherwise. Remarks WARNING: Don't call this function without reading the data afterwards. A directory mobile_file_relay.XXXX used for creating the archive will remain in the /tmp directory otherwise. | Improve this Doc View Source file_relay_request_sources_timeout(FileRelayClientHandle, out String, out iDeviceConnectionHandle, UInt32) Request data for the given sources. Calls file_relay_request_sources_timeout() with a timeout of 60000 milliseconds (60 seconds). Declaration public virtual FileRelayError file_relay_request_sources_timeout(FileRelayClientHandle client, out string sources, out iDeviceConnectionHandle connection, uint timeout) Parameters Type Name Description FileRelayClientHandle client The connected file_relay client. System.String sources A NULL-terminated list of sources to retrieve. Valid sources are: AppleSupport Network VPN WiFi UserDatabases CrashReporter tmp SystemConfiguration iDeviceConnectionHandle connection The connection that has to be used for receiving the data using idevice_connection_receive(). The connection will be closed automatically by the device, but use file_relay_client_free() to clean up properly. System.UInt32 timeout Returns Type Description FileRelayError FILE_RELAY_E_SUCCESS on succes, FILE_RELAY_E_INVALID_ARG when one or more parameters are invalid, FILE_RELAY_E_MUX_ERROR if a communication error occurs, FILE_RELAY_E_PLIST_ERROR when the received result is NULL or is not a valid plist, FILE_RELAY_E_INVALID_SOURCE if one or more sources are invalid, FILE_RELAY_E_STAGING_EMPTY if no data is available for the given sources, or FILE_RELAY_E_UNKNOWN_ERROR otherwise. Remarks WARNING: Don't call this function without reading the data afterwards. A directory mobile_file_relay.XXXX used for creating the archive will remain in the /tmp directory otherwise. Implements IFileRelayApi"
  },
  "api/iMobileDevice.DiagnosticsRelay.DiagnosticsRelayClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.DiagnosticsRelay.DiagnosticsRelayClientHandleDelegateMarshaler.html",
    "title": "Class DiagnosticsRelayClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class DiagnosticsRelayClientHandleDelegateMarshaler Inheritance System.Object DiagnosticsRelayClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.DiagnosticsRelay Assembly : iMobileDevice-net.dll Syntax public class DiagnosticsRelayClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.DebugServer.DebugServerException.html": {
    "href": "api/iMobileDevice.DebugServer.DebugServerException.html",
    "title": "Class DebugServerException | imobiledevice-net API",
    "keywords": "Class DebugServerException Inheritance System.Object System.Exception DebugServerException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.DebugServer Assembly : iMobileDevice-net.dll Syntax [Serializable] public class DebugServerException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source DebugServerException() Initializes a new instance of the DebugServerException class. Declaration public DebugServerException() | Improve this Doc View Source DebugServerException(DebugServerError) Declaration public DebugServerException(DebugServerError error) Parameters Type Name Description DebugServerError error | Improve this Doc View Source DebugServerException(DebugServerError, String) Declaration public DebugServerException(DebugServerError error, string message) Parameters Type Name Description DebugServerError error System.String message | Improve this Doc View Source DebugServerException(SerializationInfo, StreamingContext) Initializes a new instance of the DebugServerException class with serialized data. Declaration protected DebugServerException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source DebugServerException(String) Initializes a new instance of the DebugServerException class with a specified error message. Declaration public DebugServerException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source DebugServerException(String, Exception) Initializes a new instance of the DebugServerException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public DebugServerException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual DebugServerError ErrorCode { get; } Property Value Type Description DebugServerError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.DebugServer.DebugServerClientHandle.html": {
    "href": "api/iMobileDevice.DebugServer.DebugServerClientHandle.html",
    "title": "Class DebugServerClientHandle | imobiledevice-net API",
    "keywords": "Class DebugServerClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid DebugServerClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.DebugServer Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class DebugServerClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source DebugServerClientHandle() Declaration protected DebugServerClientHandle() | Improve this Doc View Source DebugServerClientHandle(Boolean) Declaration protected DebugServerClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static DebugServerClientHandle Zero { get; } Property Value Type Description DebugServerClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static DebugServerClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description DebugServerClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static DebugServerClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description DebugServerClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.Afc.AfcLinkType.html": {
    "href": "api/iMobileDevice.Afc.AfcLinkType.html",
    "title": "Enum AfcLinkType | imobiledevice-net API",
    "keywords": "Enum AfcLinkType Type of link for afc_make_link() calls Namespace : iMobileDevice.Afc Assembly : iMobileDevice-net.dll Syntax public enum AfcLinkType Fields Name Description Hardlink Symlink"
  },
  "api/iMobileDevice.Afc.AfcErrorExtensions.html": {
    "href": "api/iMobileDevice.Afc.AfcErrorExtensions.html",
    "title": "Class AfcErrorExtensions | imobiledevice-net API",
    "keywords": "Class AfcErrorExtensions Inheritance System.Object AfcErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Afc Assembly : iMobileDevice-net.dll Syntax public static class AfcErrorExtensions Methods | Improve this Doc View Source IsError(AfcError) Declaration public static bool IsError(this AfcError value) Parameters Type Name Description AfcError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(AfcError) Declaration public static void ThrowOnError(this AfcError value) Parameters Type Name Description AfcError value | Improve this Doc View Source ThrowOnError(AfcError, String) Declaration public static void ThrowOnError(this AfcError value, string message) Parameters Type Name Description AfcError value System.String message"
  },
  "api/iMobileDevice.SyslogRelay.SyslogRelayApi.html": {
    "href": "api/iMobileDevice.SyslogRelay.SyslogRelayApi.html",
    "title": "Class SyslogRelayApi | imobiledevice-net API",
    "keywords": "Class SyslogRelayApi Inheritance System.Object SyslogRelayApi Implements ISyslogRelayApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.SyslogRelay Assembly : iMobileDevice-net.dll Syntax public class SyslogRelayApi : ISyslogRelayApi Constructors | Improve this Doc View Source SyslogRelayApi(ILibiMobileDevice) Declaration public SyslogRelayApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source syslog_relay_client_free(IntPtr) Disconnects a syslog_relay client from the device and frees up the syslog_relay client data. Declaration public virtual SyslogRelayError syslog_relay_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The syslog_relay client to disconnect and free. Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when client is NULL, or an SYSLOG_RELAY_E_* error code otherwise. | Improve this Doc View Source syslog_relay_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out SyslogRelayClientHandle) Connects to the syslog_relay service on the specified device. Declaration public virtual SyslogRelayError syslog_relay_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out SyslogRelayClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. SyslogRelayClientHandle client Pointer that will point to a newly allocated syslog_relay_client_t upon successful return. Must be freed using syslog_relay_client_free() after use. Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when client is NULL, or an SYSLOG_RELAY_E_* error code otherwise. | Improve this Doc View Source syslog_relay_client_start_service(iDeviceHandle, out SyslogRelayClientHandle, String) Starts a new syslog_relay service on the specified device and connects to it. Declaration public virtual SyslogRelayError syslog_relay_client_start_service(iDeviceHandle device, out SyslogRelayClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. SyslogRelayClientHandle client Pointer that will point to a newly allocated syslog_relay_client_t upon successful return. Must be freed using syslog_relay_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, or an SYSLOG_RELAY_E_* error code otherwise. | Improve this Doc View Source syslog_relay_receive(SyslogRelayClientHandle, Byte[], UInt32, ref UInt32) Receives data from the service. Declaration public virtual SyslogRelayError syslog_relay_receive(SyslogRelayClientHandle client, byte[] data, uint size, ref uint received) Parameters Type Name Description SyslogRelayClientHandle client The syslog_relay client System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when client or plist is NULL | Improve this Doc View Source syslog_relay_receive_with_timeout(SyslogRelayClientHandle, Byte[], UInt32, ref UInt32, UInt32) Receives data using the given syslog_relay client with specified timeout. Declaration public virtual SyslogRelayError syslog_relay_receive_with_timeout(SyslogRelayClientHandle client, byte[] data, uint size, ref uint received, uint timeout) Parameters Type Name Description SyslogRelayClientHandle client The syslog_relay client to use for receiving System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) System.UInt32 timeout Maximum time in milliseconds to wait for data. Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when one or more parameters are invalid, SYSLOG_RELAY_E_MUX_ERROR when a communication error occurs, or SYSLOG_RELAY_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source syslog_relay_start_capture(SyslogRelayClientHandle, SyslogRelayReceiveCallBack, IntPtr) Starts capturing the syslog of the device using a callback. Use syslog_relay_stop_capture() to stop receiving the syslog. Declaration public virtual SyslogRelayError syslog_relay_start_capture(SyslogRelayClientHandle client, SyslogRelayReceiveCallBack callback, IntPtr userData) Parameters Type Name Description SyslogRelayClientHandle client The syslog_relay client to use SyslogRelayReceiveCallBack callback Callback to receive each character from the syslog. System.IntPtr userData Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when one or more parameters are invalid or SYSLOG_RELAY_E_UNKNOWN_ERROR when an unspecified error occurs or a syslog capture has already been started. | Improve this Doc View Source syslog_relay_stop_capture(SyslogRelayClientHandle) Stops capturing the syslog of the device. Use syslog_relay_start_capture() to start receiving the syslog. Declaration public virtual SyslogRelayError syslog_relay_stop_capture(SyslogRelayClientHandle client) Parameters Type Name Description SyslogRelayClientHandle client The syslog_relay client to use Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when one or more parameters are invalid or SYSLOG_RELAY_E_UNKNOWN_ERROR when an unspecified error occurs or a syslog capture has already been started. Implements ISyslogRelayApi"
  },
  "api/iMobileDevice.WebInspector.IWebInspectorApi.html": {
    "href": "api/iMobileDevice.WebInspector.IWebInspectorApi.html",
    "title": "Interface IWebInspectorApi | imobiledevice-net API",
    "keywords": "Interface IWebInspectorApi Namespace : iMobileDevice.WebInspector Assembly : iMobileDevice-net.dll Syntax public interface IWebInspectorApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.WebInspector . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source webinspector_client_free(IntPtr) Disconnects a webinspector client from the device and frees up the webinspector client data. Declaration WebInspectorError webinspector_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The webinspector client to disconnect and free. Returns Type Description WebInspectorError WEBINSPECTOR_E_SUCCESS on success, WEBINSPECTOR_E_INVALID_ARG when client is NULL, or an WEBINSPECTOR_E_* error code otherwise. | Improve this Doc View Source webinspector_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out WebInspectorClientHandle) Connects to the webinspector service on the specified device. Declaration WebInspectorError webinspector_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out WebInspectorClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. WebInspectorClientHandle client Pointer that will point to a newly allocated webinspector_client_t upon successful return. Must be freed using webinspector_client_free() after use. Returns Type Description WebInspectorError WEBINSPECTOR_E_SUCCESS on success, WEBINSPECTOR_E_INVALID_ARG when client is NULL, or an WEBINSPECTOR_E_* error code otherwise. | Improve this Doc View Source webinspector_client_start_service(iDeviceHandle, out WebInspectorClientHandle, String) Starts a new webinspector service on the specified device and connects to it. Declaration WebInspectorError webinspector_client_start_service(iDeviceHandle device, out WebInspectorClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. WebInspectorClientHandle client Pointer that will point to a newly allocated webinspector_client_t upon successful return. Must be freed using webinspector_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description WebInspectorError WEBINSPECTOR_E_SUCCESS on success, or an WEBINSPECTOR_E_* error code otherwise. | Improve this Doc View Source webinspector_receive(WebInspectorClientHandle, out PlistHandle) Receives a plist from the service. Declaration WebInspectorError webinspector_receive(WebInspectorClientHandle client, out PlistHandle plist) Parameters Type Name Description WebInspectorClientHandle client The webinspector client PlistHandle plist The plist to store the received data Returns Type Description WebInspectorError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client or plist is NULL | Improve this Doc View Source webinspector_receive_with_timeout(WebInspectorClientHandle, out PlistHandle, UInt32) Receives a plist using the given webinspector client. Declaration WebInspectorError webinspector_receive_with_timeout(WebInspectorClientHandle client, out PlistHandle plist, uint timeoutMs) Parameters Type Name Description WebInspectorClientHandle client The webinspector client to use for receiving PlistHandle plist pointer to a plist_t that will point to the received plist upon successful return System.UInt32 timeoutMs Returns Type Description WebInspectorError WEBINSPECTOR_E_SUCCESS on success, WEBINSPECTOR_E_INVALID_ARG when client or *plist is NULL, WEBINSPECTOR_E_PLIST_ERROR when the received data cannot be converted to a plist, WEBINSPECTOR_E_MUX_ERROR when a communication error occurs, or WEBINSPECTOR_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source webinspector_send(WebInspectorClientHandle, PlistHandle) Sends a plist to the service. Declaration WebInspectorError webinspector_send(WebInspectorClientHandle client, PlistHandle plist) Parameters Type Name Description WebInspectorClientHandle client The webinspector client PlistHandle plist The plist to send Returns Type Description WebInspectorError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client or plist is NULL"
  },
  "api/iMobileDevice.SyslogRelay.ISyslogRelayApi.html": {
    "href": "api/iMobileDevice.SyslogRelay.ISyslogRelayApi.html",
    "title": "Interface ISyslogRelayApi | imobiledevice-net API",
    "keywords": "Interface ISyslogRelayApi Namespace : iMobileDevice.SyslogRelay Assembly : iMobileDevice-net.dll Syntax public interface ISyslogRelayApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.SyslogRelay . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source syslog_relay_client_free(IntPtr) Disconnects a syslog_relay client from the device and frees up the syslog_relay client data. Declaration SyslogRelayError syslog_relay_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The syslog_relay client to disconnect and free. Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when client is NULL, or an SYSLOG_RELAY_E_* error code otherwise. | Improve this Doc View Source syslog_relay_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out SyslogRelayClientHandle) Connects to the syslog_relay service on the specified device. Declaration SyslogRelayError syslog_relay_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out SyslogRelayClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. SyslogRelayClientHandle client Pointer that will point to a newly allocated syslog_relay_client_t upon successful return. Must be freed using syslog_relay_client_free() after use. Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when client is NULL, or an SYSLOG_RELAY_E_* error code otherwise. | Improve this Doc View Source syslog_relay_client_start_service(iDeviceHandle, out SyslogRelayClientHandle, String) Starts a new syslog_relay service on the specified device and connects to it. Declaration SyslogRelayError syslog_relay_client_start_service(iDeviceHandle device, out SyslogRelayClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. SyslogRelayClientHandle client Pointer that will point to a newly allocated syslog_relay_client_t upon successful return. Must be freed using syslog_relay_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, or an SYSLOG_RELAY_E_* error code otherwise. | Improve this Doc View Source syslog_relay_receive(SyslogRelayClientHandle, Byte[], UInt32, ref UInt32) Receives data from the service. Declaration SyslogRelayError syslog_relay_receive(SyslogRelayClientHandle client, byte[] data, uint size, ref uint received) Parameters Type Name Description SyslogRelayClientHandle client The syslog_relay client System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when client or plist is NULL | Improve this Doc View Source syslog_relay_receive_with_timeout(SyslogRelayClientHandle, Byte[], UInt32, ref UInt32, UInt32) Receives data using the given syslog_relay client with specified timeout. Declaration SyslogRelayError syslog_relay_receive_with_timeout(SyslogRelayClientHandle client, byte[] data, uint size, ref uint received, uint timeout) Parameters Type Name Description SyslogRelayClientHandle client The syslog_relay client to use for receiving System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) System.UInt32 timeout Maximum time in milliseconds to wait for data. Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when one or more parameters are invalid, SYSLOG_RELAY_E_MUX_ERROR when a communication error occurs, or SYSLOG_RELAY_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source syslog_relay_start_capture(SyslogRelayClientHandle, SyslogRelayReceiveCallBack, IntPtr) Starts capturing the syslog of the device using a callback. Use syslog_relay_stop_capture() to stop receiving the syslog. Declaration SyslogRelayError syslog_relay_start_capture(SyslogRelayClientHandle client, SyslogRelayReceiveCallBack callback, IntPtr userData) Parameters Type Name Description SyslogRelayClientHandle client The syslog_relay client to use SyslogRelayReceiveCallBack callback Callback to receive each character from the syslog. System.IntPtr userData Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when one or more parameters are invalid or SYSLOG_RELAY_E_UNKNOWN_ERROR when an unspecified error occurs or a syslog capture has already been started. | Improve this Doc View Source syslog_relay_stop_capture(SyslogRelayClientHandle) Stops capturing the syslog of the device. Use syslog_relay_start_capture() to start receiving the syslog. Declaration SyslogRelayError syslog_relay_stop_capture(SyslogRelayClientHandle client) Parameters Type Name Description SyslogRelayClientHandle client The syslog_relay client to use Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when one or more parameters are invalid or SYSLOG_RELAY_E_UNKNOWN_ERROR when an unspecified error occurs or a syslog capture has already been started."
  },
  "api/iMobileDevice.SpringBoardServices.html": {
    "href": "api/iMobileDevice.SpringBoardServices.html",
    "title": "Namespace iMobileDevice.SpringBoardServices | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.SpringBoardServices Classes SpringBoardServicesApi SpringBoardServicesClientHandle SpringBoardServicesClientHandleDelegateMarshaler SpringBoardServicesErrorExtensions SpringBoardServicesException SpringBoardServicesNativeMethods Interfaces ISpringBoardServicesApi Enums SpringBoardServicesError Error Codes SpringBoardServicesInterfaceOrientation"
  },
  "api/iMobileDevice.SpringBoardServices.SpringBoardServicesNativeMethods.html": {
    "href": "api/iMobileDevice.SpringBoardServices.SpringBoardServicesNativeMethods.html",
    "title": "Class SpringBoardServicesNativeMethods | imobiledevice-net API",
    "keywords": "Class SpringBoardServicesNativeMethods Inheritance System.Object SpringBoardServicesNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.SpringBoardServices Assembly : iMobileDevice-net.dll Syntax public class SpringBoardServicesNativeMethods Methods sbservices_client_free(IntPtr) Disconnects an sbservices client from the device and frees up the sbservices client data. Declaration public static SpringBoardServicesError sbservices_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The sbservices client to disconnect and free. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client is NULL, or an SBSERVICES_E_* error code otherwise. sbservices_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out SpringBoardServicesClientHandle) Connects to the springboardservices service on the specified device. Declaration public static SpringBoardServicesError sbservices_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out SpringBoardServicesClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. SpringBoardServicesClientHandle client Pointer that will point to a newly allocated sbservices_client_t upon successful return. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client is NULL, or an SBSERVICES_E_* error code otherwise. sbservices_client_start_service(iDeviceHandle, out SpringBoardServicesClientHandle, String) Starts a new sbservices service on the specified device and connects to it. Declaration public static SpringBoardServicesError sbservices_client_start_service(iDeviceHandle device, out SpringBoardServicesClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. SpringBoardServicesClientHandle client Pointer that will point to a newly allocated sbservices_client_t upon successful return. Must be freed using sbservices_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, or an SBSERVICES_E_* error code otherwise. sbservices_get_home_screen_wallpaper_pngdata(SpringBoardServicesClientHandle, ref IntPtr, ref UInt64) Get the home screen wallpaper as PNG data. Declaration public static SpringBoardServicesError sbservices_get_home_screen_wallpaper_pngdata(SpringBoardServicesClientHandle client, ref IntPtr pngdata, ref ulong pngsize) Parameters Type Name Description SpringBoardServicesClientHandle client The connected sbservices client to use. System.IntPtr pngdata Pointer that will point to a newly allocated buffer containing the PNG data upon successful return. It is up to the caller to free the memory. System.UInt64 pngsize Pointer to a uint64_t that will be set to the size of the buffer pngdata points to upon successful return. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client or pngdata are invalid, or an SBSERVICES_E_* error code otherwise. sbservices_get_icon_pngdata(SpringBoardServicesClientHandle, String, ref IntPtr, ref UInt64) Get the icon of the specified app as PNG data. Declaration public static SpringBoardServicesError sbservices_get_icon_pngdata(SpringBoardServicesClientHandle client, string bundleid, ref IntPtr pngdata, ref ulong pngsize) Parameters Type Name Description SpringBoardServicesClientHandle client The connected sbservices client to use. System.String bundleid System.IntPtr pngdata Pointer that will point to a newly allocated buffer containing the PNG data upon successful return. It is up to the caller to free the memory. System.UInt64 pngsize Pointer to a uint64_t that will be set to the size of the buffer pngdata points to upon successful return. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client, bundleId, or pngdata are invalid, or an SBSERVICES_E_* error code otherwise. sbservices_get_icon_state(SpringBoardServicesClientHandle, out PlistHandle, String) Gets the icon state of the connected device. Declaration public static SpringBoardServicesError sbservices_get_icon_state(SpringBoardServicesClientHandle client, out PlistHandle state, string formatVersion) Parameters Type Name Description SpringBoardServicesClientHandle client The connected sbservices client to use. PlistHandle state Pointer that will point to a newly allocated plist containing the current icon state. It is up to the caller to free the memory. System.String formatVersion Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client or state is invalid, or an SBSERVICES_E_* error code otherwise. sbservices_get_interface_orientation(SpringBoardServicesClientHandle, ref SpringBoardServicesInterfaceOrientation) Gets the interface orientation of the device. Declaration public static SpringBoardServicesError sbservices_get_interface_orientation(SpringBoardServicesClientHandle client, ref SpringBoardServicesInterfaceOrientation interfaceOrientation) Parameters Type Name Description SpringBoardServicesClientHandle client The connected sbservices client to use. SpringBoardServicesInterfaceOrientation interfaceOrientation Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client or state is invalid, or an SBSERVICES_E_* error code otherwise. sbservices_set_icon_state(SpringBoardServicesClientHandle, PlistHandle) Sets the icon state of the connected device. Declaration public static SpringBoardServicesError sbservices_set_icon_state(SpringBoardServicesClientHandle client, PlistHandle newstate) Parameters Type Name Description SpringBoardServicesClientHandle client The connected sbservices client to use. PlistHandle newstate A plist containing the new iconstate. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client or newstate is NULL, or an SBSERVICES_E_* error code otherwise."
  },
  "api/iMobileDevice.Afc.AfcError.html": {
    "href": "api/iMobileDevice.Afc.AfcError.html",
    "title": "Enum AfcError | imobiledevice-net API",
    "keywords": "Enum AfcError Error Codes Namespace : iMobileDevice.Afc Assembly : iMobileDevice-net.dll Syntax public enum AfcError Fields Name Description DirNotEmpty EmptyResponse EndOfData ForceSignedType IncompleteHeader InternalError InvalidArg IoError MuxError NoMem NoResources NoSpaceLeft NotEnoughData ObjectBusy ObjectExists ObjectIsDir ObjectNotFound OpHeaderInvalid OpInProgress OpInterrupted OpNotSupported OpTimeout OpWouldBlock PermDenied ReadError ServiceClientFailed ServiceNotConnected Success TooMuchData UnknownError UnknownPacketType WriteError Extension Methods AfcErrorExtensions.ThrowOnError() AfcErrorExtensions.ThrowOnError(String) AfcErrorExtensions.IsError()"
  },
  "api/iMobileDevice.html": {
    "href": "api/iMobileDevice.html",
    "title": "Namespace iMobileDevice | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice Classes LibiMobileDevice NativeLibraries NativeStringArrayMarshaler NativeStringMarshaler Utf8Marshal Interfaces ILibiMobileDevice"
  },
  "api/iMobileDevice.WebInspector.html": {
    "href": "api/iMobileDevice.WebInspector.html",
    "title": "Namespace iMobileDevice.WebInspector | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.WebInspector Classes WebInspectorApi WebInspectorClientHandle WebInspectorClientHandleDelegateMarshaler WebInspectorErrorExtensions WebInspectorException WebInspectorNativeMethods Interfaces IWebInspectorApi Enums WebInspectorError Error Codes"
  },
  "api/iMobileDevice.Usbmuxd.UsbmuxdEventCallBack.html": {
    "href": "api/iMobileDevice.Usbmuxd.UsbmuxdEventCallBack.html",
    "title": "Delegate UsbmuxdEventCallBack | imobiledevice-net API",
    "keywords": "Delegate UsbmuxdEventCallBack Namespace : iMobileDevice.Usbmuxd Assembly : iMobileDevice-net.dll Syntax public delegate void UsbmuxdEventCallBack(ref UsbmuxdEvent event, IntPtr userData); Parameters Type Name Description UsbmuxdEvent event System.IntPtr userData"
  },
  "api/iMobileDevice.Service.html": {
    "href": "api/iMobileDevice.Service.html",
    "title": "Namespace iMobileDevice.Service | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.Service Classes ServiceApi ServiceClientHandle ServiceClientHandleDelegateMarshaler ServiceErrorExtensions ServiceException ServiceNativeMethods Interfaces IServiceApi Enums ServiceError Error Codes Delegates ConstructorFunc"
  },
  "api/iMobileDevice.Service.ServiceNativeMethods.html": {
    "href": "api/iMobileDevice.Service.ServiceNativeMethods.html",
    "title": "Class ServiceNativeMethods | imobiledevice-net API",
    "keywords": "Class ServiceNativeMethods Inheritance System.Object ServiceNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Service Assembly : iMobileDevice-net.dll Syntax public class ServiceNativeMethods Methods service_client_factory_start_service(iDeviceHandle, String, ref IntPtr, String, ref ConstructorFunc, ref Int32) Starts a new service on the specified device with given name and connects to it. Declaration public static ServiceError service_client_factory_start_service(iDeviceHandle device, string serviceName, ref IntPtr client, string label, ref ConstructorFunc constructorFunc, ref int errorCode) Parameters Type Name Description iDeviceHandle device The device to connect to. System.String serviceName System.IntPtr client Pointer that will point to a newly allocated service_client_t upon successful return. Must be freed using service_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. ConstructorFunc constructorFunc System.Int32 errorCode Returns Type Description ServiceError SERVICE_E_SUCCESS on success, or a SERVICE_E_* error code otherwise. service_client_free(IntPtr) Frees a service instance. Declaration public static ServiceError service_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The service instance to free. Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG when client is invalid, or a SERVICE_E_UNKNOWN_ERROR when another error occured. service_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out ServiceClientHandle) Creates a new service for the specified service descriptor. Declaration public static ServiceError service_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out ServiceClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. ServiceClientHandle client Pointer that will be set to a newly allocated service_client_t upon successful return. Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG when one of the arguments is invalid, or SERVICE_E_MUX_ERROR when connecting to the device failed. service_disable_ssl(ServiceClientHandle) Disable SSL for the given service client. Declaration public static ServiceError service_disable_ssl(ServiceClientHandle client) Parameters Type Name Description ServiceClientHandle client The connected service client for that SSL should be disabled. Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG if client or client->connection is NULL, or SERVICE_E_UNKNOWN_ERROR otherwise. service_enable_ssl(ServiceClientHandle) Enable SSL for the given service client. Declaration public static ServiceError service_enable_ssl(ServiceClientHandle client) Parameters Type Name Description ServiceClientHandle client The connected service client for that SSL should be enabled. Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG if client or client->connection is NULL, SERVICE_E_SSL_ERROR when SSL could not be enabled, or SERVICE_E_UNKNOWN_ERROR otherwise. service_receive(ServiceClientHandle, Byte[], UInt32, ref UInt32) Receives data using the given service client. Declaration public static ServiceError service_receive(ServiceClientHandle client, byte[] data, uint size, ref uint received) Parameters Type Name Description ServiceClientHandle client The service client to use for receiving System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG when one or more parameters are invalid, SERVICE_E_MUX_ERROR when a communication error occurs, or SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. service_receive_with_timeout(ServiceClientHandle, Byte[], UInt32, ref UInt32, UInt32) Receives data using the given service client with specified timeout. Declaration public static ServiceError service_receive_with_timeout(ServiceClientHandle client, byte[] data, uint size, ref uint received, uint timeout) Parameters Type Name Description ServiceClientHandle client The service client to use for receiving System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) System.UInt32 timeout Maximum time in milliseconds to wait for data. Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG when one or more parameters are invalid, SERVICE_E_MUX_ERROR when a communication error occurs, or SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. service_send(ServiceClientHandle, Byte[], UInt32, ref UInt32) Sends data using the given service client. Declaration public static ServiceError service_send(ServiceClientHandle client, byte[] data, uint size, ref uint sent) Parameters Type Name Description ServiceClientHandle client The service client to use for sending. System.Byte [] data Data to send System.UInt32 size Size of the data to send System.UInt32 sent Number of bytes sent (can be NULL to ignore) Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG when one or more parameters are invalid, or SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs."
  },
  "api/iMobileDevice.Service.ServiceException.html": {
    "href": "api/iMobileDevice.Service.ServiceException.html",
    "title": "Class ServiceException | imobiledevice-net API",
    "keywords": "Class ServiceException Inheritance System.Object System.Exception ServiceException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.Service Assembly : iMobileDevice-net.dll Syntax [Serializable] public class ServiceException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source ServiceException() Initializes a new instance of the ServiceException class. Declaration public ServiceException() | Improve this Doc View Source ServiceException(ServiceError) Declaration public ServiceException(ServiceError error) Parameters Type Name Description ServiceError error | Improve this Doc View Source ServiceException(ServiceError, String) Declaration public ServiceException(ServiceError error, string message) Parameters Type Name Description ServiceError error System.String message | Improve this Doc View Source ServiceException(SerializationInfo, StreamingContext) Initializes a new instance of the ServiceException class with serialized data. Declaration protected ServiceException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source ServiceException(String) Initializes a new instance of the ServiceException class with a specified error message. Declaration public ServiceException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source ServiceException(String, Exception) Initializes a new instance of the ServiceException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public ServiceException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual ServiceError ErrorCode { get; } Property Value Type Description ServiceError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.Service.ServiceErrorExtensions.html": {
    "href": "api/iMobileDevice.Service.ServiceErrorExtensions.html",
    "title": "Class ServiceErrorExtensions | imobiledevice-net API",
    "keywords": "Class ServiceErrorExtensions Inheritance System.Object ServiceErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Service Assembly : iMobileDevice-net.dll Syntax public static class ServiceErrorExtensions Methods | Improve this Doc View Source IsError(ServiceError) Declaration public static bool IsError(this ServiceError value) Parameters Type Name Description ServiceError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(ServiceError) Declaration public static void ThrowOnError(this ServiceError value) Parameters Type Name Description ServiceError value | Improve this Doc View Source ThrowOnError(ServiceError, String) Declaration public static void ThrowOnError(this ServiceError value, string message) Parameters Type Name Description ServiceError value System.String message"
  },
  "api/iMobileDevice.PropertyListService.IPropertyListServiceApi.html": {
    "href": "api/iMobileDevice.PropertyListService.IPropertyListServiceApi.html",
    "title": "Interface IPropertyListServiceApi | imobiledevice-net API",
    "keywords": "Interface IPropertyListServiceApi Namespace : iMobileDevice.PropertyListService Assembly : iMobileDevice-net.dll Syntax public interface IPropertyListServiceApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.PropertyListService . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source property_list_service_client_free(IntPtr) Frees a PropertyList service. Declaration PropertyListServiceError property_list_service_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The property list service to free. Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when client is invalid, or a PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR when another error occured. | Improve this Doc View Source property_list_service_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out PropertyListServiceClientHandle) Creates a new property list service for the specified port. Declaration PropertyListServiceError property_list_service_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out PropertyListServiceClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. PropertyListServiceClientHandle client Pointer that will be set to a newly allocated property_list_service_client_t upon successful return. Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when one of the arguments is invalid, or PROPERTY_LIST_SERVICE_E_MUX_ERROR when connecting to the device failed. | Improve this Doc View Source property_list_service_disable_ssl(PropertyListServiceClientHandle) Disable SSL for the given property list service client. Declaration PropertyListServiceError property_list_service_disable_ssl(PropertyListServiceClientHandle client) Parameters Type Name Description PropertyListServiceClientHandle client The connected property list service client for which SSL should be disabled. Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG if client or client->connection is NULL, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR otherwise. | Improve this Doc View Source property_list_service_enable_ssl(PropertyListServiceClientHandle) Enable SSL for the given property list service client. Declaration PropertyListServiceError property_list_service_enable_ssl(PropertyListServiceClientHandle client) Parameters Type Name Description PropertyListServiceClientHandle client The connected property list service client for which SSL should be enabled. Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG if client or client->connection is NULL, PROPERTY_LIST_SERVICE_E_SSL_ERROR when SSL could not be enabled, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR otherwise. | Improve this Doc View Source property_list_service_receive_plist(PropertyListServiceClientHandle, out PlistHandle) Receives a plist using the given property list service client. Binary or XML plists are automatically handled. This function is like property_list_service_receive_plist_with_timeout using a timeout of 10 seconds. Declaration PropertyListServiceError property_list_service_receive_plist(PropertyListServiceClientHandle client, out PlistHandle plist) Parameters Type Name Description PropertyListServiceClientHandle client The property list service client to use for receiving PlistHandle plist pointer to a plist_t that will point to the received plist upon successful return Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when client or *plist is NULL, PROPERTY_LIST_SERVICE_E_PLIST_ERROR when the received data cannot be converted to a plist, PROPERTY_LIST_SERVICE_E_MUX_ERROR when a communication error occurs, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source property_list_service_receive_plist_with_timeout(PropertyListServiceClientHandle, out PlistHandle, UInt32) Receives a plist using the given property list service client with specified timeout. Binary or XML plists are automatically handled. Declaration PropertyListServiceError property_list_service_receive_plist_with_timeout(PropertyListServiceClientHandle client, out PlistHandle plist, uint timeout) Parameters Type Name Description PropertyListServiceClientHandle client The property list service client to use for receiving PlistHandle plist pointer to a plist_t that will point to the received plist upon successful return System.UInt32 timeout Maximum time in milliseconds to wait for data. Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when connection or *plist is NULL, PROPERTY_LIST_SERVICE_E_PLIST_ERROR when the received data cannot be converted to a plist, PROPERTY_LIST_SERVICE_E_MUX_ERROR when a communication error occurs, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source property_list_service_send_binary_plist(PropertyListServiceClientHandle, PlistHandle) Sends a binary plist. Declaration PropertyListServiceError property_list_service_send_binary_plist(PropertyListServiceClientHandle client, PlistHandle plist) Parameters Type Name Description PropertyListServiceClientHandle client The property list service client to use for sending. PlistHandle plist plist to send Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when client or plist is NULL, PROPERTY_LIST_SERVICE_E_PLIST_ERROR when dict is not a valid plist, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source property_list_service_send_xml_plist(PropertyListServiceClientHandle, PlistHandle) Sends an XML plist. Declaration PropertyListServiceError property_list_service_send_xml_plist(PropertyListServiceClientHandle client, PlistHandle plist) Parameters Type Name Description PropertyListServiceClientHandle client The property list service client to use for sending. PlistHandle plist plist to send Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when client or plist is NULL, PROPERTY_LIST_SERVICE_E_PLIST_ERROR when dict is not a valid plist, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs."
  },
  "api/iMobileDevice.Plist.html": {
    "href": "api/iMobileDevice.Plist.html",
    "title": "Namespace iMobileDevice.Plist | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.Plist Classes PlistApi PlistDictIterHandle PlistDictIterHandleDelegateMarshaler PlistHandle PlistHandleDelegateMarshaler PlistNativeMethods Interfaces IPlistApi Enums PlistType The enumeration of plist node types."
  },
  "api/iMobileDevice.Plist.PlistType.html": {
    "href": "api/iMobileDevice.Plist.PlistType.html",
    "title": "Enum PlistType | imobiledevice-net API",
    "keywords": "Enum PlistType The enumeration of plist node types. Namespace : iMobileDevice.Plist Assembly : iMobileDevice-net.dll Syntax public enum PlistType Fields Name Description Array Boolean Data Date Dict Key None Real String Uid Uint"
  },
  "api/iMobileDevice.Plist.PlistNativeMethods.html": {
    "href": "api/iMobileDevice.Plist.PlistNativeMethods.html",
    "title": "Class PlistNativeMethods | imobiledevice-net API",
    "keywords": "Class PlistNativeMethods Inheritance System.Object PlistNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Plist Assembly : iMobileDevice-net.dll Syntax public class PlistNativeMethods Methods plist_access_path(PlistHandle, UInt32) Get a node from its path. Each path element depends on the associated father node type. For Dictionaries, var args are casted to const char*, for arrays, var args are caster to uint32_t Search is breath first order. Declaration public static PlistHandle plist_access_path(PlistHandle plist, uint length) Parameters Type Name Description PlistHandle plist the node to access result from. System.UInt32 length length of the path to access Returns Type Description PlistHandle the value to access. plist_access_pathv(PlistHandle, UInt32, IntPtr) Variadic version of #plist_access_path. Declaration public static PlistHandle plist_access_pathv(PlistHandle plist, uint length, IntPtr v) Parameters Type Name Description PlistHandle plist the node to access result from. System.UInt32 length length of the path to access System.IntPtr v list of array's index and dic'st key Returns Type Description PlistHandle the value to access. plist_array_append_item(PlistHandle, PlistHandle) Append a new item at the end of a #PLIST_ARRAY node. Declaration public static void plist_array_append_item(PlistHandle node, PlistHandle item) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY PlistHandle item the new item. The array is responsible for freeing item when it is no longer needed. plist_array_get_item(PlistHandle, UInt32) Get the nth item in a #PLIST_ARRAY node. Declaration public static PlistHandle plist_array_get_item(PlistHandle node, uint n) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY System.UInt32 n the index of the item to get. Range is [0, array_size[ Returns Type Description PlistHandle the nth item or NULL if node is not of type #PLIST_ARRAY plist_array_get_item_index(PlistHandle) Get the index of an item. item must be a member of a #PLIST_ARRAY node. Declaration public static uint plist_array_get_item_index(PlistHandle node) Parameters Type Name Description PlistHandle node the node Returns Type Description System.UInt32 the node index plist_array_get_size(PlistHandle) Get size of a #PLIST_ARRAY node. Declaration public static uint plist_array_get_size(PlistHandle node) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY Returns Type Description System.UInt32 size of the #PLIST_ARRAY node plist_array_insert_item(PlistHandle, PlistHandle, UInt32) Insert a new item at position n in a #PLIST_ARRAY node. Declaration public static void plist_array_insert_item(PlistHandle node, PlistHandle item, uint n) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY PlistHandle item the new item to insert. The array is responsible for freeing item when it is no longer needed. System.UInt32 n The position at which the node will be stored. Range is [0, array_size[. Assert if n is not in range. plist_array_remove_item(PlistHandle, UInt32) Remove an existing position in a #PLIST_ARRAY node. Removed position will be freed using #plist_free. Declaration public static void plist_array_remove_item(PlistHandle node, uint n) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY System.UInt32 n The position to remove. Range is [0, array_size[. Assert if n is not in range. plist_array_set_item(PlistHandle, PlistHandle, UInt32) Set the nth item in a #PLIST_ARRAY node. The previous item at index n will be freed using #plist_free Declaration public static void plist_array_set_item(PlistHandle node, PlistHandle item, uint n) Parameters Type Name Description PlistHandle node the node of type #PLIST_ARRAY PlistHandle item the new item at index n. The array is responsible for freeing item when it is no longer needed. System.UInt32 n the index of the item to get. Range is [0, array_size[. Assert if n is not in range. plist_compare_node_value(PlistHandle, PlistHandle) Compare two node values Declaration public static sbyte plist_compare_node_value(PlistHandle nodeL, PlistHandle nodeR) Parameters Type Name Description PlistHandle nodeL PlistHandle nodeR Returns Type Description System.SByte TRUE is type and value match, FALSE otherwise. plist_copy(PlistHandle) Return a copy of passed node and it's children Declaration public static PlistHandle plist_copy(PlistHandle node) Parameters Type Name Description PlistHandle node the plist to copy Returns Type Description PlistHandle copied plist plist_dict_get_item(PlistHandle, String) Get the nth item in a #PLIST_DICT node. Declaration public static PlistHandle plist_dict_get_item(PlistHandle node, string key) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT System.String key the identifier of the item to get. Returns Type Description PlistHandle the item or NULL if node is not of type #PLIST_DICT. The caller should not free the returned node. plist_dict_get_item_key(PlistHandle, out IntPtr) Get key associated to an item. Item must be member of a dictionary Declaration public static void plist_dict_get_item_key(PlistHandle node, out IntPtr key) Parameters Type Name Description PlistHandle node the node System.IntPtr key a location to store the key. The caller is responsible for freeing the returned string. | Improve this Doc View Source plist_dict_get_item_key(PlistHandle, out String) Declaration public static void plist_dict_get_item_key(PlistHandle node, out string key) Parameters Type Name Description PlistHandle node System.String key plist_dict_get_size(PlistHandle) Get size of a #PLIST_DICT node. Declaration public static uint plist_dict_get_size(PlistHandle node) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT Returns Type Description System.UInt32 size of the #PLIST_DICT node plist_dict_insert_item(PlistHandle, String, PlistHandle) Insert a new item into a #PLIST_DICT node. Declaration public static void plist_dict_insert_item(PlistHandle node, string key, PlistHandle item) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT System.String key The identifier of the item to insert. PlistHandle item the new item to insert plist_dict_merge(out PlistHandle, PlistHandle) Merge a dictionary into another. This will add all key/value pairs from the source dictionary to the target dictionary, overwriting any existing key/value pairs that are already present in target. Declaration public static void plist_dict_merge(out PlistHandle target, PlistHandle source) Parameters Type Name Description PlistHandle target pointer to an existing node of type #PLIST_DICT PlistHandle source node of type #PLIST_DICT that should be merged into target plist_dict_new_iter(PlistHandle, out PlistDictIterHandle) Create an iterator of a #PLIST_DICT node. The allocated iterator should be freed with the standard free function. Declaration public static void plist_dict_new_iter(PlistHandle node, out PlistDictIterHandle iter) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT PlistDictIterHandle iter iterator of the #PLIST_DICT node plist_dict_next_item(PlistHandle, PlistDictIterHandle, out IntPtr, out PlistHandle) Increment iterator of a #PLIST_DICT node. Declaration public static void plist_dict_next_item(PlistHandle node, PlistDictIterHandle iter, out IntPtr key, out PlistHandle val) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT PlistDictIterHandle iter iterator of the dictionary System.IntPtr key a location to store the key, or NULL. The caller is responsible for freeing the the returned string. PlistHandle val a location to store the value, or NULL. The caller should not free the returned value. | Improve this Doc View Source plist_dict_next_item(PlistHandle, PlistDictIterHandle, out String, out PlistHandle) Declaration public static void plist_dict_next_item(PlistHandle node, PlistDictIterHandle iter, out string key, out PlistHandle val) Parameters Type Name Description PlistHandle node PlistDictIterHandle iter System.String key PlistHandle val plist_dict_remove_item(PlistHandle, String) Remove an existing position in a #PLIST_DICT node. Removed position will be freed using #plist_free Declaration public static void plist_dict_remove_item(PlistHandle node, string key) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT System.String key The identifier of the item to remove. Assert if identifier is not present. plist_dict_set_item(PlistHandle, String, PlistHandle) Set item identified by key in a #PLIST_DICT node. The previous item identified by key will be freed using #plist_free. If there is no item for the given key a new item will be inserted. Declaration public static void plist_dict_set_item(PlistHandle node, string key, PlistHandle item) Parameters Type Name Description PlistHandle node the node of type #PLIST_DICT System.String key the identifier of the item to set. PlistHandle item the new item associated to key plist_free(IntPtr) Destruct a plist_t node and all its children recursively Declaration public static void plist_free(IntPtr plist) Parameters Type Name Description System.IntPtr plist the plist to free plist_from_bin(String, UInt32, out PlistHandle) Import the #plist_t structure from binary format. Declaration public static void plist_from_bin(string plistBin, uint length, out PlistHandle plist) Parameters Type Name Description System.String plistBin System.UInt32 length length of the buffer to read. PlistHandle plist a pointer to the imported plist. plist_from_memory(String, UInt32, out PlistHandle) Import the #plist_t structure from memory data. This method will look at the first bytes of plist_data to determine if plist_data contains a binary or XML plist. Declaration public static void plist_from_memory(string plistData, uint length, out PlistHandle plist) Parameters Type Name Description System.String plistData System.UInt32 length length of the buffer to read. PlistHandle plist a pointer to the imported plist. plist_from_xml(String, UInt32, out PlistHandle) Import the #plist_t structure from XML format. Declaration public static void plist_from_xml(string plistXml, uint length, out PlistHandle plist) Parameters Type Name Description System.String plistXml System.UInt32 length length of the buffer to read. PlistHandle plist a pointer to the imported plist. plist_get_bool_val(PlistHandle, ref Char) Get the value of a #PLIST_BOOLEAN node. This function does nothing if node is not of type #PLIST_BOOLEAN Declaration public static void plist_get_bool_val(PlistHandle node, ref char val) Parameters Type Name Description PlistHandle node the node System.Char val a pointer to a uint8_t variable. plist_get_data_val(PlistHandle, out IntPtr, ref UInt64) Get the value of a #PLIST_DATA node. This function does nothing if node is not of type #PLIST_DATA Declaration public static void plist_get_data_val(PlistHandle node, out IntPtr val, ref ulong length) Parameters Type Name Description PlistHandle node the node System.IntPtr val a pointer to an unallocated char buffer. This function allocates the memory, caller is responsible for freeing it. System.UInt64 length the length of the buffer | Improve this Doc View Source plist_get_data_val(PlistHandle, out String, ref UInt64) Declaration public static void plist_get_data_val(PlistHandle node, out string val, ref ulong length) Parameters Type Name Description PlistHandle node System.String val System.UInt64 length plist_get_date_val(PlistHandle, ref Int32, ref Int32) Get the value of a #PLIST_DATE node. This function does nothing if node is not of type #PLIST_DATE Declaration public static void plist_get_date_val(PlistHandle node, ref int sec, ref int usec) Parameters Type Name Description PlistHandle node the node System.Int32 sec a pointer to an int32_t variable. Represents the number of seconds since 01/01/2001. System.Int32 usec a pointer to an int32_t variable. Represents the number of microseconds plist_get_key_val(PlistHandle, out IntPtr) Get the value of a #PLIST_KEY node. This function does nothing if node is not of type #PLIST_KEY Declaration public static void plist_get_key_val(PlistHandle node, out IntPtr val) Parameters Type Name Description PlistHandle node the node System.IntPtr val a pointer to a C-string. This function allocates the memory, caller is responsible for freeing it. | Improve this Doc View Source plist_get_key_val(PlistHandle, out String) Declaration public static void plist_get_key_val(PlistHandle node, out string val) Parameters Type Name Description PlistHandle node System.String val plist_get_node_type(PlistHandle) Get the #plist_type of a node. Declaration public static PlistType plist_get_node_type(PlistHandle node) Parameters Type Name Description PlistHandle node the node Returns Type Description PlistType the type of the node plist_get_parent(PlistHandle) Get the parent of a node Declaration public static PlistHandle plist_get_parent(PlistHandle node) Parameters Type Name Description PlistHandle node the parent (NULL if node is root) Returns Type Description PlistHandle plist_get_real_val(PlistHandle, ref Double) Get the value of a #PLIST_REAL node. This function does nothing if node is not of type #PLIST_REAL Declaration public static void plist_get_real_val(PlistHandle node, ref double val) Parameters Type Name Description PlistHandle node the node System.Double val a pointer to a double variable. plist_get_string_val(PlistHandle, out IntPtr) Get the value of a #PLIST_STRING node. This function does nothing if node is not of type #PLIST_STRING Declaration public static void plist_get_string_val(PlistHandle node, out IntPtr val) Parameters Type Name Description PlistHandle node the node System.IntPtr val a pointer to a C-string. This function allocates the memory, caller is responsible for freeing it. Data is UTF-8 encoded. | Improve this Doc View Source plist_get_string_val(PlistHandle, out String) Declaration public static void plist_get_string_val(PlistHandle node, out string val) Parameters Type Name Description PlistHandle node System.String val plist_get_uid_val(PlistHandle, ref UInt64) Get the value of a #PLIST_UID node. This function does nothing if node is not of type #PLIST_UID Declaration public static void plist_get_uid_val(PlistHandle node, ref ulong val) Parameters Type Name Description PlistHandle node the node System.UInt64 val a pointer to a uint64_t variable. plist_get_uint_val(PlistHandle, ref UInt64) Get the value of a #PLIST_UINT node. This function does nothing if node is not of type #PLIST_UINT Declaration public static void plist_get_uint_val(PlistHandle node, ref ulong val) Parameters Type Name Description PlistHandle node the node System.UInt64 val a pointer to a uint64_t variable. plist_is_binary(String, UInt32) Test if in-memory plist data is binary or XML This method will look at the first bytes of plist_data to determine if plist_data contains a binary or XML plist. This method is not validating the whole memory buffer to check if the content is truly a plist, it's only using some heuristic on the first few bytes of plist_data. Declaration public static int plist_is_binary(string plistData, uint length) Parameters Type Name Description System.String plistData System.UInt32 length length of the buffer to read. Returns Type Description System.Int32 1 if the buffer is a binary plist, 0 otherwise. plist_new_array() Create a new root plist_t type #PLIST_ARRAY Declaration public static PlistHandle plist_new_array() Returns Type Description PlistHandle the created plist plist_new_bool(Char) Create a new plist_t type #PLIST_BOOLEAN Declaration public static PlistHandle plist_new_bool(char val) Parameters Type Name Description System.Char val the boolean value, 0 is false, other values are true. Returns Type Description PlistHandle the created item plist_new_data(String, UInt64) Create a new plist_t type #PLIST_DATA Declaration public static PlistHandle plist_new_data(string val, ulong length) Parameters Type Name Description System.String val the binary buffer System.UInt64 length the length of the buffer Returns Type Description PlistHandle the created item plist_new_date(Int32, Int32) Create a new plist_t type #PLIST_DATE Declaration public static PlistHandle plist_new_date(int sec, int usec) Parameters Type Name Description System.Int32 sec the number of seconds since 01/01/2001 System.Int32 usec the number of microseconds Returns Type Description PlistHandle the created item plist_new_dict() Create a new root plist_t type #PLIST_DICT Declaration public static PlistHandle plist_new_dict() Returns Type Description PlistHandle the created plist plist_new_real(Double) Create a new plist_t type #PLIST_REAL Declaration public static PlistHandle plist_new_real(double val) Parameters Type Name Description System.Double val the real value Returns Type Description PlistHandle the created item plist_new_string(String) Create a new plist_t type #PLIST_STRING Declaration public static PlistHandle plist_new_string(string val) Parameters Type Name Description System.String val the sting value, encoded in UTF8. Returns Type Description PlistHandle the created item plist_new_uid(UInt64) Create a new plist_t type #PLIST_UID Declaration public static PlistHandle plist_new_uid(ulong val) Parameters Type Name Description System.UInt64 val the unsigned integer value Returns Type Description PlistHandle the created item plist_new_uint(UInt64) Create a new plist_t type #PLIST_UINT Declaration public static PlistHandle plist_new_uint(ulong val) Parameters Type Name Description System.UInt64 val the unsigned integer value Returns Type Description PlistHandle the created item plist_set_bool_val(PlistHandle, Char) Set the value of a node. Forces type of node to #PLIST_BOOLEAN Declaration public static void plist_set_bool_val(PlistHandle node, char val) Parameters Type Name Description PlistHandle node the node System.Char val the boolean value plist_set_data_val(PlistHandle, String, UInt64) Set the value of a node. Forces type of node to #PLIST_DATA Declaration public static void plist_set_data_val(PlistHandle node, string val, ulong length) Parameters Type Name Description PlistHandle node the node System.String val the binary buffer. The buffer is copied when set and will be freed by the node. System.UInt64 length the length of the buffer plist_set_date_val(PlistHandle, Int32, Int32) Set the value of a node. Forces type of node to #PLIST_DATE Declaration public static void plist_set_date_val(PlistHandle node, int sec, int usec) Parameters Type Name Description PlistHandle node the node System.Int32 sec the number of seconds since 01/01/2001 System.Int32 usec the number of microseconds plist_set_key_val(PlistHandle, String) Set the value of a node. Forces type of node to #PLIST_KEY Declaration public static void plist_set_key_val(PlistHandle node, string val) Parameters Type Name Description PlistHandle node the node System.String val the key value plist_set_real_val(PlistHandle, Double) Set the value of a node. Forces type of node to #PLIST_REAL Declaration public static void plist_set_real_val(PlistHandle node, double val) Parameters Type Name Description PlistHandle node the node System.Double val the real value plist_set_string_val(PlistHandle, String) Set the value of a node. Forces type of node to #PLIST_STRING Declaration public static void plist_set_string_val(PlistHandle node, string val) Parameters Type Name Description PlistHandle node the node System.String val the string value. The string is copied when set and will be freed by the node. plist_set_uid_val(PlistHandle, UInt64) Set the value of a node. Forces type of node to #PLIST_UID Declaration public static void plist_set_uid_val(PlistHandle node, ulong val) Parameters Type Name Description PlistHandle node the node System.UInt64 val the unsigned integer value plist_set_uint_val(PlistHandle, UInt64) Set the value of a node. Forces type of node to #PLIST_UINT Declaration public static void plist_set_uint_val(PlistHandle node, ulong val) Parameters Type Name Description PlistHandle node the node System.UInt64 val the unsigned integer value plist_to_bin(PlistHandle, out IntPtr, ref UInt32) Export the #plist_t structure to binary format. Declaration public static void plist_to_bin(PlistHandle plist, out IntPtr plistBin, ref uint length) Parameters Type Name Description PlistHandle plist the root node to export System.IntPtr plistBin System.UInt32 length a pointer to an uint32_t variable. Represents the length of the allocated buffer. | Improve this Doc View Source plist_to_bin(PlistHandle, out String, ref UInt32) Declaration public static void plist_to_bin(PlistHandle plist, out string plistBin, ref uint length) Parameters Type Name Description PlistHandle plist System.String plistBin System.UInt32 length plist_to_bin_free(IntPtr) Frees the memory allocated by plist_to_bin Declaration public static void plist_to_bin_free(IntPtr plistBin) Parameters Type Name Description System.IntPtr plistBin plist_to_xml(PlistHandle, out IntPtr, ref UInt32) Export the #plist_t structure to XML format. Declaration public static void plist_to_xml(PlistHandle plist, out IntPtr plistXml, ref uint length) Parameters Type Name Description PlistHandle plist the root node to export System.IntPtr plistXml System.UInt32 length a pointer to an uint32_t variable. Represents the length of the allocated buffer. | Improve this Doc View Source plist_to_xml(PlistHandle, out String, ref UInt32) Declaration public static void plist_to_xml(PlistHandle plist, out string plistXml, ref uint length) Parameters Type Name Description PlistHandle plist System.String plistXml System.UInt32 length plist_to_xml_free(IntPtr) Frees the memory allocated by plist_to_xml Declaration public static void plist_to_xml_free(IntPtr plistXml) Parameters Type Name Description System.IntPtr plistXml"
  },
  "api/iMobileDevice.NotificationProxy.NotificationProxyError.html": {
    "href": "api/iMobileDevice.NotificationProxy.NotificationProxyError.html",
    "title": "Enum NotificationProxyError | imobiledevice-net API",
    "keywords": "Enum NotificationProxyError Error Codes Namespace : iMobileDevice.NotificationProxy Assembly : iMobileDevice-net.dll Syntax public enum NotificationProxyError Fields Name Description ConnFailed InvalidArg PlistError Success UnknownError Extension Methods NotificationProxyErrorExtensions.ThrowOnError() NotificationProxyErrorExtensions.ThrowOnError(String) NotificationProxyErrorExtensions.IsError()"
  },
  "api/iMobileDevice.NotificationProxy.NotificationProxyClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.NotificationProxy.NotificationProxyClientHandleDelegateMarshaler.html",
    "title": "Class NotificationProxyClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class NotificationProxyClientHandleDelegateMarshaler Inheritance System.Object NotificationProxyClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.NotificationProxy Assembly : iMobileDevice-net.dll Syntax public class NotificationProxyClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.MobileSync.MobileSyncApi.html": {
    "href": "api/iMobileDevice.MobileSync.MobileSyncApi.html",
    "title": "Class MobileSyncApi | imobiledevice-net API",
    "keywords": "Class MobileSyncApi Inheritance System.Object MobileSyncApi Implements IMobileSyncApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileSync Assembly : iMobileDevice-net.dll Syntax public class MobileSyncApi : IMobileSyncApi Constructors | Improve this Doc View Source MobileSyncApi(ILibiMobileDevice) Declaration public MobileSyncApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source mobilesync_acknowledge_changes_from_device(MobileSyncClientHandle) Acknowledges to the device that the changes have been merged on the computer MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid Declaration public virtual MobileSyncError mobilesync_acknowledge_changes_from_device(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_actions_add(PlistHandle) Add one or more new key:value pairs to the given actions plist. Declaration public virtual void mobilesync_actions_add(PlistHandle actions) Parameters Type Name Description PlistHandle actions The actions to modify. Remarks The known keys so far are \"SyncDeviceLinkEntityNamesKey\" which expects an array of entity names, followed by a count paramter as well as \"SyncDeviceLinkAllRecordsOfPulledEntityTypeSentKey\" which expects an integer to use as a boolean value indicating that the device should link submitted changes and report remapped identifiers. | Improve this Doc View Source mobilesync_actions_free(PlistHandle) Free actions plist. Declaration public virtual void mobilesync_actions_free(PlistHandle actions) Parameters Type Name Description PlistHandle actions The actions plist to free. Does nothing if NULL is passed. | Improve this Doc View Source mobilesync_actions_new() Create a new actions plist to use in mobilesync_send_changes(). Declaration public virtual PlistHandle mobilesync_actions_new() Returns Type Description PlistHandle A new plist_t of type PLIST_DICT. | Improve this Doc View Source mobilesync_anchors_free(IntPtr) Free memory used by anchors. MOBILESYNC_E_SUCCESS on success Declaration public virtual MobileSyncError mobilesync_anchors_free(IntPtr anchors) Parameters Type Name Description System.IntPtr anchors The anchors to free. Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_anchors_new(String, String, out MobileSyncAnchorsHandle) Allocates memory for a new anchors struct initialized with the passed anchors. MOBILESYNC_E_SUCCESS on success Declaration public virtual MobileSyncError mobilesync_anchors_new(string deviceAnchor, string computerAnchor, out MobileSyncAnchorsHandle anchor) Parameters Type Name Description System.String deviceAnchor System.String computerAnchor MobileSyncAnchorsHandle anchor Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_cancel(MobileSyncClientHandle, String) Cancels a running synchronization session with a device at any time. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid Declaration public virtual MobileSyncError mobilesync_cancel(MobileSyncClientHandle client, string reason) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client System.String reason The reason to supply to the device for cancelling Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_clear_all_records_on_device(MobileSyncClientHandle) Requests the device to delete all records of the current data class MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_PLIST_ERROR if the received plist is not of valid form Declaration public virtual MobileSyncError mobilesync_clear_all_records_on_device(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError Remarks The operation must be called after starting synchronization. | Improve this Doc View Source mobilesync_client_free(IntPtr) Disconnects a mobilesync client from the device and frees up the mobilesync client data. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if is NULL. Declaration public virtual MobileSyncError mobilesync_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The mobilesync client to disconnect and free. Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MobileSyncClientHandle) Connects to the mobilesync service on the specified device. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one or more parameters are invalid DEVICE_LINK_SERVICE_E_BAD_VERSION if the mobilesync version on the device is newer. Declaration public virtual MobileSyncError mobilesync_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MobileSyncClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MobileSyncClientHandle client Pointer that will be set to a newly allocated mobilesync_client_t upon successful return. Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_client_start_service(iDeviceHandle, out MobileSyncClientHandle, String) Starts a new mobilesync service on the specified device and connects to it. Declaration public virtual MobileSyncError mobilesync_client_start_service(iDeviceHandle device, out MobileSyncClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MobileSyncClientHandle client Pointer that will point to a newly allocated mobilesync_client_t upon successful return. Must be freed using mobilesync_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MobileSyncError MOBILESYNC_E_SUCCESS on success, or an MOBILESYNC_E_* error code otherwise. | Improve this Doc View Source mobilesync_finish(MobileSyncClientHandle) Finish a synchronization session of a data class on the device. A session must have previously been started using mobilesync_start(). MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_PLIST_ERROR if the received plist is not of valid form Declaration public virtual MobileSyncError mobilesync_finish(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_get_all_records_from_device(MobileSyncClientHandle) Requests to receive all records of the currently set data class from the device. The actually changes are retrieved using mobilesync_receive_changes() after this request has been successful. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid Declaration public virtual MobileSyncError mobilesync_get_all_records_from_device(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_get_changes_from_device(MobileSyncClientHandle) Requests to receive only changed records of the currently set data class from the device. The actually changes are retrieved using mobilesync_receive_changes() after this request has been successful. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid Declaration public virtual MobileSyncError mobilesync_get_changes_from_device(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_ready_to_send_changes_from_computer(MobileSyncClientHandle) Verifies if the device is ready to receive changes from the computer. This call changes the synchronization direction so that mobilesync_send_changes() can be used to send changes to the device. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_PLIST_ERROR if the received plist is not of valid form MOBILESYNC_E_WRONG_DIRECTION if the current sync direction does not permit this call MOBILESYNC_E_CANCELLED if the device explicitly cancelled the session MOBILESYNC_E_NOT_READY if the device is not ready to start receiving any changes Declaration public virtual MobileSyncError mobilesync_ready_to_send_changes_from_computer(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_receive(MobileSyncClientHandle, out PlistHandle) Polls the device for mobilesync data. Declaration public virtual MobileSyncError mobilesync_receive(MobileSyncClientHandle client, out PlistHandle plist) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client PlistHandle plist A pointer to the location where the plist should be stored Returns Type Description MobileSyncError an error code | Improve this Doc View Source mobilesync_receive_changes(MobileSyncClientHandle, out PlistHandle, ref Char, out PlistHandle) Receives changed entitites of the currently set data class from the device MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_CANCELLED if the device explicitly cancelled the session Declaration public virtual MobileSyncError mobilesync_receive_changes(MobileSyncClientHandle client, out PlistHandle entities, ref char isLastRecord, out PlistHandle actions) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client PlistHandle entities A pointer to store the changed entity records as a PLIST_DICT System.Char isLastRecord PlistHandle actions A pointer to additional flags the device is sending or NULL to ignore Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_remap_identifiers(MobileSyncClientHandle, out PlistHandle) Receives any remapped identifiers reported after the device merged submitted changes. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_PLIST_ERROR if the received plist is not of valid form MOBILESYNC_E_WRONG_DIRECTION if the current sync direction does not permit this call MOBILESYNC_E_CANCELLED if the device explicitly cancelled the session Declaration public virtual MobileSyncError mobilesync_remap_identifiers(MobileSyncClientHandle client, out PlistHandle mapping) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client PlistHandle mapping A pointer to an array plist containing a dict of identifier remappings Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_send(MobileSyncClientHandle, PlistHandle) Sends mobilesync data to the device Declaration public virtual MobileSyncError mobilesync_send(MobileSyncClientHandle client, PlistHandle plist) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client PlistHandle plist The location of the plist to send Returns Type Description MobileSyncError an error code Remarks This function is low-level and should only be used if you need to send a new type of message. | Improve this Doc View Source mobilesync_send_changes(MobileSyncClientHandle, PlistHandle, Char, PlistHandle) Sends changed entities of the currently set data class to the device MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid, MOBILESYNC_E_WRONG_DIRECTION if the current sync direction does not permit this call Declaration public virtual MobileSyncError mobilesync_send_changes(MobileSyncClientHandle client, PlistHandle entities, char isLastRecord, PlistHandle actions) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client PlistHandle entities The changed entity records as a PLIST_DICT System.Char isLastRecord PlistHandle actions Additional actions for the device created with mobilesync_actions_new() or NULL if no actions should be passed Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_start(MobileSyncClientHandle, Byte[], MobileSyncAnchorsHandle, UInt64, ref MobileSyncSyncType, ref UInt64, out String) Requests starting synchronization of a data class with the device MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_PLIST_ERROR if the received plist is not of valid form MOBILESYNC_E_SYNC_REFUSED if the device refused to sync MOBILESYNC_E_CANCELLED if the device explicitly cancelled the sync request Declaration public virtual MobileSyncError mobilesync_start(MobileSyncClientHandle client, byte[] dataClass, MobileSyncAnchorsHandle anchors, ulong computerDataClassVersion, ref MobileSyncSyncType syncType, ref ulong deviceDataClassVersion, out string errorDescription) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client System.Byte [] dataClass MobileSyncAnchorsHandle anchors The anchors required to exchange with the device. The anchors allow the device to tell if the synchronization information on the computer and device are consistent to determine what sync type is required. System.UInt64 computerDataClassVersion MobileSyncSyncType syncType System.UInt64 deviceDataClassVersion System.String errorDescription Returns Type Description MobileSyncError Implements IMobileSyncApi"
  },
  "api/iMobileDevice.MobileSync.MobileSyncAnchorsHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.MobileSync.MobileSyncAnchorsHandleDelegateMarshaler.html",
    "title": "Class MobileSyncAnchorsHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class MobileSyncAnchorsHandleDelegateMarshaler Inheritance System.Object MobileSyncAnchorsHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileSync Assembly : iMobileDevice-net.dll Syntax public class MobileSyncAnchorsHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.MobileImageMounter.IMobileImageMounterApi.html": {
    "href": "api/iMobileDevice.MobileImageMounter.IMobileImageMounterApi.html",
    "title": "Interface IMobileImageMounterApi | imobiledevice-net API",
    "keywords": "Interface IMobileImageMounterApi Namespace : iMobileDevice.MobileImageMounter Assembly : iMobileDevice-net.dll Syntax public interface IMobileImageMounterApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.MobileImageMounter . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source mobile_image_mounter_free(IntPtr) Disconnects a mobile_image_mounter client from the device and frees up the mobile_image_mounter client data. Declaration MobileImageMounterError mobile_image_mounter_free(IntPtr client) Parameters Type Name Description System.IntPtr client The mobile_image_mounter client to disconnect and free. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, or MOBILE_IMAGE_MOUNTER_E_INVALID_ARG if client is NULL. | Improve this Doc View Source mobile_image_mounter_hangup(MobileImageMounterClientHandle) Hangs up the connection to the mobile_image_mounter service. This functions has to be called before freeing up a mobile_image_mounter instance. If not, errors appear in the device's syslog. Declaration MobileImageMounterError mobile_image_mounter_hangup(MobileImageMounterClientHandle client) Parameters Type Name Description MobileImageMounterClientHandle client The client to hang up Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, MOBILE_IMAGE_MOUNTER_E_INVALID_ARG if client is invalid, or another error code otherwise. | Improve this Doc View Source mobile_image_mounter_lookup_image(MobileImageMounterClientHandle, String, out PlistHandle) Tells if the image of ImageType is already mounted. Declaration MobileImageMounterError mobile_image_mounter_lookup_image(MobileImageMounterClientHandle client, string imageType, out PlistHandle result) Parameters Type Name Description MobileImageMounterClientHandle client The client use System.String imageType PlistHandle result Pointer to a plist that will receive the result of the operation. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, or an error code on error Remarks This function may return MOBILE_IMAGE_MOUNTER_E_SUCCESS even if the operation has failed. Check the resulting plist for further information. | Improve this Doc View Source mobile_image_mounter_mount_image(MobileImageMounterClientHandle, String, Byte[], UInt16, String, out PlistHandle) Mounts an image on the device. Declaration MobileImageMounterError mobile_image_mounter_mount_image(MobileImageMounterClientHandle client, string imagePath, byte[] signature, ushort signatureSize, string imageType, out PlistHandle result) Parameters Type Name Description MobileImageMounterClientHandle client The connected mobile_image_mounter client. System.String imagePath System.Byte [] signature Pointer to a buffer holding the images' signature System.UInt16 signatureSize System.String imageType PlistHandle result Pointer to a plist that will receive the result of the operation. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, MOBILE_IMAGE_MOUNTER_E_INVALID_ARG if on ore more parameters are invalid, or another error code otherwise. Remarks This function may return MOBILE_IMAGE_MOUNTER_E_SUCCESS even if the operation has failed. Check the resulting plist for further information. Note that there is no unmounting function. The mount persists until the device is rebooted. | Improve this Doc View Source mobile_image_mounter_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MobileImageMounterClientHandle) Connects to the mobile_image_mounter service on the specified device. Declaration MobileImageMounterError mobile_image_mounter_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MobileImageMounterClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MobileImageMounterClientHandle client Pointer that will be set to a newly allocated mobile_image_mounter_client_t upon successful return. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, MOBILE_IMAGE_MOUNTER_E_INVALID_ARG if device is NULL, or MOBILE_IMAGE_MOUNTER_E_CONN_FAILED if the connection to the device could not be established. | Improve this Doc View Source mobile_image_mounter_start_service(iDeviceHandle, out MobileImageMounterClientHandle, String) Starts a new mobile_image_mounter service on the specified device and connects to it. Declaration MobileImageMounterError mobile_image_mounter_start_service(iDeviceHandle device, out MobileImageMounterClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MobileImageMounterClientHandle client Pointer that will point to a newly allocated mobile_image_mounter_t upon successful return. Must be freed using mobile_image_mounter_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, or an MOBILE_IMAGE_MOUNTER_E_* error code otherwise. | Improve this Doc View Source mobile_image_mounter_upload_image(MobileImageMounterClientHandle, String, UInt32, Byte[], UInt16, MobileImageMounterUploadCallBack, IntPtr) Uploads an image with an optional signature to the device. Declaration MobileImageMounterError mobile_image_mounter_upload_image(MobileImageMounterClientHandle client, string imageType, uint imageSize, byte[] signature, ushort signatureSize, MobileImageMounterUploadCallBack uploadCallBack, IntPtr userdata) Parameters Type Name Description MobileImageMounterClientHandle client The connected mobile_image_mounter client. System.String imageType System.UInt32 imageSize System.Byte [] signature Buffer with a signature of the image being uploaded. If NULL, no signature will be used. System.UInt16 signatureSize MobileImageMounterUploadCallBack uploadCallBack System.IntPtr userdata User defined data for the upload callback function. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on succes, or a MOBILE_IMAGE_MOUNTER_E_* error code otherwise."
  },
  "api/iMobileDevice.MobileBackup2.html": {
    "href": "api/iMobileDevice.MobileBackup2.html",
    "title": "Namespace iMobileDevice.MobileBackup2 | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.MobileBackup2 Classes MobileBackup2Api MobileBackup2ClientHandle MobileBackup2ClientHandleDelegateMarshaler MobileBackup2ErrorExtensions MobileBackup2Exception MobileBackup2NativeMethods Interfaces IMobileBackup2Api Enums MobileBackup2Error Error Codes"
  },
  "api/iMobileDevice.MobileBackup.MobileBackupApi.html": {
    "href": "api/iMobileDevice.MobileBackup.MobileBackupApi.html",
    "title": "Class MobileBackupApi | imobiledevice-net API",
    "keywords": "Class MobileBackupApi Inheritance System.Object MobileBackupApi Implements IMobileBackupApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileBackup Assembly : iMobileDevice-net.dll Syntax public class MobileBackupApi : IMobileBackupApi Constructors | Improve this Doc View Source MobileBackupApi(ILibiMobileDevice) Declaration public MobileBackupApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source mobilebackup_client_free(IntPtr) Disconnects a mobilebackup client from the device and frees up the mobilebackup client data. Declaration public virtual MobileBackupError mobilebackup_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The mobilebackup client to disconnect and free. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, or MOBILEBACKUP_E_INVALID_ARG if client is NULL. | Improve this Doc View Source mobilebackup_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MobileBackupClientHandle) Connects to the mobilebackup service on the specified device. Declaration public virtual MobileBackupError mobilebackup_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MobileBackupClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MobileBackupClientHandle client Pointer that will be set to a newly allocated mobilebackup_client_t upon successful return. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID ARG if one or more parameters are invalid, or DEVICE_LINK_SERVICE_E_BAD_VERSION if the mobilebackup version on the device is newer. | Improve this Doc View Source mobilebackup_client_start_service(iDeviceHandle, out MobileBackupClientHandle, String) Starts a new mobilebackup service on the specified device and connects to it. Declaration public virtual MobileBackupError mobilebackup_client_start_service(iDeviceHandle device, out MobileBackupClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MobileBackupClientHandle client Pointer that will point to a newly allocated mobilebackup_client_t upon successful return. Must be freed using mobilebackup_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, or an MOBILEBACKUP_E_* error code otherwise. | Improve this Doc View Source mobilebackup_receive(MobileBackupClientHandle, out PlistHandle) Polls the device for mobilebackup data. Declaration public virtual MobileBackupError mobilebackup_receive(MobileBackupClientHandle client, out PlistHandle plist) Parameters Type Name Description MobileBackupClientHandle client The mobilebackup client PlistHandle plist A pointer to the location where the plist should be stored Returns Type Description MobileBackupError an error code | Improve this Doc View Source mobilebackup_receive_restore_application_received(MobileBackupClientHandle, out PlistHandle) Receive a confirmation from the device that it successfully received application data file. Declaration public virtual MobileBackupError mobilebackup_receive_restore_application_received(MobileBackupClientHandle client, out PlistHandle result) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. PlistHandle result Pointer to a plist_t that will be set to the received plist for further processing. The caller has to free it using plist_free(). Note that it will be set to NULL if the operation itself fails due to a communication or plist error. If this parameter is NULL, it will be ignored. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if client is invalid, MOBILEBACKUP_E_REPLY_NOT_OK if the expected 'BackupMessageRestoreApplicationReceived' message could not be received, MOBILEBACKUP_E_PLIST_ERROR if the received message is not a valid backup message plist, or MOBILEBACKUP_E_MUX_ERROR if a communication error occurs. | Improve this Doc View Source mobilebackup_receive_restore_file_received(MobileBackupClientHandle, out PlistHandle) Receive a confirmation from the device that it successfully received a restore file. Declaration public virtual MobileBackupError mobilebackup_receive_restore_file_received(MobileBackupClientHandle client, out PlistHandle result) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. PlistHandle result Pointer to a plist_t that will be set to the received plist for further processing. The caller has to free it using plist_free(). Note that it will be set to NULL if the operation itself fails due to a communication or plist error. If this parameter is NULL, it will be ignored. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if client is invalid, MOBILEBACKUP_E_REPLY_NOT_OK if the expected 'BackupMessageRestoreFileReceived' message could not be received, MOBILEBACKUP_E_PLIST_ERROR if the received message is not a valid backup message plist, or MOBILEBACKUP_E_MUX_ERROR if a communication error occurs. | Improve this Doc View Source mobilebackup_request_backup(MobileBackupClientHandle, PlistHandle, String, String) Request a backup from the connected device. Declaration public virtual MobileBackupError mobilebackup_request_backup(MobileBackupClientHandle client, PlistHandle backupManifest, string basePath, string protoVersion) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. PlistHandle backupManifest System.String basePath System.String protoVersion Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if one of the parameters is invalid, MOBILEBACKUP_E_PLIST_ERROR if backup_manifest is not of type PLIST_DICT, MOBILEBACKUP_E_MUX_ERROR if a communication error occurs, MOBILEBACKUP_E_REPLY_NOT_OK | Improve this Doc View Source mobilebackup_request_restore(MobileBackupClientHandle, PlistHandle, MobileBackupFlags, String) Request that a backup should be restored to the connected device. Declaration public virtual MobileBackupError mobilebackup_request_restore(MobileBackupClientHandle client, PlistHandle backupManifest, MobileBackupFlags flags, string protoVersion) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. PlistHandle backupManifest MobileBackupFlags flags Flags to send with the request. Currently this is a combination of the following mobilebackup_flags_t: MB_RESTORE_NOTIFY_SPRINGBOARD - let SpringBoard show a 'Restore' screen MB_RESTORE_PRESERVE_SETTINGS - do not overwrite any settings MB_RESTORE_PRESERVE_CAMERA_ROLL - preserve the photos of the camera roll System.String protoVersion Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if one of the parameters is invalid, MOBILEBACKUP_E_PLIST_ERROR if backup_manifest is not of type PLIST_DICT, MOBILEBACKUP_E_MUX_ERROR if a communication error occurs, or MOBILEBACKUP_E_REPLY_NOT_OK if the device did not accept the request. | Improve this Doc View Source mobilebackup_send(MobileBackupClientHandle, PlistHandle) Sends mobilebackup data to the device Declaration public virtual MobileBackupError mobilebackup_send(MobileBackupClientHandle client, PlistHandle plist) Parameters Type Name Description MobileBackupClientHandle client The mobilebackup client PlistHandle plist The location of the plist to send Returns Type Description MobileBackupError an error code Remarks This function is low-level and should only be used if you need to send a new type of message. | Improve this Doc View Source mobilebackup_send_backup_file_received(MobileBackupClientHandle) Sends a confirmation to the device that a backup file has been received. Declaration public virtual MobileBackupError mobilebackup_send_backup_file_received(MobileBackupClientHandle client) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if client is invalid, or MOBILEBACKUP_E_MUX_ERROR if a communication error occurs. | Improve this Doc View Source mobilebackup_send_error(MobileBackupClientHandle, String) Sends a backup error message to the device. Declaration public virtual MobileBackupError mobilebackup_send_error(MobileBackupClientHandle client, string reason) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. System.String reason A string describing the reason for the error message. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if one of the parameters is invalid, or MOBILEBACKUP_E_MUX_ERROR if a communication error occurs. | Improve this Doc View Source mobilebackup_send_restore_complete(MobileBackupClientHandle) Tells the device that the restore process is complete and waits for the device to close the connection. After that, the device should reboot. Declaration public virtual MobileBackupError mobilebackup_send_restore_complete(MobileBackupClientHandle client) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if client is invalid, MOBILEBACKUP_E_PLIST_ERROR if the received disconnect message plist is invalid, or MOBILEBACKUP_E_MUX_ERROR if a communication error occurs. Implements IMobileBackupApi"
  },
  "api/iMobileDevice.MobileBackup.IMobileBackupApi.html": {
    "href": "api/iMobileDevice.MobileBackup.IMobileBackupApi.html",
    "title": "Interface IMobileBackupApi | imobiledevice-net API",
    "keywords": "Interface IMobileBackupApi Namespace : iMobileDevice.MobileBackup Assembly : iMobileDevice-net.dll Syntax public interface IMobileBackupApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.MobileBackup . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source mobilebackup_client_free(IntPtr) Disconnects a mobilebackup client from the device and frees up the mobilebackup client data. Declaration MobileBackupError mobilebackup_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The mobilebackup client to disconnect and free. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, or MOBILEBACKUP_E_INVALID_ARG if client is NULL. | Improve this Doc View Source mobilebackup_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MobileBackupClientHandle) Connects to the mobilebackup service on the specified device. Declaration MobileBackupError mobilebackup_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MobileBackupClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MobileBackupClientHandle client Pointer that will be set to a newly allocated mobilebackup_client_t upon successful return. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID ARG if one or more parameters are invalid, or DEVICE_LINK_SERVICE_E_BAD_VERSION if the mobilebackup version on the device is newer. | Improve this Doc View Source mobilebackup_client_start_service(iDeviceHandle, out MobileBackupClientHandle, String) Starts a new mobilebackup service on the specified device and connects to it. Declaration MobileBackupError mobilebackup_client_start_service(iDeviceHandle device, out MobileBackupClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MobileBackupClientHandle client Pointer that will point to a newly allocated mobilebackup_client_t upon successful return. Must be freed using mobilebackup_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, or an MOBILEBACKUP_E_* error code otherwise. | Improve this Doc View Source mobilebackup_receive(MobileBackupClientHandle, out PlistHandle) Polls the device for mobilebackup data. Declaration MobileBackupError mobilebackup_receive(MobileBackupClientHandle client, out PlistHandle plist) Parameters Type Name Description MobileBackupClientHandle client The mobilebackup client PlistHandle plist A pointer to the location where the plist should be stored Returns Type Description MobileBackupError an error code | Improve this Doc View Source mobilebackup_receive_restore_application_received(MobileBackupClientHandle, out PlistHandle) Receive a confirmation from the device that it successfully received application data file. Declaration MobileBackupError mobilebackup_receive_restore_application_received(MobileBackupClientHandle client, out PlistHandle result) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. PlistHandle result Pointer to a plist_t that will be set to the received plist for further processing. The caller has to free it using plist_free(). Note that it will be set to NULL if the operation itself fails due to a communication or plist error. If this parameter is NULL, it will be ignored. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if client is invalid, MOBILEBACKUP_E_REPLY_NOT_OK if the expected 'BackupMessageRestoreApplicationReceived' message could not be received, MOBILEBACKUP_E_PLIST_ERROR if the received message is not a valid backup message plist, or MOBILEBACKUP_E_MUX_ERROR if a communication error occurs. | Improve this Doc View Source mobilebackup_receive_restore_file_received(MobileBackupClientHandle, out PlistHandle) Receive a confirmation from the device that it successfully received a restore file. Declaration MobileBackupError mobilebackup_receive_restore_file_received(MobileBackupClientHandle client, out PlistHandle result) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. PlistHandle result Pointer to a plist_t that will be set to the received plist for further processing. The caller has to free it using plist_free(). Note that it will be set to NULL if the operation itself fails due to a communication or plist error. If this parameter is NULL, it will be ignored. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if client is invalid, MOBILEBACKUP_E_REPLY_NOT_OK if the expected 'BackupMessageRestoreFileReceived' message could not be received, MOBILEBACKUP_E_PLIST_ERROR if the received message is not a valid backup message plist, or MOBILEBACKUP_E_MUX_ERROR if a communication error occurs. | Improve this Doc View Source mobilebackup_request_backup(MobileBackupClientHandle, PlistHandle, String, String) Request a backup from the connected device. Declaration MobileBackupError mobilebackup_request_backup(MobileBackupClientHandle client, PlistHandle backupManifest, string basePath, string protoVersion) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. PlistHandle backupManifest System.String basePath System.String protoVersion Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if one of the parameters is invalid, MOBILEBACKUP_E_PLIST_ERROR if backup_manifest is not of type PLIST_DICT, MOBILEBACKUP_E_MUX_ERROR if a communication error occurs, MOBILEBACKUP_E_REPLY_NOT_OK | Improve this Doc View Source mobilebackup_request_restore(MobileBackupClientHandle, PlistHandle, MobileBackupFlags, String) Request that a backup should be restored to the connected device. Declaration MobileBackupError mobilebackup_request_restore(MobileBackupClientHandle client, PlistHandle backupManifest, MobileBackupFlags flags, string protoVersion) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. PlistHandle backupManifest MobileBackupFlags flags Flags to send with the request. Currently this is a combination of the following mobilebackup_flags_t: MB_RESTORE_NOTIFY_SPRINGBOARD - let SpringBoard show a 'Restore' screen MB_RESTORE_PRESERVE_SETTINGS - do not overwrite any settings MB_RESTORE_PRESERVE_CAMERA_ROLL - preserve the photos of the camera roll System.String protoVersion Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if one of the parameters is invalid, MOBILEBACKUP_E_PLIST_ERROR if backup_manifest is not of type PLIST_DICT, MOBILEBACKUP_E_MUX_ERROR if a communication error occurs, or MOBILEBACKUP_E_REPLY_NOT_OK if the device did not accept the request. | Improve this Doc View Source mobilebackup_send(MobileBackupClientHandle, PlistHandle) Sends mobilebackup data to the device Declaration MobileBackupError mobilebackup_send(MobileBackupClientHandle client, PlistHandle plist) Parameters Type Name Description MobileBackupClientHandle client The mobilebackup client PlistHandle plist The location of the plist to send Returns Type Description MobileBackupError an error code Remarks This function is low-level and should only be used if you need to send a new type of message. | Improve this Doc View Source mobilebackup_send_backup_file_received(MobileBackupClientHandle) Sends a confirmation to the device that a backup file has been received. Declaration MobileBackupError mobilebackup_send_backup_file_received(MobileBackupClientHandle client) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if client is invalid, or MOBILEBACKUP_E_MUX_ERROR if a communication error occurs. | Improve this Doc View Source mobilebackup_send_error(MobileBackupClientHandle, String) Sends a backup error message to the device. Declaration MobileBackupError mobilebackup_send_error(MobileBackupClientHandle client, string reason) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. System.String reason A string describing the reason for the error message. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if one of the parameters is invalid, or MOBILEBACKUP_E_MUX_ERROR if a communication error occurs. | Improve this Doc View Source mobilebackup_send_restore_complete(MobileBackupClientHandle) Tells the device that the restore process is complete and waits for the device to close the connection. After that, the device should reboot. Declaration MobileBackupError mobilebackup_send_restore_complete(MobileBackupClientHandle client) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if client is invalid, MOBILEBACKUP_E_PLIST_ERROR if the received disconnect message plist is invalid, or MOBILEBACKUP_E_MUX_ERROR if a communication error occurs."
  },
  "api/iMobileDevice.Misagent.MisagentErrorExtensions.html": {
    "href": "api/iMobileDevice.Misagent.MisagentErrorExtensions.html",
    "title": "Class MisagentErrorExtensions | imobiledevice-net API",
    "keywords": "Class MisagentErrorExtensions Inheritance System.Object MisagentErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Misagent Assembly : iMobileDevice-net.dll Syntax public static class MisagentErrorExtensions Methods | Improve this Doc View Source IsError(MisagentError) Declaration public static bool IsError(this MisagentError value) Parameters Type Name Description MisagentError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(MisagentError) Declaration public static void ThrowOnError(this MisagentError value) Parameters Type Name Description MisagentError value | Improve this Doc View Source ThrowOnError(MisagentError, String) Declaration public static void ThrowOnError(this MisagentError value, string message) Parameters Type Name Description MisagentError value System.String message"
  },
  "api/iMobileDevice.Misagent.MisagentError.html": {
    "href": "api/iMobileDevice.Misagent.MisagentError.html",
    "title": "Enum MisagentError | imobiledevice-net API",
    "keywords": "Enum MisagentError Error Codes Namespace : iMobileDevice.Misagent Assembly : iMobileDevice-net.dll Syntax public enum MisagentError Fields Name Description ConnFailed InvalidArg PlistError RequestFailed Success UnknownError Extension Methods MisagentErrorExtensions.ThrowOnError() MisagentErrorExtensions.ThrowOnError(String) MisagentErrorExtensions.IsError()"
  },
  "api/iMobileDevice.Lockdown.LockdownError.html": {
    "href": "api/iMobileDevice.Lockdown.LockdownError.html",
    "title": "Enum LockdownError | imobiledevice-net API",
    "keywords": "Enum LockdownError Error Codes Namespace : iMobileDevice.Lockdown Assembly : iMobileDevice-net.dll Syntax public enum LockdownError Fields Name Description DictError EscrowLocked FmipProtected GetProhibited ImmutableValue InvalidActivationRecord InvalidArg InvalidConf InvalidHostId InvalidPairRecord InvalidResponse InvalidService InvalidSessionId McChallengeRequired McProtected MissingActivationRecord MissingHostId MissingKey MissingPairRecord MissingService MissingSessionId MissingValue MuxError NoRunningSession PairingDialogResponsePending PairingFailed PairingProhibitedOverThisConnection PasswordProtected PlistError ReceiveTimeout RemoveProhibited SavePairRecordFailed ServiceLimit ServiceProhibited SessionActive SessionInactive SetProhibited SslError Success UnknownError UserDeniedPairing Extension Methods LockdownErrorExtensions.ThrowOnError() LockdownErrorExtensions.ThrowOnError(String) LockdownErrorExtensions.IsError()"
  },
  "api/iMobileDevice.Lockdown.LockdownClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.Lockdown.LockdownClientHandleDelegateMarshaler.html",
    "title": "Class LockdownClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class LockdownClientHandleDelegateMarshaler Inheritance System.Object LockdownClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Lockdown Assembly : iMobileDevice-net.dll Syntax public class LockdownClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.ILibiMobileDevice.html": {
    "href": "api/iMobileDevice.ILibiMobileDevice.html",
    "title": "Interface ILibiMobileDevice | imobiledevice-net API",
    "keywords": "Interface ILibiMobileDevice Namespace : iMobileDevice Assembly : iMobileDevice-net.dll Syntax public interface ILibiMobileDevice Properties | Improve this Doc View Source Afc Declaration IAfcApi Afc { get; } Property Value Type Description IAfcApi | Improve this Doc View Source DebugServer Declaration IDebugServerApi DebugServer { get; } Property Value Type Description IDebugServerApi | Improve this Doc View Source DiagnosticsRelay Declaration IDiagnosticsRelayApi DiagnosticsRelay { get; } Property Value Type Description IDiagnosticsRelayApi | Improve this Doc View Source FileRelay Declaration IFileRelayApi FileRelay { get; } Property Value Type Description IFileRelayApi | Improve this Doc View Source HeartBeat Declaration IHeartBeatApi HeartBeat { get; } Property Value Type Description IHeartBeatApi | Improve this Doc View Source HouseArrest Declaration IHouseArrestApi HouseArrest { get; } Property Value Type Description IHouseArrestApi | Improve this Doc View Source iDevice Declaration IiDeviceApi iDevice { get; } Property Value Type Description IiDeviceApi | Improve this Doc View Source InstallationProxy Declaration IInstallationProxyApi InstallationProxy { get; } Property Value Type Description IInstallationProxyApi | Improve this Doc View Source LibraryFound Declaration bool LibraryFound { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Lockdown Declaration ILockdownApi Lockdown { get; } Property Value Type Description ILockdownApi | Improve this Doc View Source Misagent Declaration IMisagentApi Misagent { get; } Property Value Type Description IMisagentApi | Improve this Doc View Source Mobileactivation Declaration IMobileactivationApi Mobileactivation { get; } Property Value Type Description IMobileactivationApi | Improve this Doc View Source MobileBackup Declaration IMobileBackupApi MobileBackup { get; } Property Value Type Description IMobileBackupApi | Improve this Doc View Source MobileBackup2 Declaration IMobileBackup2Api MobileBackup2 { get; } Property Value Type Description IMobileBackup2Api | Improve this Doc View Source MobileImageMounter Declaration IMobileImageMounterApi MobileImageMounter { get; } Property Value Type Description IMobileImageMounterApi | Improve this Doc View Source MobileSync Declaration IMobileSyncApi MobileSync { get; } Property Value Type Description IMobileSyncApi | Improve this Doc View Source NotificationProxy Declaration INotificationProxyApi NotificationProxy { get; } Property Value Type Description INotificationProxyApi | Improve this Doc View Source Pinvoke Declaration IPinvokeApi Pinvoke { get; } Property Value Type Description IPinvokeApi | Improve this Doc View Source Plist Declaration IPlistApi Plist { get; } Property Value Type Description IPlistApi | Improve this Doc View Source PropertyListService Declaration IPropertyListServiceApi PropertyListService { get; } Property Value Type Description IPropertyListServiceApi | Improve this Doc View Source Restore Declaration IRestoreApi Restore { get; } Property Value Type Description IRestoreApi | Improve this Doc View Source Screenshotr Declaration IScreenshotrApi Screenshotr { get; } Property Value Type Description IScreenshotrApi | Improve this Doc View Source Service Declaration IServiceApi Service { get; } Property Value Type Description IServiceApi | Improve this Doc View Source SpringBoardServices Declaration ISpringBoardServicesApi SpringBoardServices { get; } Property Value Type Description ISpringBoardServicesApi | Improve this Doc View Source SyslogRelay Declaration ISyslogRelayApi SyslogRelay { get; } Property Value Type Description ISyslogRelayApi | Improve this Doc View Source Usbmuxd Declaration IUsbmuxdApi Usbmuxd { get; } Property Value Type Description IUsbmuxdApi | Improve this Doc View Source WebInspector Declaration IWebInspectorApi WebInspector { get; } Property Value Type Description IWebInspectorApi"
  },
  "api/iMobileDevice.iDevice.html": {
    "href": "api/iMobileDevice.iDevice.html",
    "title": "Namespace iMobileDevice.iDevice | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.iDevice Classes iDeviceApi iDeviceConnectionHandle iDeviceConnectionHandleDelegateMarshaler iDeviceErrorExtensions iDeviceException iDeviceHandle iDeviceHandleDelegateMarshaler iDeviceListMarshaler iDeviceNativeMethods Structs iDeviceEvent Interfaces IiDeviceApi Enums iDeviceError Error Codes iDeviceEventType The event type for device add or removal iDeviceSocketType specifies how libusbmuxd should connect to usbmuxd Delegates iDeviceDebugCallBack iDeviceEventCallBack"
  },
  "api/iMobileDevice.iDevice.iDeviceConnectionHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.iDevice.iDeviceConnectionHandleDelegateMarshaler.html",
    "title": "Class iDeviceConnectionHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class iDeviceConnectionHandleDelegateMarshaler Inheritance System.Object iDeviceConnectionHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.iDevice Assembly : iMobileDevice-net.dll Syntax public class iDeviceConnectionHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.iDevice.iDeviceConnectionHandle.html": {
    "href": "api/iMobileDevice.iDevice.iDeviceConnectionHandle.html",
    "title": "Class iDeviceConnectionHandle | imobiledevice-net API",
    "keywords": "Class iDeviceConnectionHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid iDeviceConnectionHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.iDevice Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class iDeviceConnectionHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source iDeviceConnectionHandle() Declaration protected iDeviceConnectionHandle() | Improve this Doc View Source iDeviceConnectionHandle(Boolean) Declaration protected iDeviceConnectionHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static iDeviceConnectionHandle Zero { get; } Property Value Type Description iDeviceConnectionHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static iDeviceConnectionHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description iDeviceConnectionHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static iDeviceConnectionHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description iDeviceConnectionHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.HouseArrest.HouseArrestError.html": {
    "href": "api/iMobileDevice.HouseArrest.HouseArrestError.html",
    "title": "Enum HouseArrestError | imobiledevice-net API",
    "keywords": "Enum HouseArrestError Error Codes Namespace : iMobileDevice.HouseArrest Assembly : iMobileDevice-net.dll Syntax public enum HouseArrestError Fields Name Description ConnFailed InvalidArg InvalidMode PlistError Success UnknownError Extension Methods HouseArrestErrorExtensions.ThrowOnError() HouseArrestErrorExtensions.ThrowOnError(String) HouseArrestErrorExtensions.IsError()"
  },
  "api/iMobileDevice.HeartBeat.HeartBeatError.html": {
    "href": "api/iMobileDevice.HeartBeat.HeartBeatError.html",
    "title": "Enum HeartBeatError | imobiledevice-net API",
    "keywords": "Enum HeartBeatError Error Codes Namespace : iMobileDevice.HeartBeat Assembly : iMobileDevice-net.dll Syntax public enum HeartBeatError Fields Name Description InvalidArg MuxError PlistError SslError Success UnknownError Extension Methods HeartBeatErrorExtensions.ThrowOnError() HeartBeatErrorExtensions.ThrowOnError(String) HeartBeatErrorExtensions.IsError()"
  },
  "api/iMobileDevice.FileRelay.FileRelayError.html": {
    "href": "api/iMobileDevice.FileRelay.FileRelayError.html",
    "title": "Enum FileRelayError | imobiledevice-net API",
    "keywords": "Enum FileRelayError Error Codes Namespace : iMobileDevice.FileRelay Assembly : iMobileDevice-net.dll Syntax public enum FileRelayError Fields Name Description InvalidArg InvalidSource MuxError PermissionDenied PlistError StagingEmpty Success UnknownError Extension Methods FileRelayErrorExtensions.ThrowOnError() FileRelayErrorExtensions.ThrowOnError(String) FileRelayErrorExtensions.IsError()"
  },
  "api/iMobileDevice.DiagnosticsRelay.IDiagnosticsRelayApi.html": {
    "href": "api/iMobileDevice.DiagnosticsRelay.IDiagnosticsRelayApi.html",
    "title": "Interface IDiagnosticsRelayApi | imobiledevice-net API",
    "keywords": "Interface IDiagnosticsRelayApi Namespace : iMobileDevice.DiagnosticsRelay Assembly : iMobileDevice-net.dll Syntax public interface IDiagnosticsRelayApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.DiagnosticsRelay . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source diagnostics_relay_client_free(IntPtr) Disconnects a diagnostics_relay client from the device and frees up the diagnostics_relay client data. Declaration DiagnosticsRelayError diagnostics_relay_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The diagnostics_relay client to disconnect and free. Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when one of client or client->parent is invalid, or DIAGNOSTICS_RELAY_E_UNKNOWN_ERROR when the was an error freeing the parent property_list_service client. | Improve this Doc View Source diagnostics_relay_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out DiagnosticsRelayClientHandle) Connects to the diagnostics_relay service on the specified device. Declaration DiagnosticsRelayError diagnostics_relay_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out DiagnosticsRelayClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. DiagnosticsRelayClientHandle client Reference that will point to a newly allocated diagnostics_relay_client_t upon successful return. Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when one of the parameters is invalid, or DIAGNOSTICS_RELAY_E_MUX_ERROR when the connection failed. | Improve this Doc View Source diagnostics_relay_client_start_service(iDeviceHandle, out DiagnosticsRelayClientHandle, String) Starts a new diagnostics_relay service on the specified device and connects to it. Declaration DiagnosticsRelayError diagnostics_relay_client_start_service(iDeviceHandle device, out DiagnosticsRelayClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. DiagnosticsRelayClientHandle client Pointer that will point to a newly allocated diagnostics_relay_client_t upon successful return. Must be freed using diagnostics_relay_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, or an DIAGNOSTICS_RELAY_E_* error code otherwise. | Improve this Doc View Source diagnostics_relay_goodbye(DiagnosticsRelayClientHandle) Sends the Goodbye request signaling the end of communication. Declaration DiagnosticsRelayError diagnostics_relay_goodbye(DiagnosticsRelayClientHandle client) Parameters Type Name Description DiagnosticsRelayClientHandle client The diagnostics_relay client Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client is NULL, DIAGNOSTICS_RELAY_E_PLIST_ERROR if the device did not acknowledge the request | Improve this Doc View Source diagnostics_relay_query_ioregistry_entry(DiagnosticsRelayClientHandle, String, String, out PlistHandle) Declaration DiagnosticsRelayError diagnostics_relay_query_ioregistry_entry(DiagnosticsRelayClientHandle client, string name, string classname, out PlistHandle result) Parameters Type Name Description DiagnosticsRelayClientHandle client System.String name System.String classname PlistHandle result Returns Type Description DiagnosticsRelayError | Improve this Doc View Source diagnostics_relay_query_ioregistry_plane(DiagnosticsRelayClientHandle, String, out PlistHandle) Declaration DiagnosticsRelayError diagnostics_relay_query_ioregistry_plane(DiagnosticsRelayClientHandle client, string plane, out PlistHandle result) Parameters Type Name Description DiagnosticsRelayClientHandle client System.String plane PlistHandle result Returns Type Description DiagnosticsRelayError | Improve this Doc View Source diagnostics_relay_query_mobilegestalt(DiagnosticsRelayClientHandle, PlistHandle, out PlistHandle) Declaration DiagnosticsRelayError diagnostics_relay_query_mobilegestalt(DiagnosticsRelayClientHandle client, PlistHandle keys, out PlistHandle result) Parameters Type Name Description DiagnosticsRelayClientHandle client PlistHandle keys PlistHandle result Returns Type Description DiagnosticsRelayError | Improve this Doc View Source diagnostics_relay_request_diagnostics(DiagnosticsRelayClientHandle, String, out PlistHandle) Shutdown of the device and optionally show a user notification. Declaration DiagnosticsRelayError diagnostics_relay_request_diagnostics(DiagnosticsRelayClientHandle client, string type, out PlistHandle diagnostics) Parameters Type Name Description DiagnosticsRelayClientHandle client The diagnostics_relay client System.String type PlistHandle diagnostics Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client is NULL, DIAGNOSTICS_RELAY_E_PLIST_ERROR if the device did not acknowledge the request | Improve this Doc View Source diagnostics_relay_restart(DiagnosticsRelayClientHandle, DiagnosticsRelayAction) Restart the device and optionally show a user notification. Declaration DiagnosticsRelayError diagnostics_relay_restart(DiagnosticsRelayClientHandle client, DiagnosticsRelayAction flags) Parameters Type Name Description DiagnosticsRelayClientHandle client The diagnostics_relay client DiagnosticsRelayAction flags A binary flag combination of DIAGNOSTICS_RELAY_ACTION_FLAG_WAIT_FOR_DISCONNECT to wait until diagnostics_relay_client_free() disconnects before execution and DIAGNOSTICS_RELAY_ACTION_FLAG_DISPLAY_FAIL to show a \"FAIL\" dialog or DIAGNOSTICS_RELAY_ACTION_FLAG_DISPLAY_PASS to show an \"OK\" dialog Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client is NULL, DIAGNOSTICS_RELAY_E_PLIST_ERROR if the device did not acknowledge the request | Improve this Doc View Source diagnostics_relay_shutdown(DiagnosticsRelayClientHandle, DiagnosticsRelayAction) Shutdown of the device and optionally show a user notification. Declaration DiagnosticsRelayError diagnostics_relay_shutdown(DiagnosticsRelayClientHandle client, DiagnosticsRelayAction flags) Parameters Type Name Description DiagnosticsRelayClientHandle client The diagnostics_relay client DiagnosticsRelayAction flags A binary flag combination of DIAGNOSTICS_RELAY_ACTION_FLAG_WAIT_FOR_DISCONNECT to wait until diagnostics_relay_client_free() disconnects before execution and DIAGNOSTICS_RELAY_ACTION_FLAG_DISPLAY_FAIL to show a \"FAIL\" dialog or DIAGNOSTICS_RELAY_ACTION_FLAG_DISPLAY_PASS to show an \"OK\" dialog Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client is NULL, DIAGNOSTICS_RELAY_E_PLIST_ERROR if the device did not acknowledge the request | Improve this Doc View Source diagnostics_relay_sleep(DiagnosticsRelayClientHandle) Puts the device into deep sleep mode and disconnects from host. Declaration DiagnosticsRelayError diagnostics_relay_sleep(DiagnosticsRelayClientHandle client) Parameters Type Name Description DiagnosticsRelayClientHandle client The diagnostics_relay client Returns Type Description DiagnosticsRelayError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client is NULL, DIAGNOSTICS_RELAY_E_PLIST_ERROR if the device did not acknowledge the request"
  },
  "api/iMobileDevice.DiagnosticsRelay.DiagnosticsRelayAction.html": {
    "href": "api/iMobileDevice.DiagnosticsRelay.DiagnosticsRelayAction.html",
    "title": "Enum DiagnosticsRelayAction | imobiledevice-net API",
    "keywords": "Enum DiagnosticsRelayAction Namespace : iMobileDevice.DiagnosticsRelay Assembly : iMobileDevice-net.dll Syntax public enum DiagnosticsRelayAction Fields Name Description ActionFlagDisplayFail ActionFlagDisplayPass ActionFlagWaitForDisconnect"
  },
  "api/iMobileDevice.DebugServer.DebugServerCommandHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.DebugServer.DebugServerCommandHandleDelegateMarshaler.html",
    "title": "Class DebugServerCommandHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class DebugServerCommandHandleDelegateMarshaler Inheritance System.Object DebugServerCommandHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.DebugServer Assembly : iMobileDevice-net.dll Syntax public class DebugServerCommandHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.WebInspector.WebInspectorError.html": {
    "href": "api/iMobileDevice.WebInspector.WebInspectorError.html",
    "title": "Enum WebInspectorError | imobiledevice-net API",
    "keywords": "Enum WebInspectorError Error Codes Namespace : iMobileDevice.WebInspector Assembly : iMobileDevice-net.dll Syntax public enum WebInspectorError Fields Name Description InvalidArg MuxError PlistError SslError Success UnknownError Extension Methods WebInspectorErrorExtensions.ThrowOnError() WebInspectorErrorExtensions.ThrowOnError(String) WebInspectorErrorExtensions.IsError()"
  },
  "api/iMobileDevice.WebInspector.WebInspectorClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.WebInspector.WebInspectorClientHandleDelegateMarshaler.html",
    "title": "Class WebInspectorClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class WebInspectorClientHandleDelegateMarshaler Inheritance System.Object WebInspectorClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.WebInspector Assembly : iMobileDevice-net.dll Syntax public class WebInspectorClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.WebInspector.WebInspectorClientHandle.html": {
    "href": "api/iMobileDevice.WebInspector.WebInspectorClientHandle.html",
    "title": "Class WebInspectorClientHandle | imobiledevice-net API",
    "keywords": "Class WebInspectorClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid WebInspectorClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.WebInspector Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class WebInspectorClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source WebInspectorClientHandle() Declaration protected WebInspectorClientHandle() | Improve this Doc View Source WebInspectorClientHandle(Boolean) Declaration protected WebInspectorClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static WebInspectorClientHandle Zero { get; } Property Value Type Description WebInspectorClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static WebInspectorClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description WebInspectorClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static WebInspectorClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description WebInspectorClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.SpringBoardServices.SpringBoardServicesClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.SpringBoardServices.SpringBoardServicesClientHandleDelegateMarshaler.html",
    "title": "Class SpringBoardServicesClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class SpringBoardServicesClientHandleDelegateMarshaler Inheritance System.Object SpringBoardServicesClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.SpringBoardServices Assembly : iMobileDevice-net.dll Syntax public class SpringBoardServicesClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.SpringBoardServices.SpringBoardServicesClientHandle.html": {
    "href": "api/iMobileDevice.SpringBoardServices.SpringBoardServicesClientHandle.html",
    "title": "Class SpringBoardServicesClientHandle | imobiledevice-net API",
    "keywords": "Class SpringBoardServicesClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid SpringBoardServicesClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.SpringBoardServices Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class SpringBoardServicesClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source SpringBoardServicesClientHandle() Declaration protected SpringBoardServicesClientHandle() | Improve this Doc View Source SpringBoardServicesClientHandle(Boolean) Declaration protected SpringBoardServicesClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static SpringBoardServicesClientHandle Zero { get; } Property Value Type Description SpringBoardServicesClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static SpringBoardServicesClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description SpringBoardServicesClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static SpringBoardServicesClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description SpringBoardServicesClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.SpringBoardServices.SpringBoardServicesApi.html": {
    "href": "api/iMobileDevice.SpringBoardServices.SpringBoardServicesApi.html",
    "title": "Class SpringBoardServicesApi | imobiledevice-net API",
    "keywords": "Class SpringBoardServicesApi Inheritance System.Object SpringBoardServicesApi Implements ISpringBoardServicesApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.SpringBoardServices Assembly : iMobileDevice-net.dll Syntax public class SpringBoardServicesApi : ISpringBoardServicesApi Constructors | Improve this Doc View Source SpringBoardServicesApi(ILibiMobileDevice) Declaration public SpringBoardServicesApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source sbservices_client_free(IntPtr) Disconnects an sbservices client from the device and frees up the sbservices client data. Declaration public virtual SpringBoardServicesError sbservices_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The sbservices client to disconnect and free. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client is NULL, or an SBSERVICES_E_* error code otherwise. | Improve this Doc View Source sbservices_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out SpringBoardServicesClientHandle) Connects to the springboardservices service on the specified device. Declaration public virtual SpringBoardServicesError sbservices_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out SpringBoardServicesClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. SpringBoardServicesClientHandle client Pointer that will point to a newly allocated sbservices_client_t upon successful return. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client is NULL, or an SBSERVICES_E_* error code otherwise. | Improve this Doc View Source sbservices_client_start_service(iDeviceHandle, out SpringBoardServicesClientHandle, String) Starts a new sbservices service on the specified device and connects to it. Declaration public virtual SpringBoardServicesError sbservices_client_start_service(iDeviceHandle device, out SpringBoardServicesClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. SpringBoardServicesClientHandle client Pointer that will point to a newly allocated sbservices_client_t upon successful return. Must be freed using sbservices_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, or an SBSERVICES_E_* error code otherwise. | Improve this Doc View Source sbservices_get_home_screen_wallpaper_pngdata(SpringBoardServicesClientHandle, ref IntPtr, ref UInt64) Get the home screen wallpaper as PNG data. Declaration public virtual SpringBoardServicesError sbservices_get_home_screen_wallpaper_pngdata(SpringBoardServicesClientHandle client, ref IntPtr pngdata, ref ulong pngsize) Parameters Type Name Description SpringBoardServicesClientHandle client The connected sbservices client to use. System.IntPtr pngdata Pointer that will point to a newly allocated buffer containing the PNG data upon successful return. It is up to the caller to free the memory. System.UInt64 pngsize Pointer to a uint64_t that will be set to the size of the buffer pngdata points to upon successful return. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client or pngdata are invalid, or an SBSERVICES_E_* error code otherwise. | Improve this Doc View Source sbservices_get_icon_pngdata(SpringBoardServicesClientHandle, String, ref IntPtr, ref UInt64) Get the icon of the specified app as PNG data. Declaration public virtual SpringBoardServicesError sbservices_get_icon_pngdata(SpringBoardServicesClientHandle client, string bundleid, ref IntPtr pngdata, ref ulong pngsize) Parameters Type Name Description SpringBoardServicesClientHandle client The connected sbservices client to use. System.String bundleid System.IntPtr pngdata Pointer that will point to a newly allocated buffer containing the PNG data upon successful return. It is up to the caller to free the memory. System.UInt64 pngsize Pointer to a uint64_t that will be set to the size of the buffer pngdata points to upon successful return. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client, bundleId, or pngdata are invalid, or an SBSERVICES_E_* error code otherwise. | Improve this Doc View Source sbservices_get_icon_state(SpringBoardServicesClientHandle, out PlistHandle, String) Gets the icon state of the connected device. Declaration public virtual SpringBoardServicesError sbservices_get_icon_state(SpringBoardServicesClientHandle client, out PlistHandle state, string formatVersion) Parameters Type Name Description SpringBoardServicesClientHandle client The connected sbservices client to use. PlistHandle state Pointer that will point to a newly allocated plist containing the current icon state. It is up to the caller to free the memory. System.String formatVersion Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client or state is invalid, or an SBSERVICES_E_* error code otherwise. | Improve this Doc View Source sbservices_get_interface_orientation(SpringBoardServicesClientHandle, ref SpringBoardServicesInterfaceOrientation) Gets the interface orientation of the device. Declaration public virtual SpringBoardServicesError sbservices_get_interface_orientation(SpringBoardServicesClientHandle client, ref SpringBoardServicesInterfaceOrientation interfaceOrientation) Parameters Type Name Description SpringBoardServicesClientHandle client The connected sbservices client to use. SpringBoardServicesInterfaceOrientation interfaceOrientation Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client or state is invalid, or an SBSERVICES_E_* error code otherwise. | Improve this Doc View Source sbservices_set_icon_state(SpringBoardServicesClientHandle, PlistHandle) Sets the icon state of the connected device. Declaration public virtual SpringBoardServicesError sbservices_set_icon_state(SpringBoardServicesClientHandle client, PlistHandle newstate) Parameters Type Name Description SpringBoardServicesClientHandle client The connected sbservices client to use. PlistHandle newstate A plist containing the new iconstate. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client or newstate is NULL, or an SBSERVICES_E_* error code otherwise. Implements ISpringBoardServicesApi"
  },
  "api/iMobileDevice.SpringBoardServices.ISpringBoardServicesApi.html": {
    "href": "api/iMobileDevice.SpringBoardServices.ISpringBoardServicesApi.html",
    "title": "Interface ISpringBoardServicesApi | imobiledevice-net API",
    "keywords": "Interface ISpringBoardServicesApi Namespace : iMobileDevice.SpringBoardServices Assembly : iMobileDevice-net.dll Syntax public interface ISpringBoardServicesApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.SpringBoardServices . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source sbservices_client_free(IntPtr) Disconnects an sbservices client from the device and frees up the sbservices client data. Declaration SpringBoardServicesError sbservices_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The sbservices client to disconnect and free. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client is NULL, or an SBSERVICES_E_* error code otherwise. | Improve this Doc View Source sbservices_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out SpringBoardServicesClientHandle) Connects to the springboardservices service on the specified device. Declaration SpringBoardServicesError sbservices_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out SpringBoardServicesClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. SpringBoardServicesClientHandle client Pointer that will point to a newly allocated sbservices_client_t upon successful return. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client is NULL, or an SBSERVICES_E_* error code otherwise. | Improve this Doc View Source sbservices_client_start_service(iDeviceHandle, out SpringBoardServicesClientHandle, String) Starts a new sbservices service on the specified device and connects to it. Declaration SpringBoardServicesError sbservices_client_start_service(iDeviceHandle device, out SpringBoardServicesClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. SpringBoardServicesClientHandle client Pointer that will point to a newly allocated sbservices_client_t upon successful return. Must be freed using sbservices_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, or an SBSERVICES_E_* error code otherwise. | Improve this Doc View Source sbservices_get_home_screen_wallpaper_pngdata(SpringBoardServicesClientHandle, ref IntPtr, ref UInt64) Get the home screen wallpaper as PNG data. Declaration SpringBoardServicesError sbservices_get_home_screen_wallpaper_pngdata(SpringBoardServicesClientHandle client, ref IntPtr pngdata, ref ulong pngsize) Parameters Type Name Description SpringBoardServicesClientHandle client The connected sbservices client to use. System.IntPtr pngdata Pointer that will point to a newly allocated buffer containing the PNG data upon successful return. It is up to the caller to free the memory. System.UInt64 pngsize Pointer to a uint64_t that will be set to the size of the buffer pngdata points to upon successful return. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client or pngdata are invalid, or an SBSERVICES_E_* error code otherwise. | Improve this Doc View Source sbservices_get_icon_pngdata(SpringBoardServicesClientHandle, String, ref IntPtr, ref UInt64) Get the icon of the specified app as PNG data. Declaration SpringBoardServicesError sbservices_get_icon_pngdata(SpringBoardServicesClientHandle client, string bundleid, ref IntPtr pngdata, ref ulong pngsize) Parameters Type Name Description SpringBoardServicesClientHandle client The connected sbservices client to use. System.String bundleid System.IntPtr pngdata Pointer that will point to a newly allocated buffer containing the PNG data upon successful return. It is up to the caller to free the memory. System.UInt64 pngsize Pointer to a uint64_t that will be set to the size of the buffer pngdata points to upon successful return. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client, bundleId, or pngdata are invalid, or an SBSERVICES_E_* error code otherwise. | Improve this Doc View Source sbservices_get_icon_state(SpringBoardServicesClientHandle, out PlistHandle, String) Gets the icon state of the connected device. Declaration SpringBoardServicesError sbservices_get_icon_state(SpringBoardServicesClientHandle client, out PlistHandle state, string formatVersion) Parameters Type Name Description SpringBoardServicesClientHandle client The connected sbservices client to use. PlistHandle state Pointer that will point to a newly allocated plist containing the current icon state. It is up to the caller to free the memory. System.String formatVersion Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client or state is invalid, or an SBSERVICES_E_* error code otherwise. | Improve this Doc View Source sbservices_get_interface_orientation(SpringBoardServicesClientHandle, ref SpringBoardServicesInterfaceOrientation) Gets the interface orientation of the device. Declaration SpringBoardServicesError sbservices_get_interface_orientation(SpringBoardServicesClientHandle client, ref SpringBoardServicesInterfaceOrientation interfaceOrientation) Parameters Type Name Description SpringBoardServicesClientHandle client The connected sbservices client to use. SpringBoardServicesInterfaceOrientation interfaceOrientation Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client or state is invalid, or an SBSERVICES_E_* error code otherwise. | Improve this Doc View Source sbservices_set_icon_state(SpringBoardServicesClientHandle, PlistHandle) Sets the icon state of the connected device. Declaration SpringBoardServicesError sbservices_set_icon_state(SpringBoardServicesClientHandle client, PlistHandle newstate) Parameters Type Name Description SpringBoardServicesClientHandle client The connected sbservices client to use. PlistHandle newstate A plist containing the new iconstate. Returns Type Description SpringBoardServicesError SBSERVICES_E_SUCCESS on success, SBSERVICES_E_INVALID_ARG when client or newstate is NULL, or an SBSERVICES_E_* error code otherwise."
  },
  "api/iMobileDevice.Screenshotr.ScreenshotrError.html": {
    "href": "api/iMobileDevice.Screenshotr.ScreenshotrError.html",
    "title": "Enum ScreenshotrError | imobiledevice-net API",
    "keywords": "Enum ScreenshotrError Error Codes Namespace : iMobileDevice.Screenshotr Assembly : iMobileDevice-net.dll Syntax public enum ScreenshotrError Fields Name Description BadVersion InvalidArg MuxError PlistError Success UnknownError Extension Methods ScreenshotrErrorExtensions.ThrowOnError() ScreenshotrErrorExtensions.ThrowOnError(String) ScreenshotrErrorExtensions.IsError()"
  },
  "api/iMobileDevice.Screenshotr.ScreenshotrClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.Screenshotr.ScreenshotrClientHandleDelegateMarshaler.html",
    "title": "Class ScreenshotrClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class ScreenshotrClientHandleDelegateMarshaler Inheritance System.Object ScreenshotrClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Screenshotr Assembly : iMobileDevice-net.dll Syntax public class ScreenshotrClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.PropertyListService.PropertyListServiceClientHandle.html": {
    "href": "api/iMobileDevice.PropertyListService.PropertyListServiceClientHandle.html",
    "title": "Class PropertyListServiceClientHandle | imobiledevice-net API",
    "keywords": "Class PropertyListServiceClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid PropertyListServiceClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.PropertyListService Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class PropertyListServiceClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source PropertyListServiceClientHandle() Declaration protected PropertyListServiceClientHandle() | Improve this Doc View Source PropertyListServiceClientHandle(Boolean) Declaration protected PropertyListServiceClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static PropertyListServiceClientHandle Zero { get; } Property Value Type Description PropertyListServiceClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static PropertyListServiceClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description PropertyListServiceClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static PropertyListServiceClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description PropertyListServiceClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.PropertyListService.PropertyListServiceApi.html": {
    "href": "api/iMobileDevice.PropertyListService.PropertyListServiceApi.html",
    "title": "Class PropertyListServiceApi | imobiledevice-net API",
    "keywords": "Class PropertyListServiceApi Inheritance System.Object PropertyListServiceApi Implements IPropertyListServiceApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.PropertyListService Assembly : iMobileDevice-net.dll Syntax public class PropertyListServiceApi : IPropertyListServiceApi Constructors | Improve this Doc View Source PropertyListServiceApi(ILibiMobileDevice) Declaration public PropertyListServiceApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source property_list_service_client_free(IntPtr) Frees a PropertyList service. Declaration public virtual PropertyListServiceError property_list_service_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The property list service to free. Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when client is invalid, or a PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR when another error occured. | Improve this Doc View Source property_list_service_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out PropertyListServiceClientHandle) Creates a new property list service for the specified port. Declaration public virtual PropertyListServiceError property_list_service_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out PropertyListServiceClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. PropertyListServiceClientHandle client Pointer that will be set to a newly allocated property_list_service_client_t upon successful return. Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when one of the arguments is invalid, or PROPERTY_LIST_SERVICE_E_MUX_ERROR when connecting to the device failed. | Improve this Doc View Source property_list_service_disable_ssl(PropertyListServiceClientHandle) Disable SSL for the given property list service client. Declaration public virtual PropertyListServiceError property_list_service_disable_ssl(PropertyListServiceClientHandle client) Parameters Type Name Description PropertyListServiceClientHandle client The connected property list service client for which SSL should be disabled. Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG if client or client->connection is NULL, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR otherwise. | Improve this Doc View Source property_list_service_enable_ssl(PropertyListServiceClientHandle) Enable SSL for the given property list service client. Declaration public virtual PropertyListServiceError property_list_service_enable_ssl(PropertyListServiceClientHandle client) Parameters Type Name Description PropertyListServiceClientHandle client The connected property list service client for which SSL should be enabled. Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG if client or client->connection is NULL, PROPERTY_LIST_SERVICE_E_SSL_ERROR when SSL could not be enabled, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR otherwise. | Improve this Doc View Source property_list_service_receive_plist(PropertyListServiceClientHandle, out PlistHandle) Receives a plist using the given property list service client. Binary or XML plists are automatically handled. This function is like property_list_service_receive_plist_with_timeout using a timeout of 10 seconds. Declaration public virtual PropertyListServiceError property_list_service_receive_plist(PropertyListServiceClientHandle client, out PlistHandle plist) Parameters Type Name Description PropertyListServiceClientHandle client The property list service client to use for receiving PlistHandle plist pointer to a plist_t that will point to the received plist upon successful return Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when client or *plist is NULL, PROPERTY_LIST_SERVICE_E_PLIST_ERROR when the received data cannot be converted to a plist, PROPERTY_LIST_SERVICE_E_MUX_ERROR when a communication error occurs, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source property_list_service_receive_plist_with_timeout(PropertyListServiceClientHandle, out PlistHandle, UInt32) Receives a plist using the given property list service client with specified timeout. Binary or XML plists are automatically handled. Declaration public virtual PropertyListServiceError property_list_service_receive_plist_with_timeout(PropertyListServiceClientHandle client, out PlistHandle plist, uint timeout) Parameters Type Name Description PropertyListServiceClientHandle client The property list service client to use for receiving PlistHandle plist pointer to a plist_t that will point to the received plist upon successful return System.UInt32 timeout Maximum time in milliseconds to wait for data. Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when connection or *plist is NULL, PROPERTY_LIST_SERVICE_E_PLIST_ERROR when the received data cannot be converted to a plist, PROPERTY_LIST_SERVICE_E_MUX_ERROR when a communication error occurs, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source property_list_service_send_binary_plist(PropertyListServiceClientHandle, PlistHandle) Sends a binary plist. Declaration public virtual PropertyListServiceError property_list_service_send_binary_plist(PropertyListServiceClientHandle client, PlistHandle plist) Parameters Type Name Description PropertyListServiceClientHandle client The property list service client to use for sending. PlistHandle plist plist to send Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when client or plist is NULL, PROPERTY_LIST_SERVICE_E_PLIST_ERROR when dict is not a valid plist, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source property_list_service_send_xml_plist(PropertyListServiceClientHandle, PlistHandle) Sends an XML plist. Declaration public virtual PropertyListServiceError property_list_service_send_xml_plist(PropertyListServiceClientHandle client, PlistHandle plist) Parameters Type Name Description PropertyListServiceClientHandle client The property list service client to use for sending. PlistHandle plist plist to send Returns Type Description PropertyListServiceError PROPERTY_LIST_SERVICE_E_SUCCESS on success, PROPERTY_LIST_SERVICE_E_INVALID_ARG when client or plist is NULL, PROPERTY_LIST_SERVICE_E_PLIST_ERROR when dict is not a valid plist, or PROPERTY_LIST_SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. Implements IPropertyListServiceApi"
  },
  "api/iMobileDevice.Pinvoke.PinvokeException.html": {
    "href": "api/iMobileDevice.Pinvoke.PinvokeException.html",
    "title": "Class PinvokeException | imobiledevice-net API",
    "keywords": "Class PinvokeException Inheritance System.Object System.Exception PinvokeException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.Pinvoke Assembly : iMobileDevice-net.dll Syntax [Serializable] public class PinvokeException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source PinvokeException() Initializes a new instance of the PinvokeException class. Declaration public PinvokeException() | Improve this Doc View Source PinvokeException(PinvokeError) Declaration public PinvokeException(PinvokeError error) Parameters Type Name Description PinvokeError error | Improve this Doc View Source PinvokeException(PinvokeError, String) Declaration public PinvokeException(PinvokeError error, string message) Parameters Type Name Description PinvokeError error System.String message | Improve this Doc View Source PinvokeException(SerializationInfo, StreamingContext) Initializes a new instance of the PinvokeException class with serialized data. Declaration protected PinvokeException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source PinvokeException(String) Initializes a new instance of the PinvokeException class with a specified error message. Declaration public PinvokeException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source PinvokeException(String, Exception) Initializes a new instance of the PinvokeException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public PinvokeException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual PinvokeError ErrorCode { get; } Property Value Type Description PinvokeError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.Pinvoke.PinvokeErrorExtensions.html": {
    "href": "api/iMobileDevice.Pinvoke.PinvokeErrorExtensions.html",
    "title": "Class PinvokeErrorExtensions | imobiledevice-net API",
    "keywords": "Class PinvokeErrorExtensions Inheritance System.Object PinvokeErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Pinvoke Assembly : iMobileDevice-net.dll Syntax public static class PinvokeErrorExtensions Methods | Improve this Doc View Source IsError(PinvokeError) Declaration public static bool IsError(this PinvokeError value) Parameters Type Name Description PinvokeError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(PinvokeError) Declaration public static void ThrowOnError(this PinvokeError value) Parameters Type Name Description PinvokeError value | Improve this Doc View Source ThrowOnError(PinvokeError, String) Declaration public static void ThrowOnError(this PinvokeError value, string message) Parameters Type Name Description PinvokeError value System.String message"
  },
  "api/iMobileDevice.NativeStringArrayMarshaler.html": {
    "href": "api/iMobileDevice.NativeStringArrayMarshaler.html",
    "title": "Class NativeStringArrayMarshaler | imobiledevice-net API",
    "keywords": "Class NativeStringArrayMarshaler Inheritance System.Object NativeStringArrayMarshaler AfcDictionaryMarshaler iDeviceListMarshaler LockdownMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice Assembly : iMobileDevice-net.dll Syntax public class NativeStringArrayMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object ManagedObj) Parameters Type Name Description System.Object ManagedObj | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public virtual void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObj) Parameters Type Name Description System.Object managedObj Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.NativeLibraries.html": {
    "href": "api/iMobileDevice.NativeLibraries.html",
    "title": "Class NativeLibraries | imobiledevice-net API",
    "keywords": "Class NativeLibraries Inheritance System.Object NativeLibraries Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice Assembly : iMobileDevice-net.dll Syntax public static class NativeLibraries Properties | Improve this Doc View Source LibraryFound Declaration public static bool LibraryFound { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Load() Declaration public static void Load() | Improve this Doc View Source Load(String) Declaration public static void Load(string directory) Parameters Type Name Description System.String directory"
  },
  "api/iMobileDevice.MobileImageMounter.MobileImageMounterClientHandle.html": {
    "href": "api/iMobileDevice.MobileImageMounter.MobileImageMounterClientHandle.html",
    "title": "Class MobileImageMounterClientHandle | imobiledevice-net API",
    "keywords": "Class MobileImageMounterClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid MobileImageMounterClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileImageMounter Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class MobileImageMounterClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source MobileImageMounterClientHandle() Declaration protected MobileImageMounterClientHandle() | Improve this Doc View Source MobileImageMounterClientHandle(Boolean) Declaration protected MobileImageMounterClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static MobileImageMounterClientHandle Zero { get; } Property Value Type Description MobileImageMounterClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static MobileImageMounterClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description MobileImageMounterClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static MobileImageMounterClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description MobileImageMounterClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.MobileImageMounter.MobileImageMounterApi.html": {
    "href": "api/iMobileDevice.MobileImageMounter.MobileImageMounterApi.html",
    "title": "Class MobileImageMounterApi | imobiledevice-net API",
    "keywords": "Class MobileImageMounterApi Inheritance System.Object MobileImageMounterApi Implements IMobileImageMounterApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileImageMounter Assembly : iMobileDevice-net.dll Syntax public class MobileImageMounterApi : IMobileImageMounterApi Constructors | Improve this Doc View Source MobileImageMounterApi(ILibiMobileDevice) Declaration public MobileImageMounterApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source mobile_image_mounter_free(IntPtr) Disconnects a mobile_image_mounter client from the device and frees up the mobile_image_mounter client data. Declaration public virtual MobileImageMounterError mobile_image_mounter_free(IntPtr client) Parameters Type Name Description System.IntPtr client The mobile_image_mounter client to disconnect and free. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, or MOBILE_IMAGE_MOUNTER_E_INVALID_ARG if client is NULL. | Improve this Doc View Source mobile_image_mounter_hangup(MobileImageMounterClientHandle) Hangs up the connection to the mobile_image_mounter service. This functions has to be called before freeing up a mobile_image_mounter instance. If not, errors appear in the device's syslog. Declaration public virtual MobileImageMounterError mobile_image_mounter_hangup(MobileImageMounterClientHandle client) Parameters Type Name Description MobileImageMounterClientHandle client The client to hang up Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, MOBILE_IMAGE_MOUNTER_E_INVALID_ARG if client is invalid, or another error code otherwise. | Improve this Doc View Source mobile_image_mounter_lookup_image(MobileImageMounterClientHandle, String, out PlistHandle) Tells if the image of ImageType is already mounted. Declaration public virtual MobileImageMounterError mobile_image_mounter_lookup_image(MobileImageMounterClientHandle client, string imageType, out PlistHandle result) Parameters Type Name Description MobileImageMounterClientHandle client The client use System.String imageType PlistHandle result Pointer to a plist that will receive the result of the operation. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, or an error code on error Remarks This function may return MOBILE_IMAGE_MOUNTER_E_SUCCESS even if the operation has failed. Check the resulting plist for further information. | Improve this Doc View Source mobile_image_mounter_mount_image(MobileImageMounterClientHandle, String, Byte[], UInt16, String, out PlistHandle) Mounts an image on the device. Declaration public virtual MobileImageMounterError mobile_image_mounter_mount_image(MobileImageMounterClientHandle client, string imagePath, byte[] signature, ushort signatureSize, string imageType, out PlistHandle result) Parameters Type Name Description MobileImageMounterClientHandle client The connected mobile_image_mounter client. System.String imagePath System.Byte [] signature Pointer to a buffer holding the images' signature System.UInt16 signatureSize System.String imageType PlistHandle result Pointer to a plist that will receive the result of the operation. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, MOBILE_IMAGE_MOUNTER_E_INVALID_ARG if on ore more parameters are invalid, or another error code otherwise. Remarks This function may return MOBILE_IMAGE_MOUNTER_E_SUCCESS even if the operation has failed. Check the resulting plist for further information. Note that there is no unmounting function. The mount persists until the device is rebooted. | Improve this Doc View Source mobile_image_mounter_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MobileImageMounterClientHandle) Connects to the mobile_image_mounter service on the specified device. Declaration public virtual MobileImageMounterError mobile_image_mounter_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MobileImageMounterClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MobileImageMounterClientHandle client Pointer that will be set to a newly allocated mobile_image_mounter_client_t upon successful return. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, MOBILE_IMAGE_MOUNTER_E_INVALID_ARG if device is NULL, or MOBILE_IMAGE_MOUNTER_E_CONN_FAILED if the connection to the device could not be established. | Improve this Doc View Source mobile_image_mounter_start_service(iDeviceHandle, out MobileImageMounterClientHandle, String) Starts a new mobile_image_mounter service on the specified device and connects to it. Declaration public virtual MobileImageMounterError mobile_image_mounter_start_service(iDeviceHandle device, out MobileImageMounterClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MobileImageMounterClientHandle client Pointer that will point to a newly allocated mobile_image_mounter_t upon successful return. Must be freed using mobile_image_mounter_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on success, or an MOBILE_IMAGE_MOUNTER_E_* error code otherwise. | Improve this Doc View Source mobile_image_mounter_upload_image(MobileImageMounterClientHandle, String, UInt32, Byte[], UInt16, MobileImageMounterUploadCallBack, IntPtr) Uploads an image with an optional signature to the device. Declaration public virtual MobileImageMounterError mobile_image_mounter_upload_image(MobileImageMounterClientHandle client, string imageType, uint imageSize, byte[] signature, ushort signatureSize, MobileImageMounterUploadCallBack uploadCallBack, IntPtr userdata) Parameters Type Name Description MobileImageMounterClientHandle client The connected mobile_image_mounter client. System.String imageType System.UInt32 imageSize System.Byte [] signature Buffer with a signature of the image being uploaded. If NULL, no signature will be used. System.UInt16 signatureSize MobileImageMounterUploadCallBack uploadCallBack System.IntPtr userdata User defined data for the upload callback function. Returns Type Description MobileImageMounterError MOBILE_IMAGE_MOUNTER_E_SUCCESS on succes, or a MOBILE_IMAGE_MOUNTER_E_* error code otherwise. Implements IMobileImageMounterApi"
  },
  "api/iMobileDevice.MobileBackup.MobileBackupClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.MobileBackup.MobileBackupClientHandleDelegateMarshaler.html",
    "title": "Class MobileBackupClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class MobileBackupClientHandleDelegateMarshaler Inheritance System.Object MobileBackupClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileBackup Assembly : iMobileDevice-net.dll Syntax public class MobileBackupClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.MobileBackup.MobileBackupClientHandle.html": {
    "href": "api/iMobileDevice.MobileBackup.MobileBackupClientHandle.html",
    "title": "Class MobileBackupClientHandle | imobiledevice-net API",
    "keywords": "Class MobileBackupClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid MobileBackupClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileBackup Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class MobileBackupClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source MobileBackupClientHandle() Declaration protected MobileBackupClientHandle() | Improve this Doc View Source MobileBackupClientHandle(Boolean) Declaration protected MobileBackupClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static MobileBackupClientHandle Zero { get; } Property Value Type Description MobileBackupClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static MobileBackupClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description MobileBackupClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static MobileBackupClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description MobileBackupClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.Misagent.MisagentNativeMethods.html": {
    "href": "api/iMobileDevice.Misagent.MisagentNativeMethods.html",
    "title": "Class MisagentNativeMethods | imobiledevice-net API",
    "keywords": "Class MisagentNativeMethods Inheritance System.Object MisagentNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Misagent Assembly : iMobileDevice-net.dll Syntax public class MisagentNativeMethods Methods misagent_client_free(IntPtr) Disconnects an misagent client from the device and frees up the misagent client data. Declaration public static MisagentError misagent_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The misagent client to disconnect and free. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is NULL, or an MISAGENT_E_* error code otherwise. misagent_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MisagentClientHandle) Connects to the misagent service on the specified device. Declaration public static MisagentError misagent_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MisagentClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MisagentClientHandle client Pointer that will point to a newly allocated misagent_client_t upon successful return. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is NULL, or an MISAGENT_E_* error code otherwise. misagent_client_start_service(iDeviceHandle, out MisagentClientHandle, String) Starts a new misagent service on the specified device and connects to it. Declaration public static MisagentError misagent_client_start_service(iDeviceHandle device, out MisagentClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MisagentClientHandle client Pointer that will point to a newly allocated misagent_client_t upon successful return. Must be freed using misagent_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, or an MISAGENT_E_* error code otherwise. misagent_copy(MisagentClientHandle, out PlistHandle) Retrieves all installed provisioning profiles (iOS 9.2.1 or below). Declaration public static MisagentError misagent_copy(MisagentClientHandle client, out PlistHandle profiles) Parameters Type Name Description MisagentClientHandle client The connected misagent to use. PlistHandle profiles Pointer to a plist_t that will be set to a PLIST_ARRAY if the function is successful. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is invalid, or an MISAGENT_E_* error code otherwise. Remarks This API call only works with iOS 9.2.1 or below. For newer iOS versions use misagent_copy_all() instead. If no provisioning profiles are installed on the device, this function still returns MISAGENT_E_SUCCESS and profiles will just point to an empty array. misagent_copy_all(MisagentClientHandle, out PlistHandle) Retrieves all installed provisioning profiles (iOS 9.3 or higher). Declaration public static MisagentError misagent_copy_all(MisagentClientHandle client, out PlistHandle profiles) Parameters Type Name Description MisagentClientHandle client The connected misagent to use. PlistHandle profiles Pointer to a plist_t that will be set to a PLIST_ARRAY if the function is successful. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is invalid, or an MISAGENT_E_* error code otherwise. Remarks This API call only works with iOS 9.3 or higher. For older iOS versions use misagent_copy() instead. If no provisioning profiles are installed on the device, this function still returns MISAGENT_E_SUCCESS and profiles will just point to an empty array. misagent_get_status_code(MisagentClientHandle) Retrieves the status code from the last operation. Declaration public static int misagent_get_status_code(MisagentClientHandle client) Parameters Type Name Description MisagentClientHandle client The misagent to use. Returns Type Description System.Int32 -1 if client is invalid, or the status code from the last operation misagent_install(MisagentClientHandle, PlistHandle) Installs the given provisioning profile. Only works with valid profiles. Declaration public static MisagentError misagent_install(MisagentClientHandle client, PlistHandle profile) Parameters Type Name Description MisagentClientHandle client The connected misagent to use for installation PlistHandle profile The valid provisioning profile to install. This has to be passed as a PLIST_DATA, otherwise the function will fail. Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is invalid, or an MISAGENT_E_* error code otherwise. misagent_remove(MisagentClientHandle, String) Removes a given provisioning profile. Declaration public static MisagentError misagent_remove(MisagentClientHandle client, string profileid) Parameters Type Name Description MisagentClientHandle client The connected misagent to use. System.String profileid Returns Type Description MisagentError MISAGENT_E_SUCCESS on success, MISAGENT_E_INVALID_ARG when client is invalid, or an MISAGENT_E_* error code otherwise."
  },
  "api/iMobileDevice.Misagent.MisagentException.html": {
    "href": "api/iMobileDevice.Misagent.MisagentException.html",
    "title": "Class MisagentException | imobiledevice-net API",
    "keywords": "Class MisagentException Inheritance System.Object System.Exception MisagentException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.Misagent Assembly : iMobileDevice-net.dll Syntax [Serializable] public class MisagentException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source MisagentException() Initializes a new instance of the MisagentException class. Declaration public MisagentException() | Improve this Doc View Source MisagentException(MisagentError) Declaration public MisagentException(MisagentError error) Parameters Type Name Description MisagentError error | Improve this Doc View Source MisagentException(MisagentError, String) Declaration public MisagentException(MisagentError error, string message) Parameters Type Name Description MisagentError error System.String message | Improve this Doc View Source MisagentException(SerializationInfo, StreamingContext) Initializes a new instance of the MisagentException class with serialized data. Declaration protected MisagentException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source MisagentException(String) Initializes a new instance of the MisagentException class with a specified error message. Declaration public MisagentException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source MisagentException(String, Exception) Initializes a new instance of the MisagentException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public MisagentException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual MisagentError ErrorCode { get; } Property Value Type Description MisagentError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.Lockdown.LockdownPairRecord.html": {
    "href": "api/iMobileDevice.Lockdown.LockdownPairRecord.html",
    "title": "Struct LockdownPairRecord | imobiledevice-net API",
    "keywords": "Struct LockdownPairRecord Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : iMobileDevice.Lockdown Assembly : iMobileDevice-net.dll Syntax public struct LockdownPairRecord Fields | Improve this Doc View Source device_certificate Declaration public IntPtr device_certificate Field Value Type Description System.IntPtr | Improve this Doc View Source host_certificate Declaration public IntPtr host_certificate Field Value Type Description System.IntPtr | Improve this Doc View Source host_id Declaration public IntPtr host_id Field Value Type Description System.IntPtr | Improve this Doc View Source root_certificate Declaration public IntPtr root_certificate Field Value Type Description System.IntPtr | Improve this Doc View Source system_buid Declaration public IntPtr system_buid Field Value Type Description System.IntPtr Properties | Improve this Doc View Source device_certificateString Declaration public string device_certificateString { get; } Property Value Type Description System.String | Improve this Doc View Source host_certificateString Declaration public string host_certificateString { get; } Property Value Type Description System.String | Improve this Doc View Source host_idString Declaration public string host_idString { get; } Property Value Type Description System.String | Improve this Doc View Source root_certificateString Declaration public string root_certificateString { get; } Property Value Type Description System.String | Improve this Doc View Source system_buidString Declaration public string system_buidString { get; } Property Value Type Description System.String"
  },
  "api/iMobileDevice.Lockdown.LockdownNativeMethods.html": {
    "href": "api/iMobileDevice.Lockdown.LockdownNativeMethods.html",
    "title": "Class LockdownNativeMethods | imobiledevice-net API",
    "keywords": "Class LockdownNativeMethods Inheritance System.Object LockdownNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Lockdown Assembly : iMobileDevice-net.dll Syntax public class LockdownNativeMethods Methods lockdownd_activate(LockdownClientHandle, PlistHandle) Activates the device. Only works within an open session. The ActivationRecord plist dictionary must be obtained using the activation protocol requesting from Apple's https webservice. Declaration public static LockdownError lockdownd_activate(LockdownClientHandle client, PlistHandle activationRecord) Parameters Type Name Description LockdownClientHandle client The lockdown client PlistHandle activationRecord Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client or activation_record is NULL, LOCKDOWN_E_NO_RUNNING_SESSION if no session is open, LOCKDOWN_E_PLIST_ERROR if the received plist is broken, LOCKDOWN_E_ACTIVATION_FAILED if the activation failed, LOCKDOWN_E_INVALID_ACTIVATION_RECORD if the device reports that the activation_record is invalid lockdownd_client_free(IntPtr) Closes the lockdownd client session if one is running and frees up the lockdownd_client struct. Declaration public static LockdownError lockdownd_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The lockdown client Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL lockdownd_client_new(iDeviceHandle, out LockdownClientHandle, String) Creates a new lockdownd client for the device. Declaration public static LockdownError lockdownd_client_new(iDeviceHandle device, out LockdownClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to create a lockdownd client for LockdownClientHandle client The pointer to the location of the new lockdownd_client System.String label The label to use for communication. Usually the program name. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL Remarks This function does not pair with the device or start a session. This has to be done manually by the caller after the client is created. The device disconnects automatically if the lockdown connection idles for more than 10 seconds. Make sure to call lockdownd_client_free() as soon as the connection is no longer needed. lockdownd_client_new_with_handshake(iDeviceHandle, out LockdownClientHandle, String) Creates a new lockdownd client for the device and starts initial handshake. The handshake consists out of query_type, validate_pair, pair and start_session calls. It uses the internal pairing record management. Declaration public static LockdownError lockdownd_client_new_with_handshake(iDeviceHandle device, out LockdownClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to create a lockdownd client for LockdownClientHandle client The pointer to the location of the new lockdownd_client System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_INVALID_CONF if configuration data is wrong Remarks The device disconnects automatically if the lockdown connection idles for more than 10 seconds. Make sure to call lockdownd_client_free() as soon as the connection is no longer needed. lockdownd_client_set_label(LockdownClientHandle, String) Sets the label to send for requests to lockdownd. Declaration public static void lockdownd_client_set_label(LockdownClientHandle client, string label) Parameters Type Name Description LockdownClientHandle client The lockdown client System.String label The label to set or NULL to disable sending a label lockdownd_data_classes_free(IntPtr) Frees memory of an allocated array of data classes as returned by lockdownd_get_sync_data_classes() Declaration public static LockdownError lockdownd_data_classes_free(IntPtr classes) Parameters Type Name Description System.IntPtr classes An array of class names to free. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success lockdownd_deactivate(LockdownClientHandle) Deactivates the device, returning it to the locked â€œActivate with iTunesâ€ screen. Declaration public static LockdownError lockdownd_deactivate(LockdownClientHandle client) Parameters Type Name Description LockdownClientHandle client The lockdown client Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_NO_RUNNING_SESSION if no session is open, LOCKDOWN_E_PLIST_ERROR if the received plist is broken lockdownd_enter_recovery(LockdownClientHandle) Tells the device to immediately enter recovery mode. Declaration public static LockdownError lockdownd_enter_recovery(LockdownClientHandle client) Parameters Type Name Description LockdownClientHandle client The lockdown client Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL lockdownd_get_device_name(LockdownClientHandle, out IntPtr) Retrieves the name of the device from lockdownd set by the user. Declaration public static LockdownError lockdownd_get_device_name(LockdownClientHandle client, out IntPtr deviceName) Parameters Type Name Description LockdownClientHandle client An initialized lockdownd client. System.IntPtr deviceName Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success | Improve this Doc View Source lockdownd_get_device_name(LockdownClientHandle, out String) Declaration public static LockdownError lockdownd_get_device_name(LockdownClientHandle client, out string deviceName) Parameters Type Name Description LockdownClientHandle client System.String deviceName Returns Type Description LockdownError lockdownd_get_device_udid(LockdownClientHandle, out IntPtr) Returns the unique id of the device from lockdownd. Declaration public static LockdownError lockdownd_get_device_udid(LockdownClientHandle client, out IntPtr udid) Parameters Type Name Description LockdownClientHandle client An initialized lockdownd client. System.IntPtr udid Holds the unique id of the device. The caller is responsible for freeing the memory. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success | Improve this Doc View Source lockdownd_get_device_udid(LockdownClientHandle, out String) Declaration public static LockdownError lockdownd_get_device_udid(LockdownClientHandle client, out string udid) Parameters Type Name Description LockdownClientHandle client System.String udid Returns Type Description LockdownError | Improve this Doc View Source lockdownd_get_sync_data_classes(LockdownClientHandle, out ReadOnlyCollection<String>, ref Int32) Declaration public static LockdownError lockdownd_get_sync_data_classes(LockdownClientHandle client, out ReadOnlyCollection<string> classes, ref int count) Parameters Type Name Description LockdownClientHandle client System.Collections.ObjectModel.ReadOnlyCollection < System.String > classes System.Int32 count Returns Type Description LockdownError lockdownd_get_sync_data_classes(LockdownClientHandle, out IntPtr, ref Int32) Calculates and returns the data classes the device supports from lockdownd. Declaration public static LockdownError lockdownd_get_sync_data_classes(LockdownClientHandle client, out IntPtr classes, ref int count) Parameters Type Name Description LockdownClientHandle client An initialized lockdownd client. System.IntPtr classes A pointer to store an array of class names. The caller is responsible for freeing the memory which can be done using mobilesync_data_classes_free(). System.Int32 count The number of items in the classes array. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_NO_RUNNING_SESSION if no session is open, LOCKDOWN_E_PLIST_ERROR if the received plist is broken lockdownd_get_value(LockdownClientHandle, String, String, out PlistHandle) Retrieves a preferences plist using an optional domain and/or key name. Declaration public static LockdownError lockdownd_get_value(LockdownClientHandle client, string domain, string key, out PlistHandle value) Parameters Type Name Description LockdownClientHandle client An initialized lockdownd client. System.String domain The domain to query on or NULL for global domain System.String key The key name to request or NULL to query for all keys PlistHandle value A plist node representing the result value node Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL lockdownd_goodbye(LockdownClientHandle) Sends the Goodbye request to lockdownd signaling the end of communication. Declaration public static LockdownError lockdownd_goodbye(LockdownClientHandle client) Parameters Type Name Description LockdownClientHandle client The lockdown client Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_PLIST_ERROR if the device did not acknowledge the request lockdownd_pair(LockdownClientHandle, LockdownPairRecordHandle) Pairs the device using the supplied pair record. Declaration public static LockdownError lockdownd_pair(LockdownClientHandle client, LockdownPairRecordHandle pairRecord) Parameters Type Name Description LockdownClientHandle client The lockdown client LockdownPairRecordHandle pairRecord Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_PLIST_ERROR if the pair_record certificates are wrong, LOCKDOWN_E_PAIRING_FAILED if the pairing failed, LOCKDOWN_E_PASSWORD_PROTECTED if the device is password protected, LOCKDOWN_E_INVALID_HOST_ID if the device does not know the caller's host id lockdownd_pair_with_options(LockdownClientHandle, LockdownPairRecordHandle, PlistHandle, out PlistHandle) Pairs the device using the supplied pair record and passing the given options. Declaration public static LockdownError lockdownd_pair_with_options(LockdownClientHandle client, LockdownPairRecordHandle pairRecord, PlistHandle options, out PlistHandle response) Parameters Type Name Description LockdownClientHandle client The lockdown client LockdownPairRecordHandle pairRecord PlistHandle options The pairing options to pass. Can be NULL for no options. PlistHandle response If non-NULL a pointer to lockdownd's response dictionary is returned. The caller is responsible to free the response dictionary with plist_free(). Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_PLIST_ERROR if the pair_record certificates are wrong, LOCKDOWN_E_PAIRING_FAILED if the pairing failed, LOCKDOWN_E_PASSWORD_PROTECTED if the device is password protected, LOCKDOWN_E_INVALID_HOST_ID if the device does not know the caller's host id lockdownd_query_type(LockdownClientHandle, out IntPtr) Query the type of the service daemon. Depending on whether the device is queried in normal mode or restore mode, different types will be returned. Declaration public static LockdownError lockdownd_query_type(LockdownClientHandle client, out IntPtr type) Parameters Type Name Description LockdownClientHandle client The lockdownd client System.IntPtr type The type returned by the service daemon. Pass NULL to ignore. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL | Improve this Doc View Source lockdownd_query_type(LockdownClientHandle, out String) Declaration public static LockdownError lockdownd_query_type(LockdownClientHandle client, out string type) Parameters Type Name Description LockdownClientHandle client System.String type Returns Type Description LockdownError lockdownd_receive(LockdownClientHandle, out PlistHandle) Receives a plist from lockdownd. Declaration public static LockdownError lockdownd_receive(LockdownClientHandle client, out PlistHandle plist) Parameters Type Name Description LockdownClientHandle client The lockdownd client PlistHandle plist The plist to store the received data Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client or plist is NULL lockdownd_remove_value(LockdownClientHandle, String, String) Removes a preference node by domain and/or key name. Declaration public static LockdownError lockdownd_remove_value(LockdownClientHandle client, string domain, string key) Parameters Type Name Description LockdownClientHandle client An initialized lockdownd client. System.String domain The domain to query on or NULL for global domain System.String key The key name to remove or NULL remove all keys for the current domain Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL Remarks : Use with caution as this could remove vital information on the device lockdownd_send(LockdownClientHandle, PlistHandle) Sends a plist to lockdownd. Declaration public static LockdownError lockdownd_send(LockdownClientHandle client, PlistHandle plist) Parameters Type Name Description LockdownClientHandle client The lockdownd client PlistHandle plist The plist to send Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client or plist is NULL Remarks This function is low-level and should only be used if you need to send a new type of message. lockdownd_service_descriptor_free(IntPtr) Frees memory of a service descriptor as returned by lockdownd_start_service() Declaration public static LockdownError lockdownd_service_descriptor_free(IntPtr service) Parameters Type Name Description System.IntPtr service A service descriptor instance to free. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success lockdownd_set_value(LockdownClientHandle, String, String, PlistHandle) Sets a preferences value using a plist and optional by domain and/or key name. Declaration public static LockdownError lockdownd_set_value(LockdownClientHandle client, string domain, string key, PlistHandle value) Parameters Type Name Description LockdownClientHandle client an initialized lockdownd client. System.String domain the domain to query on or NULL for global domain System.String key the key name to set the value or NULL to set a value dict plist PlistHandle value a plist node of any node type representing the value to set Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client or value is NULL lockdownd_start_service(LockdownClientHandle, String, out LockdownServiceDescriptorHandle) Requests to start a service and retrieve it's port on success. Declaration public static LockdownError lockdownd_start_service(LockdownClientHandle client, string identifier, out LockdownServiceDescriptorHandle service) Parameters Type Name Description LockdownClientHandle client The lockdownd client System.String identifier The identifier of the service to start LockdownServiceDescriptorHandle service The service descriptor on success or NULL on failure Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG if a parameter is NULL, LOCKDOWN_E_INVALID_SERVICE if the requested service is not known by the device, LOCKDOWN_E_START_SERVICE_FAILED if the service could not be started by the device lockdownd_start_service_with_escrow_bag(LockdownClientHandle, String, out LockdownServiceDescriptorHandle) Requests to start a service and retrieve it's port on success. Sends the escrow bag from the device's pair record. Declaration public static LockdownError lockdownd_start_service_with_escrow_bag(LockdownClientHandle client, string identifier, out LockdownServiceDescriptorHandle service) Parameters Type Name Description LockdownClientHandle client The lockdownd client System.String identifier The identifier of the service to start LockdownServiceDescriptorHandle service The service descriptor on success or NULL on failure Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG if a parameter is NULL, LOCKDOWN_E_INVALID_SERVICE if the requested service is not known by the device, LOCKDOWN_E_START_SERVICE_FAILED if the service could not because started by the device, LOCKDOWN_E_INVALID_CONF if the host id or escrow bag are missing from the device record. lockdownd_start_session(LockdownClientHandle, String, out IntPtr, ref Int32) Opens a session with lockdownd and switches to SSL mode if device wants it. Declaration public static LockdownError lockdownd_start_session(LockdownClientHandle client, string hostId, out IntPtr sessionId, ref int sslEnabled) Parameters Type Name Description LockdownClientHandle client The lockdownd client System.String hostId System.IntPtr sessionId System.Int32 sslEnabled Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when a client or host_id is NULL, LOCKDOWN_E_PLIST_ERROR if the response plist had errors, LOCKDOWN_E_INVALID_HOST_ID if the device does not know the supplied HostID, LOCKDOWN_E_SSL_ERROR if enabling SSL communication failed | Improve this Doc View Source lockdownd_start_session(LockdownClientHandle, String, out String, ref Int32) Declaration public static LockdownError lockdownd_start_session(LockdownClientHandle client, string hostId, out string sessionId, ref int sslEnabled) Parameters Type Name Description LockdownClientHandle client System.String hostId System.String sessionId System.Int32 sslEnabled Returns Type Description LockdownError lockdownd_stop_session(LockdownClientHandle, String) Closes the lockdownd session by sending the StopSession request. Declaration public static LockdownError lockdownd_stop_session(LockdownClientHandle client, string sessionId) Parameters Type Name Description LockdownClientHandle client The lockdown client System.String sessionId Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL lockdownd_unpair(LockdownClientHandle, LockdownPairRecordHandle) Unpairs the device with the given HostID and removes the pairing records from the device and host if the internal pairing record management is used. Declaration public static LockdownError lockdownd_unpair(LockdownClientHandle client, LockdownPairRecordHandle pairRecord) Parameters Type Name Description LockdownClientHandle client The lockdown client LockdownPairRecordHandle pairRecord Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_PLIST_ERROR if the pair_record certificates are wrong, LOCKDOWN_E_PAIRING_FAILED if the pairing failed, LOCKDOWN_E_PASSWORD_PROTECTED if the device is password protected, LOCKDOWN_E_INVALID_HOST_ID if the device does not know the caller's host id lockdownd_validate_pair(LockdownClientHandle, LockdownPairRecordHandle) Validates if the device is paired with the given HostID. If successful the specified host will become trusted host of the device indicated by the lockdownd preference named TrustedHostAttached. Otherwise the host must be paired using lockdownd_pair() first. Declaration public static LockdownError lockdownd_validate_pair(LockdownClientHandle client, LockdownPairRecordHandle pairRecord) Parameters Type Name Description LockdownClientHandle client The lockdown client LockdownPairRecordHandle pairRecord Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_PLIST_ERROR if the pair_record certificates are wrong, LOCKDOWN_E_PAIRING_FAILED if the pairing failed, LOCKDOWN_E_PASSWORD_PROTECTED if the device is password protected, LOCKDOWN_E_INVALID_HOST_ID if the device does not know the caller's host id"
  },
  "api/iMobileDevice.InstallationProxy.html": {
    "href": "api/iMobileDevice.InstallationProxy.html",
    "title": "Namespace iMobileDevice.InstallationProxy | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.InstallationProxy Classes InstallationProxyApi InstallationProxyClientHandle InstallationProxyClientHandleDelegateMarshaler InstallationProxyErrorExtensions InstallationProxyException InstallationProxyNativeMethods Interfaces IInstallationProxyApi Enums InstallationProxyError Error Codes Delegates InstallationProxyStatusCallBack"
  },
  "api/iMobileDevice.InstallationProxy.InstallationProxyException.html": {
    "href": "api/iMobileDevice.InstallationProxy.InstallationProxyException.html",
    "title": "Class InstallationProxyException | imobiledevice-net API",
    "keywords": "Class InstallationProxyException Inheritance System.Object System.Exception InstallationProxyException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.InstallationProxy Assembly : iMobileDevice-net.dll Syntax [Serializable] public class InstallationProxyException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source InstallationProxyException() Initializes a new instance of the InstallationProxyException class. Declaration public InstallationProxyException() | Improve this Doc View Source InstallationProxyException(InstallationProxyError) Declaration public InstallationProxyException(InstallationProxyError error) Parameters Type Name Description InstallationProxyError error | Improve this Doc View Source InstallationProxyException(InstallationProxyError, String) Declaration public InstallationProxyException(InstallationProxyError error, string message) Parameters Type Name Description InstallationProxyError error System.String message | Improve this Doc View Source InstallationProxyException(SerializationInfo, StreamingContext) Initializes a new instance of the InstallationProxyException class with serialized data. Declaration protected InstallationProxyException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source InstallationProxyException(String) Initializes a new instance of the InstallationProxyException class with a specified error message. Declaration public InstallationProxyException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source InstallationProxyException(String, Exception) Initializes a new instance of the InstallationProxyException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public InstallationProxyException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual InstallationProxyError ErrorCode { get; } Property Value Type Description InstallationProxyError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.iDevice.iDeviceNativeMethods.html": {
    "href": "api/iMobileDevice.iDevice.iDeviceNativeMethods.html",
    "title": "Class iDeviceNativeMethods | imobiledevice-net API",
    "keywords": "Class iDeviceNativeMethods Inheritance System.Object iDeviceNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.iDevice Assembly : iMobileDevice-net.dll Syntax public class iDeviceNativeMethods Methods idevice_connect(iDeviceHandle, UInt16, out iDeviceConnectionHandle) Set up a connection to the given device. Declaration public static iDeviceError idevice_connect(iDeviceHandle device, ushort port, out iDeviceConnectionHandle connection) Parameters Type Name Description iDeviceHandle device The device to connect to. System.UInt16 port The destination port to connect to. iDeviceConnectionHandle connection Pointer to an idevice_connection_t that will be filled with the necessary data of the connection. Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. idevice_connection_disable_ssl(iDeviceConnectionHandle) Disable SSL for the given connection. Declaration public static iDeviceError idevice_connection_disable_ssl(iDeviceConnectionHandle connection) Parameters Type Name Description iDeviceConnectionHandle connection The connection to disable SSL for. Returns Type Description iDeviceError IDEVICE_E_SUCCESS on success, IDEVICE_E_INVALID_ARG when connection is NULL. This function also returns IDEVICE_E_SUCCESS when SSL is not enabled and does no further error checking on cleanup. idevice_connection_enable_ssl(iDeviceConnectionHandle) Enables SSL for the given connection. Declaration public static iDeviceError idevice_connection_enable_ssl(iDeviceConnectionHandle connection) Parameters Type Name Description iDeviceConnectionHandle connection The connection to enable SSL for. Returns Type Description iDeviceError IDEVICE_E_SUCCESS on success, IDEVICE_E_INVALID_ARG when connection is NULL or connection->ssl_data is non-NULL, or IDEVICE_E_SSL_ERROR when SSL initialization, setup, or handshake fails. idevice_connection_get_fd(iDeviceConnectionHandle, ref Int32) Get the underlying file descriptor for a connection Declaration public static iDeviceError idevice_connection_get_fd(iDeviceConnectionHandle connection, ref int fd) Parameters Type Name Description iDeviceConnectionHandle connection The connection to get fd of System.Int32 fd Pointer to an int where the fd is stored Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. idevice_connection_receive(iDeviceConnectionHandle, Byte[], UInt32, ref UInt32) Receive data from a device via the given connection. This function is like idevice_connection_receive_timeout, but with a predefined reasonable timeout. Declaration public static iDeviceError idevice_connection_receive(iDeviceConnectionHandle connection, byte[] data, uint len, ref uint recvBytes) Parameters Type Name Description iDeviceConnectionHandle connection The connection to receive data from. System.Byte [] data Buffer that will be filled with the received data. This buffer has to be large enough to hold len bytes. System.UInt32 len Buffer size or number of bytes to receive. System.UInt32 recvBytes Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. idevice_connection_receive_timeout(iDeviceConnectionHandle, Byte[], UInt32, ref UInt32, UInt32) Receive data from a device via the given connection. This function will return after the given timeout even if no data has been received. Declaration public static iDeviceError idevice_connection_receive_timeout(iDeviceConnectionHandle connection, byte[] data, uint len, ref uint recvBytes, uint timeout) Parameters Type Name Description iDeviceConnectionHandle connection The connection to receive data from. System.Byte [] data Buffer that will be filled with the received data. This buffer has to be large enough to hold len bytes. System.UInt32 len Buffer size or number of bytes to receive. System.UInt32 recvBytes System.UInt32 timeout Timeout in milliseconds after which this function should return even if no data has been received. Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. idevice_connection_send(iDeviceConnectionHandle, Byte[], UInt32, ref UInt32) Send data to a device via the given connection. Declaration public static iDeviceError idevice_connection_send(iDeviceConnectionHandle connection, byte[] data, uint len, ref uint sentBytes) Parameters Type Name Description iDeviceConnectionHandle connection The connection to send data over. System.Byte [] data Buffer with data to send. System.UInt32 len Size of the buffer to send. System.UInt32 sentBytes Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. idevice_device_list_free(IntPtr) Free a list of device udids. Declaration public static iDeviceError idevice_device_list_free(IntPtr devices) Parameters Type Name Description System.IntPtr devices List of udids to free. Returns Type Description iDeviceError Always returnes IDEVICE_E_SUCCESS. idevice_disconnect(IntPtr) Disconnect from the device and clean up the connection structure. Declaration public static iDeviceError idevice_disconnect(IntPtr connection) Parameters Type Name Description System.IntPtr connection The connection to close. Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. idevice_event_subscribe(iDeviceEventCallBack, IntPtr) Register a callback function that will be called when device add/remove events occur. Declaration public static iDeviceError idevice_event_subscribe(iDeviceEventCallBack callback, IntPtr userData) Parameters Type Name Description iDeviceEventCallBack callback Callback function to call. System.IntPtr userData Returns Type Description iDeviceError IDEVICE_E_SUCCESS on success or an error value when an error occured. idevice_event_unsubscribe() Release the event callback function that has been registered with idevice_event_subscribe(). Declaration public static iDeviceError idevice_event_unsubscribe() Returns Type Description iDeviceError IDEVICE_E_SUCCESS on success or an error value when an error occured. idevice_free(IntPtr) Cleans up an idevice structure, then frees the structure itself. This is a library-level function; deals directly with the device to tear down relations, but otherwise is mostly internal. Declaration public static iDeviceError idevice_free(IntPtr device) Parameters Type Name Description System.IntPtr device idevice_t to free. Returns Type Description iDeviceError | Improve this Doc View Source idevice_get_device_list(out ReadOnlyCollection<String>, ref Int32) Declaration public static iDeviceError idevice_get_device_list(out ReadOnlyCollection<string> devices, ref int count) Parameters Type Name Description System.Collections.ObjectModel.ReadOnlyCollection < System.String > devices System.Int32 count Returns Type Description iDeviceError idevice_get_device_list(out IntPtr, ref Int32) Get a list of currently available devices. Declaration public static iDeviceError idevice_get_device_list(out IntPtr devices, ref int count) Parameters Type Name Description System.IntPtr devices List of udids of devices that are currently available. This list is terminated by a NULL pointer. System.Int32 count Number of devices found. Returns Type Description iDeviceError IDEVICE_E_SUCCESS on success or an error value when an error occured. idevice_get_handle(iDeviceHandle, ref UInt32) Gets the handle of the device. Depends on the connection type. Declaration public static iDeviceError idevice_get_handle(iDeviceHandle device, ref uint handle) Parameters Type Name Description iDeviceHandle device System.UInt32 handle Returns Type Description iDeviceError idevice_get_socket_type(ref Int32) Gets the socket type (Unix socket or TCP socket) libimobiledevice should use when connecting to usbmuxd. Declaration public static iDeviceError idevice_get_socket_type(ref int value) Parameters Type Name Description System.Int32 value A pointer to an integer which will reveive the current socket type Returns Type Description iDeviceError 0 on success or negative on error idevice_get_tcp_endpoint(out IntPtr, ref UInt16) Gets the TCP endpoint to which libimobiledevice will connect if the socket type is set to SOCKET_TYPE_TCP Declaration public static iDeviceError idevice_get_tcp_endpoint(out IntPtr host, ref ushort port) Parameters Type Name Description System.IntPtr host A pointer which will be set to the hostname or IP address to which to connect. The caller must free this string. System.UInt16 port The port to which to connect Returns Type Description iDeviceError 0 on success or negative on error | Improve this Doc View Source idevice_get_tcp_endpoint(out String, ref UInt16) Declaration public static iDeviceError idevice_get_tcp_endpoint(out string host, ref ushort port) Parameters Type Name Description System.String host System.UInt16 port Returns Type Description iDeviceError idevice_get_udid(iDeviceHandle, out IntPtr) Gets the unique id for the device. Declaration public static iDeviceError idevice_get_udid(iDeviceHandle device, out IntPtr udid) Parameters Type Name Description iDeviceHandle device System.IntPtr udid Returns Type Description iDeviceError | Improve this Doc View Source idevice_get_udid(iDeviceHandle, out String) Declaration public static iDeviceError idevice_get_udid(iDeviceHandle device, out string udid) Parameters Type Name Description iDeviceHandle device System.String udid Returns Type Description iDeviceError idevice_new(out iDeviceHandle, String) Creates an idevice_t structure for the device specified by udid, if the device is available. Declaration public static iDeviceError idevice_new(out iDeviceHandle device, string udid) Parameters Type Name Description iDeviceHandle device Upon calling this function, a pointer to a location of type idevice_t. On successful return, this location will be populated. System.String udid The UDID to match. Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. Remarks The resulting idevice_t structure has to be freed with idevice_free() if it is no longer used. idevice_set_debug_callback(iDeviceDebugCallBack) Sets the callback to invoke when writing out debug messages. If this callback is set, messages will be written to this callback instead of the standard output. Declaration public static void idevice_set_debug_callback(iDeviceDebugCallBack callback) Parameters Type Name Description iDeviceDebugCallBack callback The callback which will receive the debug messages. Set to NULL to redirect to stdout. idevice_set_debug_level(Int32) Set the level of debugging. Declaration public static void idevice_set_debug_level(int level) Parameters Type Name Description System.Int32 level Set to 0 for no debug output, 1 to enable basic debug output and 2 to enable full debug output. When set to 2, the values of buffers being sent across the wire are printed out as well, this results in very verbose output. idevice_set_socket_type(Int32) Sets the socket type (Unix socket or TCP socket) libimobiledevice should use when connecting to usbmuxd. Declaration public static iDeviceError idevice_set_socket_type(int value) Parameters Type Name Description System.Int32 value IDEVICE_SOCKET_TYPE_UNIX or IDEVICE_SOCKET_TYPE_TCP Returns Type Description iDeviceError 0 on success or negative on error idevice_set_tcp_endpoint(String, UInt16) Sets the TCP endpoint to which libimobiledevice will connect if the socket type is set to SOCKET_TYPE_TCP Declaration public static iDeviceError idevice_set_tcp_endpoint(string host, ushort port) Parameters Type Name Description System.String host The hostname or IP address to which to connect System.UInt16 port The port to which to connect. Returns Type Description iDeviceError 0 on success or negative on error"
  },
  "api/iMobileDevice.iDevice.iDeviceHandle.html": {
    "href": "api/iMobileDevice.iDevice.iDeviceHandle.html",
    "title": "Class iDeviceHandle | imobiledevice-net API",
    "keywords": "Class iDeviceHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid iDeviceHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.iDevice Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class iDeviceHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source iDeviceHandle() Declaration protected iDeviceHandle() | Improve this Doc View Source iDeviceHandle(Boolean) Declaration protected iDeviceHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static iDeviceHandle Zero { get; } Property Value Type Description iDeviceHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static iDeviceHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description iDeviceHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static iDeviceHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description iDeviceHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.HouseArrest.IHouseArrestApi.html": {
    "href": "api/iMobileDevice.HouseArrest.IHouseArrestApi.html",
    "title": "Interface IHouseArrestApi | imobiledevice-net API",
    "keywords": "Interface IHouseArrestApi Namespace : iMobileDevice.HouseArrest Assembly : iMobileDevice-net.dll Syntax public interface IHouseArrestApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.HouseArrest . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source afc_client_new_from_house_arrest_client(HouseArrestClientHandle, out AfcClientHandle) Creates an AFC client using the given house_arrest client's connection allowing file access to a specific application directory requested by functions like house_arrest_request_vendor_documents(). Declaration AfcError afc_client_new_from_house_arrest_client(HouseArrestClientHandle client, out AfcClientHandle afcClient) Parameters Type Name Description HouseArrestClientHandle client The house_arrest client to use. AfcClientHandle afcClient Returns Type Description AfcError AFC_E_SUCCESS if the afc client was successfully created, AFC_E_INVALID_ARG if client is invalid or was already used to create an afc client, or an AFC_E_* error code returned by afc_client_new_with_service_client(). Remarks After calling this function the house_arrest client will go in an AFC mode that will only allow calling house_arrest_client_free(). Only call house_arrest_client_free() if all AFC operations have completed since it will close the connection. | Improve this Doc View Source house_arrest_client_free(IntPtr) Disconnects an house_arrest client from the device and frees up the house_arrest client data. Declaration HouseArrestError house_arrest_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The house_arrest client to disconnect and free. Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS on success, HOUSE_ARREST_E_INVALID_ARG when client is NULL, or an HOUSE_ARREST_E_* error code otherwise. Remarks After using afc_client_new_from_house_arrest_client(), make sure you call afc_client_free() before calling this function to ensure a proper cleanup. Do not call this function if you still need to perform AFC operations since it will close the connection. | Improve this Doc View Source house_arrest_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out HouseArrestClientHandle) Connects to the house_arrest service on the specified device. Declaration HouseArrestError house_arrest_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out HouseArrestClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. HouseArrestClientHandle client Pointer that will point to a newly allocated housearrest_client_t upon successful return. Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS on success, HOUSE_ARREST_E_INVALID_ARG when client is NULL, or an HOUSE_ARREST_E_* error code otherwise. | Improve this Doc View Source house_arrest_client_start_service(iDeviceHandle, out HouseArrestClientHandle, String) Starts a new house_arrest service on the specified device and connects to it. Declaration HouseArrestError house_arrest_client_start_service(iDeviceHandle device, out HouseArrestClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. HouseArrestClientHandle client Pointer that will point to a newly allocated house_arrest_client_t upon successful return. Must be freed using house_arrest_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS on success, or an HOUSE_ARREST_E_* error code otherwise. | Improve this Doc View Source house_arrest_get_result(HouseArrestClientHandle, out PlistHandle) Retrieves the result of a previously sent house_arrest_request_* request. Declaration HouseArrestError house_arrest_get_result(HouseArrestClientHandle client, out PlistHandle dict) Parameters Type Name Description HouseArrestClientHandle client The house_arrest client to use PlistHandle dict Pointer that will be set to a plist containing the result to the last performed operation. It holds a key 'Status' with the value 'Complete' on success or a key 'Error' with an error description as value. The caller is responsible for freeing the returned plist. Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS if a result plist was retrieved, HOUSE_ARREST_E_INVALID_ARG if client is invalid, HOUSE_ARREST_E_INVALID_MODE if the client is not in the correct mode, or HOUSE_ARREST_E_CONN_FAILED if a connection error occured. | Improve this Doc View Source house_arrest_send_command(HouseArrestClientHandle, String, String) Send a command to the connected house_arrest service. Calls house_arrest_send_request() internally. Declaration HouseArrestError house_arrest_send_command(HouseArrestClientHandle client, string command, string appid) Parameters Type Name Description HouseArrestClientHandle client The house_arrest client to use. System.String command The command to send. Currently, only VendContainer and VendDocuments are known. System.String appid The application identifier to pass along with the . Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS if the command was successfully sent, HOUSE_ARREST_E_INVALID_ARG if client, command, or appid is invalid, HOUSE_ARREST_E_INVALID_MODE if the client is not in the correct mode, or HOUSE_ARREST_E_CONN_FAILED if a connection error occured. Remarks If this function returns HOUSE_ARREST_E_SUCCESS it does not mean that the command was successful. To check for success or failure you need to call house_arrest_get_result(). | Improve this Doc View Source house_arrest_send_request(HouseArrestClientHandle, PlistHandle) Sends a generic request to the connected house_arrest service. Declaration HouseArrestError house_arrest_send_request(HouseArrestClientHandle client, PlistHandle dict) Parameters Type Name Description HouseArrestClientHandle client The house_arrest client to use. PlistHandle dict The request to send as a plist of type PLIST_DICT. Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS if the request was successfully sent, HOUSE_ARREST_E_INVALID_ARG if client or dict is invalid, HOUSE_ARREST_E_PLIST_ERROR if dict is not a plist of type PLIST_DICT, HOUSE_ARREST_E_INVALID_MODE if the client is not in the correct mode, or HOUSE_ARREST_E_CONN_FAILED if a connection error occured. Remarks If this function returns HOUSE_ARREST_E_SUCCESS it does not mean that the request was successful. To check for success or failure you need to call house_arrest_get_result()."
  },
  "api/iMobileDevice.HeartBeat.IHeartBeatApi.html": {
    "href": "api/iMobileDevice.HeartBeat.IHeartBeatApi.html",
    "title": "Interface IHeartBeatApi | imobiledevice-net API",
    "keywords": "Interface IHeartBeatApi Namespace : iMobileDevice.HeartBeat Assembly : iMobileDevice-net.dll Syntax public interface IHeartBeatApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.HeartBeat . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source heartbeat_client_free(IntPtr) Disconnects a heartbeat client from the device and frees up the heartbeat client data. Declaration HeartBeatError heartbeat_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The heartbeat client to disconnect and free. Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, HEARTBEAT_E_INVALID_ARG when client is NULL, or an HEARTBEAT_E_* error code otherwise. | Improve this Doc View Source heartbeat_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out HeartBeatClientHandle) Connects to the heartbeat service on the specified device. Declaration HeartBeatError heartbeat_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out HeartBeatClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. HeartBeatClientHandle client Pointer that will point to a newly allocated heartbeat_client_t upon successful return. Must be freed using heartbeat_client_free() after use. Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, HEARTBEAT_E_INVALID_ARG when client is NULL, or an HEARTBEAT_E_* error code otherwise. | Improve this Doc View Source heartbeat_client_start_service(iDeviceHandle, out HeartBeatClientHandle, String) Starts a new heartbeat service on the specified device and connects to it. Declaration HeartBeatError heartbeat_client_start_service(iDeviceHandle device, out HeartBeatClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. HeartBeatClientHandle client Pointer that will point to a newly allocated heartbeat_client_t upon successful return. Must be freed using heartbeat_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, or an HEARTBEAT_E_* error code otherwise. | Improve this Doc View Source heartbeat_receive(HeartBeatClientHandle, out PlistHandle) Receives a plist from the service. Declaration HeartBeatError heartbeat_receive(HeartBeatClientHandle client, out PlistHandle plist) Parameters Type Name Description HeartBeatClientHandle client The heartbeat client PlistHandle plist The plist to store the received data Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, HEARTBEAT_E_INVALID_ARG when client or plist is NULL | Improve this Doc View Source heartbeat_receive_with_timeout(HeartBeatClientHandle, out PlistHandle, UInt32) Receives a plist using the given heartbeat client. Declaration HeartBeatError heartbeat_receive_with_timeout(HeartBeatClientHandle client, out PlistHandle plist, uint timeoutMs) Parameters Type Name Description HeartBeatClientHandle client The heartbeat client to use for receiving PlistHandle plist pointer to a plist_t that will point to the received plist upon successful return System.UInt32 timeoutMs Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, HEARTBEAT_E_INVALID_ARG when client or *plist is NULL, HEARTBEAT_E_PLIST_ERROR when the received data cannot be converted to a plist, HEARTBEAT_E_MUX_ERROR when a communication error occurs, or HEARTBEAT_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source heartbeat_send(HeartBeatClientHandle, PlistHandle) Sends a plist to the service. Declaration HeartBeatError heartbeat_send(HeartBeatClientHandle client, PlistHandle plist) Parameters Type Name Description HeartBeatClientHandle client The heartbeat client PlistHandle plist The plist to send Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, HEARTBEAT_E_INVALID_ARG when client or plist is NULL"
  },
  "api/iMobileDevice.FileRelay.html": {
    "href": "api/iMobileDevice.FileRelay.html",
    "title": "Namespace iMobileDevice.FileRelay | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.FileRelay Classes FileRelayApi FileRelayClientHandle FileRelayClientHandleDelegateMarshaler FileRelayErrorExtensions FileRelayException FileRelayNativeMethods Interfaces IFileRelayApi Enums FileRelayError Error Codes"
  },
  "api/iMobileDevice.Afc.AfcClientHandle.html": {
    "href": "api/iMobileDevice.Afc.AfcClientHandle.html",
    "title": "Class AfcClientHandle | imobiledevice-net API",
    "keywords": "Class AfcClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid AfcClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Afc Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class AfcClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source AfcClientHandle() Declaration protected AfcClientHandle() | Improve this Doc View Source AfcClientHandle(Boolean) Declaration protected AfcClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static AfcClientHandle Zero { get; } Property Value Type Description AfcClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static AfcClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description AfcClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static AfcClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description AfcClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.Utf8Marshal.html": {
    "href": "api/iMobileDevice.Utf8Marshal.html",
    "title": "Class Utf8Marshal | imobiledevice-net API",
    "keywords": "Class Utf8Marshal Inheritance System.Object Utf8Marshal Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice Assembly : iMobileDevice-net.dll Syntax public static class Utf8Marshal Methods | Improve this Doc View Source PtrToStringUtf8(IntPtr) Declaration public static string PtrToStringUtf8(IntPtr value) Parameters Type Name Description System.IntPtr value Returns Type Description System.String | Improve this Doc View Source StringToHGlobalUtf8(String) Declaration public static IntPtr StringToHGlobalUtf8(string value) Parameters Type Name Description System.String value Returns Type Description System.IntPtr"
  },
  "api/iMobileDevice.Usbmuxd.html": {
    "href": "api/iMobileDevice.Usbmuxd.html",
    "title": "Namespace iMobileDevice.Usbmuxd | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.Usbmuxd Classes UsbmuxdApi UsbmuxdNativeMethods Structs UsbmuxdDeviceInfo UsbmuxdEvent Interfaces IUsbmuxdApi Enums UsbmuxdEventType event types for event callback function UsbmuxdSocketType specifies how libusbmuxd should connect to usbmuxd Delegates UsbmuxdEventCallBack"
  },
  "api/iMobileDevice.Restore.RestoreNativeMethods.html": {
    "href": "api/iMobileDevice.Restore.RestoreNativeMethods.html",
    "title": "Class RestoreNativeMethods | imobiledevice-net API",
    "keywords": "Class RestoreNativeMethods Inheritance System.Object RestoreNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Restore Assembly : iMobileDevice-net.dll Syntax public class RestoreNativeMethods Methods restored_client_free(IntPtr) Closes the restored client session if one is running and frees up the restored_client struct. Declaration public static RestoreError restored_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The restore client Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL restored_client_new(iDeviceHandle, out RestoreClientHandle, String) Creates a new restored client for the device. Declaration public static RestoreError restored_client_new(iDeviceHandle device, out RestoreClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to create a restored client for RestoreClientHandle client The pointer to the location of the new restored_client System.String label The label to use for communication. Usually the program name. Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL restored_client_set_label(RestoreClientHandle, String) Sets the label to send for requests to restored. Declaration public static void restored_client_set_label(RestoreClientHandle client, string label) Parameters Type Name Description RestoreClientHandle client The restore client System.String label The label to set or NULL to disable sending a label restored_get_value(RestoreClientHandle, String, out PlistHandle) Retrieves a value from information plist specified by a key. Declaration public static RestoreError restored_get_value(RestoreClientHandle client, string key, out PlistHandle value) Parameters Type Name Description RestoreClientHandle client An initialized restored client. System.String key The key name to request or NULL to query for all keys PlistHandle value A plist node representing the result value node Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL, RESTORE_E_PLIST_ERROR if value for key can't be found restored_goodbye(RestoreClientHandle) Sends the Goodbye request to restored signaling the end of communication. Declaration public static RestoreError restored_goodbye(RestoreClientHandle client) Parameters Type Name Description RestoreClientHandle client The restore client Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL, RESTORE_E_PLIST_ERROR if the device did not acknowledge the request restored_query_type(RestoreClientHandle, out IntPtr, ref UInt64) Query the type of the service daemon. Depending on whether the device is queried in normal mode or restore mode, different types will be returned. Declaration public static RestoreError restored_query_type(RestoreClientHandle client, out IntPtr type, ref ulong version) Parameters Type Name Description RestoreClientHandle client The restored client System.IntPtr type The type returned by the service daemon. Pass NULL to ignore. System.UInt64 version The restore protocol version. Pass NULL to ignore. Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL | Improve this Doc View Source restored_query_type(RestoreClientHandle, out String, ref UInt64) Declaration public static RestoreError restored_query_type(RestoreClientHandle client, out string type, ref ulong version) Parameters Type Name Description RestoreClientHandle client System.String type System.UInt64 version Returns Type Description RestoreError restored_query_value(RestoreClientHandle, String, out PlistHandle) Queries a value from the device specified by a key. Declaration public static RestoreError restored_query_value(RestoreClientHandle client, string key, out PlistHandle value) Parameters Type Name Description RestoreClientHandle client An initialized restored client. System.String key The key name to request PlistHandle value A plist node representing the result value node Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL, RESTORE_E_PLIST_ERROR if value for key can't be found restored_reboot(RestoreClientHandle) Requests device to reboot. Declaration public static RestoreError restored_reboot(RestoreClientHandle client) Parameters Type Name Description RestoreClientHandle client The restored client Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG if a parameter is NULL restored_receive(RestoreClientHandle, out PlistHandle) Receives a plist from restored. Declaration public static RestoreError restored_receive(RestoreClientHandle client, out PlistHandle plist) Parameters Type Name Description RestoreClientHandle client The restored client PlistHandle plist The plist to store the received data Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client or plist is NULL restored_send(RestoreClientHandle, PlistHandle) Sends a plist to restored. Declaration public static RestoreError restored_send(RestoreClientHandle client, PlistHandle plist) Parameters Type Name Description RestoreClientHandle client The restored client PlistHandle plist The plist to send Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client or plist is NULL Remarks This function is low-level and should only be used if you need to send a new type of message. restored_start_restore(RestoreClientHandle, PlistHandle, UInt64) Requests to start a restore and retrieve it's port on success. Declaration public static RestoreError restored_start_restore(RestoreClientHandle client, PlistHandle options, ulong version) Parameters Type Name Description RestoreClientHandle client The restored client PlistHandle options PLIST_DICT with options for the restore process or NULL System.UInt64 version the restore protocol version, see restored_query_type() Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG if a parameter is NULL, RESTORE_E_START_RESTORE_FAILED if the request fails"
  },
  "api/iMobileDevice.WebInspector.WebInspectorNativeMethods.html": {
    "href": "api/iMobileDevice.WebInspector.WebInspectorNativeMethods.html",
    "title": "Class WebInspectorNativeMethods | imobiledevice-net API",
    "keywords": "Class WebInspectorNativeMethods Inheritance System.Object WebInspectorNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.WebInspector Assembly : iMobileDevice-net.dll Syntax public class WebInspectorNativeMethods Methods webinspector_client_free(IntPtr) Disconnects a webinspector client from the device and frees up the webinspector client data. Declaration public static WebInspectorError webinspector_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The webinspector client to disconnect and free. Returns Type Description WebInspectorError WEBINSPECTOR_E_SUCCESS on success, WEBINSPECTOR_E_INVALID_ARG when client is NULL, or an WEBINSPECTOR_E_* error code otherwise. webinspector_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out WebInspectorClientHandle) Connects to the webinspector service on the specified device. Declaration public static WebInspectorError webinspector_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out WebInspectorClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. WebInspectorClientHandle client Pointer that will point to a newly allocated webinspector_client_t upon successful return. Must be freed using webinspector_client_free() after use. Returns Type Description WebInspectorError WEBINSPECTOR_E_SUCCESS on success, WEBINSPECTOR_E_INVALID_ARG when client is NULL, or an WEBINSPECTOR_E_* error code otherwise. webinspector_client_start_service(iDeviceHandle, out WebInspectorClientHandle, String) Starts a new webinspector service on the specified device and connects to it. Declaration public static WebInspectorError webinspector_client_start_service(iDeviceHandle device, out WebInspectorClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. WebInspectorClientHandle client Pointer that will point to a newly allocated webinspector_client_t upon successful return. Must be freed using webinspector_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description WebInspectorError WEBINSPECTOR_E_SUCCESS on success, or an WEBINSPECTOR_E_* error code otherwise. webinspector_receive(WebInspectorClientHandle, out PlistHandle) Receives a plist from the service. Declaration public static WebInspectorError webinspector_receive(WebInspectorClientHandle client, out PlistHandle plist) Parameters Type Name Description WebInspectorClientHandle client The webinspector client PlistHandle plist The plist to store the received data Returns Type Description WebInspectorError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client or plist is NULL webinspector_receive_with_timeout(WebInspectorClientHandle, out PlistHandle, UInt32) Receives a plist using the given webinspector client. Declaration public static WebInspectorError webinspector_receive_with_timeout(WebInspectorClientHandle client, out PlistHandle plist, uint timeoutMs) Parameters Type Name Description WebInspectorClientHandle client The webinspector client to use for receiving PlistHandle plist pointer to a plist_t that will point to the received plist upon successful return System.UInt32 timeoutMs Returns Type Description WebInspectorError WEBINSPECTOR_E_SUCCESS on success, WEBINSPECTOR_E_INVALID_ARG when client or *plist is NULL, WEBINSPECTOR_E_PLIST_ERROR when the received data cannot be converted to a plist, WEBINSPECTOR_E_MUX_ERROR when a communication error occurs, or WEBINSPECTOR_E_UNKNOWN_ERROR when an unspecified error occurs. webinspector_send(WebInspectorClientHandle, PlistHandle) Sends a plist to the service. Declaration public static WebInspectorError webinspector_send(WebInspectorClientHandle client, PlistHandle plist) Parameters Type Name Description WebInspectorClientHandle client The webinspector client PlistHandle plist The plist to send Returns Type Description WebInspectorError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client or plist is NULL"
  },
  "api/iMobileDevice.WebInspector.WebInspectorException.html": {
    "href": "api/iMobileDevice.WebInspector.WebInspectorException.html",
    "title": "Class WebInspectorException | imobiledevice-net API",
    "keywords": "Class WebInspectorException Inheritance System.Object System.Exception WebInspectorException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.WebInspector Assembly : iMobileDevice-net.dll Syntax [Serializable] public class WebInspectorException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source WebInspectorException() Initializes a new instance of the WebInspectorException class. Declaration public WebInspectorException() | Improve this Doc View Source WebInspectorException(WebInspectorError) Declaration public WebInspectorException(WebInspectorError error) Parameters Type Name Description WebInspectorError error | Improve this Doc View Source WebInspectorException(WebInspectorError, String) Declaration public WebInspectorException(WebInspectorError error, string message) Parameters Type Name Description WebInspectorError error System.String message | Improve this Doc View Source WebInspectorException(SerializationInfo, StreamingContext) Initializes a new instance of the WebInspectorException class with serialized data. Declaration protected WebInspectorException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source WebInspectorException(String) Initializes a new instance of the WebInspectorException class with a specified error message. Declaration public WebInspectorException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source WebInspectorException(String, Exception) Initializes a new instance of the WebInspectorException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public WebInspectorException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual WebInspectorError ErrorCode { get; } Property Value Type Description WebInspectorError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.SpringBoardServices.SpringBoardServicesInterfaceOrientation.html": {
    "href": "api/iMobileDevice.SpringBoardServices.SpringBoardServicesInterfaceOrientation.html",
    "title": "Enum SpringBoardServicesInterfaceOrientation | imobiledevice-net API",
    "keywords": "Enum SpringBoardServicesInterfaceOrientation Namespace : iMobileDevice.SpringBoardServices Assembly : iMobileDevice-net.dll Syntax public enum SpringBoardServicesInterfaceOrientation Fields Name Description InterfaceOrientationLandscapeLeft InterfaceOrientationLandscapeRight InterfaceOrientationPortrait InterfaceOrientationPortraitUpsideDown InterfaceOrientationUnknown"
  },
  "api/iMobileDevice.SpringBoardServices.SpringBoardServicesException.html": {
    "href": "api/iMobileDevice.SpringBoardServices.SpringBoardServicesException.html",
    "title": "Class SpringBoardServicesException | imobiledevice-net API",
    "keywords": "Class SpringBoardServicesException Inheritance System.Object System.Exception SpringBoardServicesException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.SpringBoardServices Assembly : iMobileDevice-net.dll Syntax [Serializable] public class SpringBoardServicesException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source SpringBoardServicesException() Initializes a new instance of the SpringBoardServicesException class. Declaration public SpringBoardServicesException() | Improve this Doc View Source SpringBoardServicesException(SpringBoardServicesError) Declaration public SpringBoardServicesException(SpringBoardServicesError error) Parameters Type Name Description SpringBoardServicesError error | Improve this Doc View Source SpringBoardServicesException(SpringBoardServicesError, String) Declaration public SpringBoardServicesException(SpringBoardServicesError error, string message) Parameters Type Name Description SpringBoardServicesError error System.String message | Improve this Doc View Source SpringBoardServicesException(SerializationInfo, StreamingContext) Initializes a new instance of the SpringBoardServicesException class with serialized data. Declaration protected SpringBoardServicesException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source SpringBoardServicesException(String) Initializes a new instance of the SpringBoardServicesException class with a specified error message. Declaration public SpringBoardServicesException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source SpringBoardServicesException(String, Exception) Initializes a new instance of the SpringBoardServicesException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public SpringBoardServicesException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual SpringBoardServicesError ErrorCode { get; } Property Value Type Description SpringBoardServicesError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.SpringBoardServices.SpringBoardServicesErrorExtensions.html": {
    "href": "api/iMobileDevice.SpringBoardServices.SpringBoardServicesErrorExtensions.html",
    "title": "Class SpringBoardServicesErrorExtensions | imobiledevice-net API",
    "keywords": "Class SpringBoardServicesErrorExtensions Inheritance System.Object SpringBoardServicesErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.SpringBoardServices Assembly : iMobileDevice-net.dll Syntax public static class SpringBoardServicesErrorExtensions Methods | Improve this Doc View Source IsError(SpringBoardServicesError) Declaration public static bool IsError(this SpringBoardServicesError value) Parameters Type Name Description SpringBoardServicesError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(SpringBoardServicesError) Declaration public static void ThrowOnError(this SpringBoardServicesError value) Parameters Type Name Description SpringBoardServicesError value | Improve this Doc View Source ThrowOnError(SpringBoardServicesError, String) Declaration public static void ThrowOnError(this SpringBoardServicesError value, string message) Parameters Type Name Description SpringBoardServicesError value System.String message"
  },
  "api/iMobileDevice.SpringBoardServices.SpringBoardServicesError.html": {
    "href": "api/iMobileDevice.SpringBoardServices.SpringBoardServicesError.html",
    "title": "Enum SpringBoardServicesError | imobiledevice-net API",
    "keywords": "Enum SpringBoardServicesError Error Codes Namespace : iMobileDevice.SpringBoardServices Assembly : iMobileDevice-net.dll Syntax public enum SpringBoardServicesError Fields Name Description ConnFailed InvalidArg PlistError Success UnknownError Extension Methods SpringBoardServicesErrorExtensions.ThrowOnError() SpringBoardServicesErrorExtensions.ThrowOnError(String) SpringBoardServicesErrorExtensions.IsError()"
  },
  "api/iMobileDevice.Service.IServiceApi.html": {
    "href": "api/iMobileDevice.Service.IServiceApi.html",
    "title": "Interface IServiceApi | imobiledevice-net API",
    "keywords": "Interface IServiceApi Namespace : iMobileDevice.Service Assembly : iMobileDevice-net.dll Syntax public interface IServiceApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.Service . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source service_client_factory_start_service(iDeviceHandle, String, ref IntPtr, String, ref ConstructorFunc, ref Int32) Starts a new service on the specified device with given name and connects to it. Declaration ServiceError service_client_factory_start_service(iDeviceHandle device, string serviceName, ref IntPtr client, string label, ref ConstructorFunc constructorFunc, ref int errorCode) Parameters Type Name Description iDeviceHandle device The device to connect to. System.String serviceName System.IntPtr client Pointer that will point to a newly allocated service_client_t upon successful return. Must be freed using service_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. ConstructorFunc constructorFunc System.Int32 errorCode Returns Type Description ServiceError SERVICE_E_SUCCESS on success, or a SERVICE_E_* error code otherwise. | Improve this Doc View Source service_client_free(IntPtr) Frees a service instance. Declaration ServiceError service_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The service instance to free. Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG when client is invalid, or a SERVICE_E_UNKNOWN_ERROR when another error occured. | Improve this Doc View Source service_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out ServiceClientHandle) Creates a new service for the specified service descriptor. Declaration ServiceError service_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out ServiceClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. ServiceClientHandle client Pointer that will be set to a newly allocated service_client_t upon successful return. Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG when one of the arguments is invalid, or SERVICE_E_MUX_ERROR when connecting to the device failed. | Improve this Doc View Source service_disable_ssl(ServiceClientHandle) Disable SSL for the given service client. Declaration ServiceError service_disable_ssl(ServiceClientHandle client) Parameters Type Name Description ServiceClientHandle client The connected service client for that SSL should be disabled. Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG if client or client->connection is NULL, or SERVICE_E_UNKNOWN_ERROR otherwise. | Improve this Doc View Source service_enable_ssl(ServiceClientHandle) Enable SSL for the given service client. Declaration ServiceError service_enable_ssl(ServiceClientHandle client) Parameters Type Name Description ServiceClientHandle client The connected service client for that SSL should be enabled. Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG if client or client->connection is NULL, SERVICE_E_SSL_ERROR when SSL could not be enabled, or SERVICE_E_UNKNOWN_ERROR otherwise. | Improve this Doc View Source service_receive(ServiceClientHandle, Byte[], UInt32, ref UInt32) Receives data using the given service client. Declaration ServiceError service_receive(ServiceClientHandle client, byte[] data, uint size, ref uint received) Parameters Type Name Description ServiceClientHandle client The service client to use for receiving System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG when one or more parameters are invalid, SERVICE_E_MUX_ERROR when a communication error occurs, or SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source service_receive_with_timeout(ServiceClientHandle, Byte[], UInt32, ref UInt32, UInt32) Receives data using the given service client with specified timeout. Declaration ServiceError service_receive_with_timeout(ServiceClientHandle client, byte[] data, uint size, ref uint received, uint timeout) Parameters Type Name Description ServiceClientHandle client The service client to use for receiving System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) System.UInt32 timeout Maximum time in milliseconds to wait for data. Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG when one or more parameters are invalid, SERVICE_E_MUX_ERROR when a communication error occurs, or SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source service_send(ServiceClientHandle, Byte[], UInt32, ref UInt32) Sends data using the given service client. Declaration ServiceError service_send(ServiceClientHandle client, byte[] data, uint size, ref uint sent) Parameters Type Name Description ServiceClientHandle client The service client to use for sending. System.Byte [] data Data to send System.UInt32 size Size of the data to send System.UInt32 sent Number of bytes sent (can be NULL to ignore) Returns Type Description ServiceError SERVICE_E_SUCCESS on success, SERVICE_E_INVALID_ARG when one or more parameters are invalid, or SERVICE_E_UNKNOWN_ERROR when an unspecified error occurs."
  },
  "api/iMobileDevice.Service.ConstructorFunc.html": {
    "href": "api/iMobileDevice.Service.ConstructorFunc.html",
    "title": "Delegate ConstructorFunc | imobiledevice-net API",
    "keywords": "Delegate ConstructorFunc Namespace : iMobileDevice.Service Assembly : iMobileDevice-net.dll Syntax public delegate int ConstructorFunc(IntPtr param0, IntPtr param1, ref IntPtr param2); Parameters Type Name Description System.IntPtr param0 System.IntPtr param1 System.IntPtr param2 Returns Type Description System.Int32"
  },
  "api/iMobileDevice.PropertyListService.PropertyListServiceException.html": {
    "href": "api/iMobileDevice.PropertyListService.PropertyListServiceException.html",
    "title": "Class PropertyListServiceException | imobiledevice-net API",
    "keywords": "Class PropertyListServiceException Inheritance System.Object System.Exception PropertyListServiceException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.PropertyListService Assembly : iMobileDevice-net.dll Syntax [Serializable] public class PropertyListServiceException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source PropertyListServiceException() Initializes a new instance of the PropertyListServiceException class. Declaration public PropertyListServiceException() | Improve this Doc View Source PropertyListServiceException(PropertyListServiceError) Declaration public PropertyListServiceException(PropertyListServiceError error) Parameters Type Name Description PropertyListServiceError error | Improve this Doc View Source PropertyListServiceException(PropertyListServiceError, String) Declaration public PropertyListServiceException(PropertyListServiceError error, string message) Parameters Type Name Description PropertyListServiceError error System.String message | Improve this Doc View Source PropertyListServiceException(SerializationInfo, StreamingContext) Initializes a new instance of the PropertyListServiceException class with serialized data. Declaration protected PropertyListServiceException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source PropertyListServiceException(String) Initializes a new instance of the PropertyListServiceException class with a specified error message. Declaration public PropertyListServiceException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source PropertyListServiceException(String, Exception) Initializes a new instance of the PropertyListServiceException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public PropertyListServiceException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual PropertyListServiceError ErrorCode { get; } Property Value Type Description PropertyListServiceError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.PropertyListService.PropertyListServiceErrorExtensions.html": {
    "href": "api/iMobileDevice.PropertyListService.PropertyListServiceErrorExtensions.html",
    "title": "Class PropertyListServiceErrorExtensions | imobiledevice-net API",
    "keywords": "Class PropertyListServiceErrorExtensions Inheritance System.Object PropertyListServiceErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.PropertyListService Assembly : iMobileDevice-net.dll Syntax public static class PropertyListServiceErrorExtensions Methods | Improve this Doc View Source IsError(PropertyListServiceError) Declaration public static bool IsError(this PropertyListServiceError value) Parameters Type Name Description PropertyListServiceError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(PropertyListServiceError) Declaration public static void ThrowOnError(this PropertyListServiceError value) Parameters Type Name Description PropertyListServiceError value | Improve this Doc View Source ThrowOnError(PropertyListServiceError, String) Declaration public static void ThrowOnError(this PropertyListServiceError value, string message) Parameters Type Name Description PropertyListServiceError value System.String message"
  },
  "api/iMobileDevice.Plist.PlistDictIterHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.Plist.PlistDictIterHandleDelegateMarshaler.html",
    "title": "Class PlistDictIterHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class PlistDictIterHandleDelegateMarshaler Inheritance System.Object PlistDictIterHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Plist Assembly : iMobileDevice-net.dll Syntax public class PlistDictIterHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.Plist.PlistDictIterHandle.html": {
    "href": "api/iMobileDevice.Plist.PlistDictIterHandle.html",
    "title": "Class PlistDictIterHandle | imobiledevice-net API",
    "keywords": "Class PlistDictIterHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid PlistDictIterHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Plist Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class PlistDictIterHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source PlistDictIterHandle() Declaration protected PlistDictIterHandle() | Improve this Doc View Source PlistDictIterHandle(Boolean) Declaration protected PlistDictIterHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static PlistDictIterHandle Zero { get; } Property Value Type Description PlistDictIterHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static PlistDictIterHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description PlistDictIterHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static PlistDictIterHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description PlistDictIterHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.NotificationProxy.INotificationProxyApi.html": {
    "href": "api/iMobileDevice.NotificationProxy.INotificationProxyApi.html",
    "title": "Interface INotificationProxyApi | imobiledevice-net API",
    "keywords": "Interface INotificationProxyApi Namespace : iMobileDevice.NotificationProxy Assembly : iMobileDevice-net.dll Syntax public interface INotificationProxyApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.NotificationProxy . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source np_client_free(IntPtr) Disconnects a notification_proxy client from the device and frees up the notification_proxy client data. Declaration NotificationProxyError np_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The notification_proxy client to disconnect and free. Returns Type Description NotificationProxyError NP_E_SUCCESS on success, or NP_E_INVALID_ARG when client is NULL. | Improve this Doc View Source np_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out NotificationProxyClientHandle) Connects to the notification_proxy on the specified device. Declaration NotificationProxyError np_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out NotificationProxyClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. NotificationProxyClientHandle client Pointer that will be set to a newly allocated np_client_t upon successful return. Returns Type Description NotificationProxyError NP_E_SUCCESS on success, NP_E_INVALID_ARG when device is NULL, or NP_E_CONN_FAILED when the connection to the device could not be established. | Improve this Doc View Source np_client_start_service(iDeviceHandle, out NotificationProxyClientHandle, String) Starts a new notification proxy service on the specified device and connects to it. Declaration NotificationProxyError np_client_start_service(iDeviceHandle device, out NotificationProxyClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. NotificationProxyClientHandle client Pointer that will point to a newly allocated np_client_t upon successful return. Must be freed using np_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description NotificationProxyError NP_E_SUCCESS on success, or an NP_E_* error code otherwise. | Improve this Doc View Source np_observe_notification(NotificationProxyClientHandle, String) Tells the device to send a notification on the specified event. Declaration NotificationProxyError np_observe_notification(NotificationProxyClientHandle client, string notification) Parameters Type Name Description NotificationProxyClientHandle client The client to send to System.String notification The notifications that should be observed. Returns Type Description NotificationProxyError NP_E_SUCCESS on success, NP_E_INVALID_ARG when client or notification are NULL, or an error returned by np_plist_send. | Improve this Doc View Source np_observe_notifications(NotificationProxyClientHandle, out String) Tells the device to send a notification on specified events. Declaration NotificationProxyError np_observe_notifications(NotificationProxyClientHandle client, out string notificationSpec) Parameters Type Name Description NotificationProxyClientHandle client The client to send to System.String notificationSpec Returns Type Description NotificationProxyError NP_E_SUCCESS on success, NP_E_INVALID_ARG when client is null, or an error returned by np_observe_notification. | Improve this Doc View Source np_post_notification(NotificationProxyClientHandle, String) Sends a notification to the device's notification_proxy. Declaration NotificationProxyError np_post_notification(NotificationProxyClientHandle client, string notification) Parameters Type Name Description NotificationProxyClientHandle client The client to send to System.String notification The notification message to send Returns Type Description NotificationProxyError NP_E_SUCCESS on success, or an error returned by np_plist_send | Improve this Doc View Source np_set_notify_callback(NotificationProxyClientHandle, NotificationProxyNotifyCallBack, IntPtr) This function allows an application to define a callback function that will be called when a notification has been received. It will start a thread that polls for notifications and calls the callback function if a notification has been received. In case of an error condition when polling for notifications - e.g. device disconnect - the thread will call the callback function with an empty notification \"\" and terminate itself. Declaration NotificationProxyError np_set_notify_callback(NotificationProxyClientHandle client, NotificationProxyNotifyCallBack notifyCallBack, IntPtr userdata) Parameters Type Name Description NotificationProxyClientHandle client the NP client NotificationProxyNotifyCallBack notifyCallBack System.IntPtr userdata Returns Type Description NotificationProxyError NP_E_SUCCESS when the callback was successfully registered, NP_E_INVALID_ARG when client is NULL, or NP_E_UNKNOWN_ERROR when the callback thread could no be created. Remarks Only one callback function can be registered at the same time; any previously set callback function will be removed automatically."
  },
  "api/iMobileDevice.NativeStringMarshaler.html": {
    "href": "api/iMobileDevice.NativeStringMarshaler.html",
    "title": "Class NativeStringMarshaler | imobiledevice-net API",
    "keywords": "Class NativeStringMarshaler Inheritance System.Object NativeStringMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice Assembly : iMobileDevice-net.dll Syntax public class NativeStringMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object ManagedObj) Parameters Type Name Description System.Object ManagedObj | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object ManagedObj) Parameters Type Name Description System.Object ManagedObj Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.MobileSync.IMobileSyncApi.html": {
    "href": "api/iMobileDevice.MobileSync.IMobileSyncApi.html",
    "title": "Interface IMobileSyncApi | imobiledevice-net API",
    "keywords": "Interface IMobileSyncApi Namespace : iMobileDevice.MobileSync Assembly : iMobileDevice-net.dll Syntax public interface IMobileSyncApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.MobileSync . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source mobilesync_acknowledge_changes_from_device(MobileSyncClientHandle) Acknowledges to the device that the changes have been merged on the computer MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid Declaration MobileSyncError mobilesync_acknowledge_changes_from_device(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_actions_add(PlistHandle) Add one or more new key:value pairs to the given actions plist. Declaration void mobilesync_actions_add(PlistHandle actions) Parameters Type Name Description PlistHandle actions The actions to modify. Remarks The known keys so far are \"SyncDeviceLinkEntityNamesKey\" which expects an array of entity names, followed by a count paramter as well as \"SyncDeviceLinkAllRecordsOfPulledEntityTypeSentKey\" which expects an integer to use as a boolean value indicating that the device should link submitted changes and report remapped identifiers. | Improve this Doc View Source mobilesync_actions_free(PlistHandle) Free actions plist. Declaration void mobilesync_actions_free(PlistHandle actions) Parameters Type Name Description PlistHandle actions The actions plist to free. Does nothing if NULL is passed. | Improve this Doc View Source mobilesync_actions_new() Create a new actions plist to use in mobilesync_send_changes(). Declaration PlistHandle mobilesync_actions_new() Returns Type Description PlistHandle A new plist_t of type PLIST_DICT. | Improve this Doc View Source mobilesync_anchors_free(IntPtr) Free memory used by anchors. MOBILESYNC_E_SUCCESS on success Declaration MobileSyncError mobilesync_anchors_free(IntPtr anchors) Parameters Type Name Description System.IntPtr anchors The anchors to free. Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_anchors_new(String, String, out MobileSyncAnchorsHandle) Allocates memory for a new anchors struct initialized with the passed anchors. MOBILESYNC_E_SUCCESS on success Declaration MobileSyncError mobilesync_anchors_new(string deviceAnchor, string computerAnchor, out MobileSyncAnchorsHandle anchor) Parameters Type Name Description System.String deviceAnchor System.String computerAnchor MobileSyncAnchorsHandle anchor Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_cancel(MobileSyncClientHandle, String) Cancels a running synchronization session with a device at any time. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid Declaration MobileSyncError mobilesync_cancel(MobileSyncClientHandle client, string reason) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client System.String reason The reason to supply to the device for cancelling Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_clear_all_records_on_device(MobileSyncClientHandle) Requests the device to delete all records of the current data class MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_PLIST_ERROR if the received plist is not of valid form Declaration MobileSyncError mobilesync_clear_all_records_on_device(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError Remarks The operation must be called after starting synchronization. | Improve this Doc View Source mobilesync_client_free(IntPtr) Disconnects a mobilesync client from the device and frees up the mobilesync client data. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if is NULL. Declaration MobileSyncError mobilesync_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The mobilesync client to disconnect and free. Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MobileSyncClientHandle) Connects to the mobilesync service on the specified device. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one or more parameters are invalid DEVICE_LINK_SERVICE_E_BAD_VERSION if the mobilesync version on the device is newer. Declaration MobileSyncError mobilesync_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MobileSyncClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MobileSyncClientHandle client Pointer that will be set to a newly allocated mobilesync_client_t upon successful return. Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_client_start_service(iDeviceHandle, out MobileSyncClientHandle, String) Starts a new mobilesync service on the specified device and connects to it. Declaration MobileSyncError mobilesync_client_start_service(iDeviceHandle device, out MobileSyncClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MobileSyncClientHandle client Pointer that will point to a newly allocated mobilesync_client_t upon successful return. Must be freed using mobilesync_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MobileSyncError MOBILESYNC_E_SUCCESS on success, or an MOBILESYNC_E_* error code otherwise. | Improve this Doc View Source mobilesync_finish(MobileSyncClientHandle) Finish a synchronization session of a data class on the device. A session must have previously been started using mobilesync_start(). MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_PLIST_ERROR if the received plist is not of valid form Declaration MobileSyncError mobilesync_finish(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_get_all_records_from_device(MobileSyncClientHandle) Requests to receive all records of the currently set data class from the device. The actually changes are retrieved using mobilesync_receive_changes() after this request has been successful. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid Declaration MobileSyncError mobilesync_get_all_records_from_device(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_get_changes_from_device(MobileSyncClientHandle) Requests to receive only changed records of the currently set data class from the device. The actually changes are retrieved using mobilesync_receive_changes() after this request has been successful. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid Declaration MobileSyncError mobilesync_get_changes_from_device(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_ready_to_send_changes_from_computer(MobileSyncClientHandle) Verifies if the device is ready to receive changes from the computer. This call changes the synchronization direction so that mobilesync_send_changes() can be used to send changes to the device. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_PLIST_ERROR if the received plist is not of valid form MOBILESYNC_E_WRONG_DIRECTION if the current sync direction does not permit this call MOBILESYNC_E_CANCELLED if the device explicitly cancelled the session MOBILESYNC_E_NOT_READY if the device is not ready to start receiving any changes Declaration MobileSyncError mobilesync_ready_to_send_changes_from_computer(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_receive(MobileSyncClientHandle, out PlistHandle) Polls the device for mobilesync data. Declaration MobileSyncError mobilesync_receive(MobileSyncClientHandle client, out PlistHandle plist) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client PlistHandle plist A pointer to the location where the plist should be stored Returns Type Description MobileSyncError an error code | Improve this Doc View Source mobilesync_receive_changes(MobileSyncClientHandle, out PlistHandle, ref Char, out PlistHandle) Receives changed entitites of the currently set data class from the device MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_CANCELLED if the device explicitly cancelled the session Declaration MobileSyncError mobilesync_receive_changes(MobileSyncClientHandle client, out PlistHandle entities, ref char isLastRecord, out PlistHandle actions) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client PlistHandle entities A pointer to store the changed entity records as a PLIST_DICT System.Char isLastRecord PlistHandle actions A pointer to additional flags the device is sending or NULL to ignore Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_remap_identifiers(MobileSyncClientHandle, out PlistHandle) Receives any remapped identifiers reported after the device merged submitted changes. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_PLIST_ERROR if the received plist is not of valid form MOBILESYNC_E_WRONG_DIRECTION if the current sync direction does not permit this call MOBILESYNC_E_CANCELLED if the device explicitly cancelled the session Declaration MobileSyncError mobilesync_remap_identifiers(MobileSyncClientHandle client, out PlistHandle mapping) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client PlistHandle mapping A pointer to an array plist containing a dict of identifier remappings Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_send(MobileSyncClientHandle, PlistHandle) Sends mobilesync data to the device Declaration MobileSyncError mobilesync_send(MobileSyncClientHandle client, PlistHandle plist) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client PlistHandle plist The location of the plist to send Returns Type Description MobileSyncError an error code Remarks This function is low-level and should only be used if you need to send a new type of message. | Improve this Doc View Source mobilesync_send_changes(MobileSyncClientHandle, PlistHandle, Char, PlistHandle) Sends changed entities of the currently set data class to the device MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid, MOBILESYNC_E_WRONG_DIRECTION if the current sync direction does not permit this call Declaration MobileSyncError mobilesync_send_changes(MobileSyncClientHandle client, PlistHandle entities, char isLastRecord, PlistHandle actions) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client PlistHandle entities The changed entity records as a PLIST_DICT System.Char isLastRecord PlistHandle actions Additional actions for the device created with mobilesync_actions_new() or NULL if no actions should be passed Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_start(MobileSyncClientHandle, Byte[], MobileSyncAnchorsHandle, UInt64, ref MobileSyncSyncType, ref UInt64, out String) Requests starting synchronization of a data class with the device MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_PLIST_ERROR if the received plist is not of valid form MOBILESYNC_E_SYNC_REFUSED if the device refused to sync MOBILESYNC_E_CANCELLED if the device explicitly cancelled the sync request Declaration MobileSyncError mobilesync_start(MobileSyncClientHandle client, byte[] dataClass, MobileSyncAnchorsHandle anchors, ulong computerDataClassVersion, ref MobileSyncSyncType syncType, ref ulong deviceDataClassVersion, out string errorDescription) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client System.Byte [] dataClass MobileSyncAnchorsHandle anchors The anchors required to exchange with the device. The anchors allow the device to tell if the synchronization information on the computer and device are consistent to determine what sync type is required. System.UInt64 computerDataClassVersion MobileSyncSyncType syncType System.UInt64 deviceDataClassVersion System.String errorDescription Returns Type Description MobileSyncError"
  },
  "api/iMobileDevice.MobileImageMounter.html": {
    "href": "api/iMobileDevice.MobileImageMounter.html",
    "title": "Namespace iMobileDevice.MobileImageMounter | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.MobileImageMounter Classes MobileImageMounterApi MobileImageMounterClientHandle MobileImageMounterClientHandleDelegateMarshaler MobileImageMounterErrorExtensions MobileImageMounterException MobileImageMounterNativeMethods Interfaces IMobileImageMounterApi Enums MobileImageMounterError Error Codes Delegates MobileImageMounterUploadCallBack"
  },
  "api/iMobileDevice.MobileBackup2.MobileBackup2ClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.MobileBackup2.MobileBackup2ClientHandleDelegateMarshaler.html",
    "title": "Class MobileBackup2ClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class MobileBackup2ClientHandleDelegateMarshaler Inheritance System.Object MobileBackup2ClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileBackup2 Assembly : iMobileDevice-net.dll Syntax public class MobileBackup2ClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.MobileBackup2.MobileBackup2ClientHandle.html": {
    "href": "api/iMobileDevice.MobileBackup2.MobileBackup2ClientHandle.html",
    "title": "Class MobileBackup2ClientHandle | imobiledevice-net API",
    "keywords": "Class MobileBackup2ClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid MobileBackup2ClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileBackup2 Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class MobileBackup2ClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source MobileBackup2ClientHandle() Declaration protected MobileBackup2ClientHandle() | Improve this Doc View Source MobileBackup2ClientHandle(Boolean) Declaration protected MobileBackup2ClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static MobileBackup2ClientHandle Zero { get; } Property Value Type Description MobileBackup2ClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static MobileBackup2ClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description MobileBackup2ClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static MobileBackup2ClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description MobileBackup2ClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.Mobileactivation.html": {
    "href": "api/iMobileDevice.Mobileactivation.html",
    "title": "Namespace iMobileDevice.Mobileactivation | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.Mobileactivation Classes MobileactivationApi MobileactivationClientHandle MobileactivationClientHandleDelegateMarshaler MobileactivationErrorExtensions MobileactivationException MobileactivationNativeMethods Interfaces IMobileactivationApi Enums MobileactivationError Error Codes"
  },
  "api/iMobileDevice.Mobileactivation.MobileactivationNativeMethods.html": {
    "href": "api/iMobileDevice.Mobileactivation.MobileactivationNativeMethods.html",
    "title": "Class MobileactivationNativeMethods | imobiledevice-net API",
    "keywords": "Class MobileactivationNativeMethods Inheritance System.Object MobileactivationNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Mobileactivation Assembly : iMobileDevice-net.dll Syntax public class MobileactivationNativeMethods Methods mobileactivation_activate(MobileactivationClientHandle, PlistHandle) Activates the device with the given activation record. The activation record plist dictionary must be obtained using the activation protocol requesting from Apple's https webservice. Declaration public static MobileactivationError mobileactivation_activate(MobileactivationClientHandle client, PlistHandle activationRecord) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client PlistHandle activationRecord Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. mobileactivation_activate_with_session(MobileactivationClientHandle, PlistHandle) Activates the device with the given activation record in 'session' mode. The activation record plist dictionary must be obtained using the activation protocol requesting from Apple's https webservice. Declaration public static MobileactivationError mobileactivation_activate_with_session(MobileactivationClientHandle client, PlistHandle activationRecord) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client PlistHandle activationRecord Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. mobileactivation_client_free(IntPtr) Disconnects a mobileactivation client from the device and frees up the mobileactivation client data. Declaration public static MobileactivationError mobileactivation_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The mobileactivation client to disconnect and free. Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, MOBILEACTIVATION_E_INVALID_ARG when one of client or client->parent is invalid, or MOBILEACTIVATION_E_UNKNOWN_ERROR when the was an error freeing the parent property_list_service client. mobileactivation_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MobileactivationClientHandle) Connects to the mobileactivation service on the specified device. Declaration public static MobileactivationError mobileactivation_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MobileactivationClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MobileactivationClientHandle client Reference that will point to a newly allocated mobileactivation_client_t upon successful return. Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, MOBILEACTIVATION_E_INVALID_ARG when one of the parameters is invalid, or MOBILEACTIVATION_E_MUX_ERROR when the connection failed. mobileactivation_client_start_service(iDeviceHandle, out MobileactivationClientHandle, String) Starts a new mobileactivation service on the specified device and connects to it. Declaration public static MobileactivationError mobileactivation_client_start_service(iDeviceHandle device, out MobileactivationClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MobileactivationClientHandle client Pointer that will point to a newly allocated mobileactivation_client_t upon successful return. Must be freed using mobileactivation_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. mobileactivation_create_activation_info(MobileactivationClientHandle, out PlistHandle) Retrieves the activation info required for device activation. Declaration public static MobileactivationError mobileactivation_create_activation_info(MobileactivationClientHandle client, out PlistHandle info) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client PlistHandle info Pointer to a plist_t variable that will be set to the activation info created by the mobileactivation service. The consumer is responsible for freeing the returned object using plist_free(). Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. mobileactivation_create_activation_info_with_session(MobileactivationClientHandle, PlistHandle, out PlistHandle) Retrieves the activation info required for device activation in 'session' mode. This function expects a handshake result retrieved from https://albert.apple.com/deviceservies/drmHandshake with a blob provided by mobileactivation_create_activation_session_info(). Declaration public static MobileactivationError mobileactivation_create_activation_info_with_session(MobileactivationClientHandle client, PlistHandle handshakeResult, out PlistHandle info) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client PlistHandle handshakeResult PlistHandle info Pointer to a plist_t variable that will be set to the activation info created by the mobileactivation service. The consumer is responsible for freeing the returned object using plist_free(). Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. mobileactivation_create_activation_session_info(MobileactivationClientHandle, out PlistHandle) Retrieves a session blob required for 'drmHandshake' via albert.apple.com. Declaration public static MobileactivationError mobileactivation_create_activation_session_info(MobileactivationClientHandle client, out PlistHandle blob) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client PlistHandle blob Pointer to a plist_t variable that will be set to the session blob created by the mobielactivation service. The consumer is responsible for freeing the returned object using plist_free(). Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. mobileactivation_deactivate(MobileactivationClientHandle) Deactivates the device. Declaration public static MobileactivationError mobileactivation_deactivate(MobileactivationClientHandle client) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client Returns Type Description MobileactivationError mobileactivation_get_activation_state(MobileactivationClientHandle, out PlistHandle) Retrieves the device's activation state. Declaration public static MobileactivationError mobileactivation_get_activation_state(MobileactivationClientHandle client, out PlistHandle state) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client. PlistHandle state Pointer to a plist_t variable that will be set to the activation state reported by the mobileactivation service. The consumer is responsible for freeing the returned object using plist_free(). Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise."
  },
  "api/iMobileDevice.Misagent.MisagentClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.Misagent.MisagentClientHandleDelegateMarshaler.html",
    "title": "Class MisagentClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class MisagentClientHandleDelegateMarshaler Inheritance System.Object MisagentClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Misagent Assembly : iMobileDevice-net.dll Syntax public class MisagentClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.Misagent.MisagentClientHandle.html": {
    "href": "api/iMobileDevice.Misagent.MisagentClientHandle.html",
    "title": "Class MisagentClientHandle | imobiledevice-net API",
    "keywords": "Class MisagentClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid MisagentClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Misagent Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class MisagentClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source MisagentClientHandle() Declaration protected MisagentClientHandle() | Improve this Doc View Source MisagentClientHandle(Boolean) Declaration protected MisagentClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static MisagentClientHandle Zero { get; } Property Value Type Description MisagentClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static MisagentClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description MisagentClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static MisagentClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description MisagentClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.Lockdown.LockdownMarshaler.html": {
    "href": "api/iMobileDevice.Lockdown.LockdownMarshaler.html",
    "title": "Class LockdownMarshaler | imobiledevice-net API",
    "keywords": "Class LockdownMarshaler Inheritance System.Object NativeStringArrayMarshaler LockdownMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members NativeStringArrayMarshaler.CleanUpManagedData(Object) NativeStringArrayMarshaler.GetNativeDataSize() NativeStringArrayMarshaler.MarshalManagedToNative(Object) NativeStringArrayMarshaler.MarshalNativeToManaged(IntPtr) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Lockdown Assembly : iMobileDevice-net.dll Syntax public class LockdownMarshaler : NativeStringArrayMarshaler, ICustomMarshaler Methods | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public override void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Overrides NativeStringArrayMarshaler.CleanUpNativeData(IntPtr) | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.iDevice.iDeviceException.html": {
    "href": "api/iMobileDevice.iDevice.iDeviceException.html",
    "title": "Class iDeviceException | imobiledevice-net API",
    "keywords": "Class iDeviceException Inheritance System.Object System.Exception iDeviceException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.iDevice Assembly : iMobileDevice-net.dll Syntax [Serializable] public class iDeviceException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source iDeviceException() Initializes a new instance of the iDeviceException class. Declaration public iDeviceException() | Improve this Doc View Source iDeviceException(iDeviceError) Declaration public iDeviceException(iDeviceError error) Parameters Type Name Description iDeviceError error | Improve this Doc View Source iDeviceException(iDeviceError, String) Declaration public iDeviceException(iDeviceError error, string message) Parameters Type Name Description iDeviceError error System.String message | Improve this Doc View Source iDeviceException(SerializationInfo, StreamingContext) Initializes a new instance of the iDeviceException class with serialized data. Declaration protected iDeviceException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source iDeviceException(String) Initializes a new instance of the iDeviceException class with a specified error message. Declaration public iDeviceException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source iDeviceException(String, Exception) Initializes a new instance of the iDeviceException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public iDeviceException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual iDeviceError ErrorCode { get; } Property Value Type Description iDeviceError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.HouseArrest.HouseArrestNativeMethods.html": {
    "href": "api/iMobileDevice.HouseArrest.HouseArrestNativeMethods.html",
    "title": "Class HouseArrestNativeMethods | imobiledevice-net API",
    "keywords": "Class HouseArrestNativeMethods Inheritance System.Object HouseArrestNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.HouseArrest Assembly : iMobileDevice-net.dll Syntax public class HouseArrestNativeMethods Methods afc_client_new_from_house_arrest_client(HouseArrestClientHandle, out AfcClientHandle) Creates an AFC client using the given house_arrest client's connection allowing file access to a specific application directory requested by functions like house_arrest_request_vendor_documents(). Declaration public static AfcError afc_client_new_from_house_arrest_client(HouseArrestClientHandle client, out AfcClientHandle afcClient) Parameters Type Name Description HouseArrestClientHandle client The house_arrest client to use. AfcClientHandle afcClient Returns Type Description AfcError AFC_E_SUCCESS if the afc client was successfully created, AFC_E_INVALID_ARG if client is invalid or was already used to create an afc client, or an AFC_E_* error code returned by afc_client_new_with_service_client(). Remarks After calling this function the house_arrest client will go in an AFC mode that will only allow calling house_arrest_client_free(). Only call house_arrest_client_free() if all AFC operations have completed since it will close the connection. house_arrest_client_free(IntPtr) Disconnects an house_arrest client from the device and frees up the house_arrest client data. Declaration public static HouseArrestError house_arrest_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The house_arrest client to disconnect and free. Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS on success, HOUSE_ARREST_E_INVALID_ARG when client is NULL, or an HOUSE_ARREST_E_* error code otherwise. Remarks After using afc_client_new_from_house_arrest_client(), make sure you call afc_client_free() before calling this function to ensure a proper cleanup. Do not call this function if you still need to perform AFC operations since it will close the connection. house_arrest_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out HouseArrestClientHandle) Connects to the house_arrest service on the specified device. Declaration public static HouseArrestError house_arrest_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out HouseArrestClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. HouseArrestClientHandle client Pointer that will point to a newly allocated housearrest_client_t upon successful return. Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS on success, HOUSE_ARREST_E_INVALID_ARG when client is NULL, or an HOUSE_ARREST_E_* error code otherwise. house_arrest_client_start_service(iDeviceHandle, out HouseArrestClientHandle, String) Starts a new house_arrest service on the specified device and connects to it. Declaration public static HouseArrestError house_arrest_client_start_service(iDeviceHandle device, out HouseArrestClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. HouseArrestClientHandle client Pointer that will point to a newly allocated house_arrest_client_t upon successful return. Must be freed using house_arrest_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS on success, or an HOUSE_ARREST_E_* error code otherwise. house_arrest_get_result(HouseArrestClientHandle, out PlistHandle) Retrieves the result of a previously sent house_arrest_request_* request. Declaration public static HouseArrestError house_arrest_get_result(HouseArrestClientHandle client, out PlistHandle dict) Parameters Type Name Description HouseArrestClientHandle client The house_arrest client to use PlistHandle dict Pointer that will be set to a plist containing the result to the last performed operation. It holds a key 'Status' with the value 'Complete' on success or a key 'Error' with an error description as value. The caller is responsible for freeing the returned plist. Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS if a result plist was retrieved, HOUSE_ARREST_E_INVALID_ARG if client is invalid, HOUSE_ARREST_E_INVALID_MODE if the client is not in the correct mode, or HOUSE_ARREST_E_CONN_FAILED if a connection error occured. house_arrest_send_command(HouseArrestClientHandle, String, String) Send a command to the connected house_arrest service. Calls house_arrest_send_request() internally. Declaration public static HouseArrestError house_arrest_send_command(HouseArrestClientHandle client, string command, string appid) Parameters Type Name Description HouseArrestClientHandle client The house_arrest client to use. System.String command The command to send. Currently, only VendContainer and VendDocuments are known. System.String appid The application identifier to pass along with the . Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS if the command was successfully sent, HOUSE_ARREST_E_INVALID_ARG if client, command, or appid is invalid, HOUSE_ARREST_E_INVALID_MODE if the client is not in the correct mode, or HOUSE_ARREST_E_CONN_FAILED if a connection error occured. Remarks If this function returns HOUSE_ARREST_E_SUCCESS it does not mean that the command was successful. To check for success or failure you need to call house_arrest_get_result(). house_arrest_send_request(HouseArrestClientHandle, PlistHandle) Sends a generic request to the connected house_arrest service. Declaration public static HouseArrestError house_arrest_send_request(HouseArrestClientHandle client, PlistHandle dict) Parameters Type Name Description HouseArrestClientHandle client The house_arrest client to use. PlistHandle dict The request to send as a plist of type PLIST_DICT. Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS if the request was successfully sent, HOUSE_ARREST_E_INVALID_ARG if client or dict is invalid, HOUSE_ARREST_E_PLIST_ERROR if dict is not a plist of type PLIST_DICT, HOUSE_ARREST_E_INVALID_MODE if the client is not in the correct mode, or HOUSE_ARREST_E_CONN_FAILED if a connection error occured. Remarks If this function returns HOUSE_ARREST_E_SUCCESS it does not mean that the request was successful. To check for success or failure you need to call house_arrest_get_result()."
  },
  "api/iMobileDevice.HeartBeat.HeartBeatNativeMethods.html": {
    "href": "api/iMobileDevice.HeartBeat.HeartBeatNativeMethods.html",
    "title": "Class HeartBeatNativeMethods | imobiledevice-net API",
    "keywords": "Class HeartBeatNativeMethods Inheritance System.Object HeartBeatNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.HeartBeat Assembly : iMobileDevice-net.dll Syntax public class HeartBeatNativeMethods Methods heartbeat_client_free(IntPtr) Disconnects a heartbeat client from the device and frees up the heartbeat client data. Declaration public static HeartBeatError heartbeat_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The heartbeat client to disconnect and free. Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, HEARTBEAT_E_INVALID_ARG when client is NULL, or an HEARTBEAT_E_* error code otherwise. heartbeat_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out HeartBeatClientHandle) Connects to the heartbeat service on the specified device. Declaration public static HeartBeatError heartbeat_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out HeartBeatClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. HeartBeatClientHandle client Pointer that will point to a newly allocated heartbeat_client_t upon successful return. Must be freed using heartbeat_client_free() after use. Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, HEARTBEAT_E_INVALID_ARG when client is NULL, or an HEARTBEAT_E_* error code otherwise. heartbeat_client_start_service(iDeviceHandle, out HeartBeatClientHandle, String) Starts a new heartbeat service on the specified device and connects to it. Declaration public static HeartBeatError heartbeat_client_start_service(iDeviceHandle device, out HeartBeatClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. HeartBeatClientHandle client Pointer that will point to a newly allocated heartbeat_client_t upon successful return. Must be freed using heartbeat_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, or an HEARTBEAT_E_* error code otherwise. heartbeat_receive(HeartBeatClientHandle, out PlistHandle) Receives a plist from the service. Declaration public static HeartBeatError heartbeat_receive(HeartBeatClientHandle client, out PlistHandle plist) Parameters Type Name Description HeartBeatClientHandle client The heartbeat client PlistHandle plist The plist to store the received data Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, HEARTBEAT_E_INVALID_ARG when client or plist is NULL heartbeat_receive_with_timeout(HeartBeatClientHandle, out PlistHandle, UInt32) Receives a plist using the given heartbeat client. Declaration public static HeartBeatError heartbeat_receive_with_timeout(HeartBeatClientHandle client, out PlistHandle plist, uint timeoutMs) Parameters Type Name Description HeartBeatClientHandle client The heartbeat client to use for receiving PlistHandle plist pointer to a plist_t that will point to the received plist upon successful return System.UInt32 timeoutMs Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, HEARTBEAT_E_INVALID_ARG when client or *plist is NULL, HEARTBEAT_E_PLIST_ERROR when the received data cannot be converted to a plist, HEARTBEAT_E_MUX_ERROR when a communication error occurs, or HEARTBEAT_E_UNKNOWN_ERROR when an unspecified error occurs. heartbeat_send(HeartBeatClientHandle, PlistHandle) Sends a plist to the service. Declaration public static HeartBeatError heartbeat_send(HeartBeatClientHandle client, PlistHandle plist) Parameters Type Name Description HeartBeatClientHandle client The heartbeat client PlistHandle plist The plist to send Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, HEARTBEAT_E_INVALID_ARG when client or plist is NULL"
  },
  "api/iMobileDevice.FileRelay.IFileRelayApi.html": {
    "href": "api/iMobileDevice.FileRelay.IFileRelayApi.html",
    "title": "Interface IFileRelayApi | imobiledevice-net API",
    "keywords": "Interface IFileRelayApi Namespace : iMobileDevice.FileRelay Assembly : iMobileDevice-net.dll Syntax public interface IFileRelayApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.FileRelay . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source file_relay_client_free(IntPtr) Disconnects a file_relay client from the device and frees up the file_relay client data. Declaration FileRelayError file_relay_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The file_relay client to disconnect and free. Returns Type Description FileRelayError FILE_RELAY_E_SUCCESS on success, FILE_RELAY_E_INVALID_ARG when one of client or client->parent is invalid, or FILE_RELAY_E_UNKNOWN_ERROR when the was an error freeing the parent property_list_service client. | Improve this Doc View Source file_relay_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out FileRelayClientHandle) Connects to the file_relay service on the specified device. Declaration FileRelayError file_relay_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out FileRelayClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. FileRelayClientHandle client Reference that will point to a newly allocated file_relay_client_t upon successful return. Returns Type Description FileRelayError FILE_RELAY_E_SUCCESS on success, FILE_RELAY_E_INVALID_ARG when one of the parameters is invalid, or FILE_RELAY_E_MUX_ERROR when the connection failed. | Improve this Doc View Source file_relay_client_start_service(iDeviceHandle, out FileRelayClientHandle, String) Starts a new file_relay service on the specified device and connects to it. Declaration FileRelayError file_relay_client_start_service(iDeviceHandle device, out FileRelayClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. FileRelayClientHandle client Pointer that will point to a newly allocated file_relay_client_t upon successful return. Must be freed using file_relay_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description FileRelayError FILE_RELAY_E_SUCCESS on success, or an FILE_RELAY_E_* error code otherwise. | Improve this Doc View Source file_relay_request_sources(FileRelayClientHandle, out String, out iDeviceConnectionHandle) Request data for the given sources. Declaration FileRelayError file_relay_request_sources(FileRelayClientHandle client, out string sources, out iDeviceConnectionHandle connection) Parameters Type Name Description FileRelayClientHandle client The connected file_relay client. System.String sources A NULL-terminated list of sources to retrieve. Valid sources are: AppleSupport Network VPN WiFi UserDatabases CrashReporter tmp SystemConfiguration iDeviceConnectionHandle connection The connection that has to be used for receiving the data using idevice_connection_receive(). The connection will be closed automatically by the device, but use file_relay_client_free() to clean up properly. Returns Type Description FileRelayError FILE_RELAY_E_SUCCESS on succes, FILE_RELAY_E_INVALID_ARG when one or more parameters are invalid, FILE_RELAY_E_MUX_ERROR if a communication error occurs, FILE_RELAY_E_PLIST_ERROR when the received result is NULL or is not a valid plist, FILE_RELAY_E_INVALID_SOURCE if one or more sources are invalid, FILE_RELAY_E_STAGING_EMPTY if no data is available for the given sources, or FILE_RELAY_E_UNKNOWN_ERROR otherwise. Remarks WARNING: Don't call this function without reading the data afterwards. A directory mobile_file_relay.XXXX used for creating the archive will remain in the /tmp directory otherwise. | Improve this Doc View Source file_relay_request_sources_timeout(FileRelayClientHandle, out String, out iDeviceConnectionHandle, UInt32) Request data for the given sources. Calls file_relay_request_sources_timeout() with a timeout of 60000 milliseconds (60 seconds). Declaration FileRelayError file_relay_request_sources_timeout(FileRelayClientHandle client, out string sources, out iDeviceConnectionHandle connection, uint timeout) Parameters Type Name Description FileRelayClientHandle client The connected file_relay client. System.String sources A NULL-terminated list of sources to retrieve. Valid sources are: AppleSupport Network VPN WiFi UserDatabases CrashReporter tmp SystemConfiguration iDeviceConnectionHandle connection The connection that has to be used for receiving the data using idevice_connection_receive(). The connection will be closed automatically by the device, but use file_relay_client_free() to clean up properly. System.UInt32 timeout Returns Type Description FileRelayError FILE_RELAY_E_SUCCESS on succes, FILE_RELAY_E_INVALID_ARG when one or more parameters are invalid, FILE_RELAY_E_MUX_ERROR if a communication error occurs, FILE_RELAY_E_PLIST_ERROR when the received result is NULL or is not a valid plist, FILE_RELAY_E_INVALID_SOURCE if one or more sources are invalid, FILE_RELAY_E_STAGING_EMPTY if no data is available for the given sources, or FILE_RELAY_E_UNKNOWN_ERROR otherwise. Remarks WARNING: Don't call this function without reading the data afterwards. A directory mobile_file_relay.XXXX used for creating the archive will remain in the /tmp directory otherwise."
  },
  "api/iMobileDevice.DiagnosticsRelay.DiagnosticsRelayError.html": {
    "href": "api/iMobileDevice.DiagnosticsRelay.DiagnosticsRelayError.html",
    "title": "Enum DiagnosticsRelayError | imobiledevice-net API",
    "keywords": "Enum DiagnosticsRelayError Error Codes Namespace : iMobileDevice.DiagnosticsRelay Assembly : iMobileDevice-net.dll Syntax public enum DiagnosticsRelayError Fields Name Description InvalidArg MuxError PlistError Success UnknownError UnknownRequest Extension Methods DiagnosticsRelayErrorExtensions.ThrowOnError() DiagnosticsRelayErrorExtensions.ThrowOnError(String) DiagnosticsRelayErrorExtensions.IsError()"
  },
  "api/iMobileDevice.DebugServer.DebugServerNativeMethods.html": {
    "href": "api/iMobileDevice.DebugServer.DebugServerNativeMethods.html",
    "title": "Class DebugServerNativeMethods | imobiledevice-net API",
    "keywords": "Class DebugServerNativeMethods Inheritance System.Object DebugServerNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.DebugServer Assembly : iMobileDevice-net.dll Syntax public class DebugServerNativeMethods Methods debugserver_client_free(IntPtr) Disconnects a debugserver client from the device and frees up the debugserver client data. Declaration public static DebugServerError debugserver_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The debugserver client to disconnect and free. Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client is NULL, or an DEBUGSERVER_E_* error code otherwise. debugserver_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out DebugServerClientHandle) Connects to the debugserver service on the specified device. Declaration public static DebugServerError debugserver_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out DebugServerClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. DebugServerClientHandle client Pointer that will point to a newly allocated debugserver_client_t upon successful return. Must be freed using debugserver_client_free() after use. Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client is NULL, or an DEBUGSERVER_E_* error code otherwise. debugserver_client_receive(DebugServerClientHandle, Byte[], UInt32, ref UInt32) Receives raw data from the debugserver service. Declaration public static DebugServerError debugserver_client_receive(DebugServerClientHandle client, byte[] data, uint size, ref uint received) Parameters Type Name Description DebugServerClientHandle client The debugserver client System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client or plist is NULL Remarks The default read timeout is 10 seconds. debugserver_client_receive_response(DebugServerClientHandle, out IntPtr) Receives and parses response of debugserver service. Declaration public static DebugServerError debugserver_client_receive_response(DebugServerClientHandle client, out IntPtr response) Parameters Type Name Description DebugServerClientHandle client The debugserver client System.IntPtr response Response received for last command (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client is NULL | Improve this Doc View Source debugserver_client_receive_response(DebugServerClientHandle, out String) Declaration public static DebugServerError debugserver_client_receive_response(DebugServerClientHandle client, out string response) Parameters Type Name Description DebugServerClientHandle client System.String response Returns Type Description DebugServerError debugserver_client_receive_with_timeout(DebugServerClientHandle, Byte[], UInt32, ref UInt32, UInt32) Receives raw data using the given debugserver client with specified timeout. Declaration public static DebugServerError debugserver_client_receive_with_timeout(DebugServerClientHandle client, byte[] data, uint size, ref uint received, uint timeout) Parameters Type Name Description DebugServerClientHandle client The debugserver client to use for receiving System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) System.UInt32 timeout Maximum time in milliseconds to wait for data. Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when one or more parameters are invalid, DEBUGSERVER_E_MUX_ERROR when a communication error occurs, or DEBUGSERVER_E_UNKNOWN_ERROR when an unspecified error occurs. debugserver_client_send(DebugServerClientHandle, Byte[], UInt32, ref UInt32) Sends raw data using the given debugserver service client. Declaration public static DebugServerError debugserver_client_send(DebugServerClientHandle client, byte[] data, uint size, ref uint sent) Parameters Type Name Description DebugServerClientHandle client The debugserver client to use for sending System.Byte [] data Data to send System.UInt32 size Size of the data to send System.UInt32 sent Number of bytes sent (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when one or more parameters are invalid, or DEBUGSERVER_E_UNKNOWN_ERROR when an unspecified error occurs. debugserver_client_send_command(DebugServerClientHandle, DebugServerCommandHandle, out IntPtr) Sends a command to the debugserver service. Declaration public static DebugServerError debugserver_client_send_command(DebugServerClientHandle client, DebugServerCommandHandle command, out IntPtr response) Parameters Type Name Description DebugServerClientHandle client The debugserver client DebugServerCommandHandle command Command to process and send System.IntPtr response Response received for the command (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client or command is NULL | Improve this Doc View Source debugserver_client_send_command(DebugServerClientHandle, DebugServerCommandHandle, out String) Declaration public static DebugServerError debugserver_client_send_command(DebugServerClientHandle client, DebugServerCommandHandle command, out string response) Parameters Type Name Description DebugServerClientHandle client DebugServerCommandHandle command System.String response Returns Type Description DebugServerError debugserver_client_set_ack_mode(DebugServerClientHandle, Int32) Controls status of ACK mode when sending commands or receiving responses. Declaration public static DebugServerError debugserver_client_set_ack_mode(DebugServerClientHandle client, int enabled) Parameters Type Name Description DebugServerClientHandle client The debugserver client System.Int32 enabled A boolean flag indicating whether the internal ACK mode handling should be enabled or disabled. Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, or an DEBUGSERVER_E_* error code otherwise. | Improve this Doc View Source debugserver_client_set_argv(DebugServerClientHandle, Int32, ReadOnlyCollection<String>, out String) Declaration public static DebugServerError debugserver_client_set_argv(DebugServerClientHandle client, int argc, ReadOnlyCollection<string> argv, out string response) Parameters Type Name Description DebugServerClientHandle client System.Int32 argc System.Collections.ObjectModel.ReadOnlyCollection < System.String > argv System.String response Returns Type Description DebugServerError debugserver_client_set_argv(DebugServerClientHandle, Int32, IntPtr, out IntPtr) Sets the argv which launches an app. Declaration public static DebugServerError debugserver_client_set_argv(DebugServerClientHandle client, int argc, IntPtr argv, out IntPtr response) Parameters Type Name Description DebugServerClientHandle client The debugserver client System.Int32 argc Number of arguments System.IntPtr argv Array starting with the executable to be run followed by it's arguments System.IntPtr response Response received for the command (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client is NULL debugserver_client_set_environment_hex_encoded(DebugServerClientHandle, String, out IntPtr) Adds or sets an environment variable. Declaration public static DebugServerError debugserver_client_set_environment_hex_encoded(DebugServerClientHandle client, string env, out IntPtr response) Parameters Type Name Description DebugServerClientHandle client The debugserver client System.String env The environment variable in \"KEY=VALUE\" notation System.IntPtr response Response received for the command (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client is NULL | Improve this Doc View Source debugserver_client_set_environment_hex_encoded(DebugServerClientHandle, String, out String) Declaration public static DebugServerError debugserver_client_set_environment_hex_encoded(DebugServerClientHandle client, string env, out string response) Parameters Type Name Description DebugServerClientHandle client System.String env System.String response Returns Type Description DebugServerError debugserver_client_start_service(iDeviceHandle, out DebugServerClientHandle, String) Starts a new debugserver service on the specified device and connects to it. Declaration public static DebugServerError debugserver_client_start_service(iDeviceHandle device, out DebugServerClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. DebugServerClientHandle client Pointer that will point to a newly allocated debugserver_client_t upon successful return. Must be freed using debugserver_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, or an DEBUGSERVER_E_* error code otherwise. debugserver_command_free(IntPtr) Frees memory of command object. Declaration public static DebugServerError debugserver_command_free(IntPtr command) Parameters Type Name Description System.IntPtr command The command object Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when command is NULL | Improve this Doc View Source debugserver_command_new(String, Int32, ReadOnlyCollection<String>, out DebugServerCommandHandle) Declaration public static DebugServerError debugserver_command_new(string name, int argc, ReadOnlyCollection<string> argv, out DebugServerCommandHandle command) Parameters Type Name Description System.String name System.Int32 argc System.Collections.ObjectModel.ReadOnlyCollection < System.String > argv DebugServerCommandHandle command Returns Type Description DebugServerError debugserver_command_new(String, Int32, IntPtr, out DebugServerCommandHandle) Creates and initializes a new command object. Declaration public static DebugServerError debugserver_command_new(string name, int argc, IntPtr argv, out DebugServerCommandHandle command) Parameters Type Name Description System.String name The name of the command which is sent in plain text System.Int32 argc Number of items in the token array System.IntPtr argv Array of tokens for the command ment to be encoded DebugServerCommandHandle command New command object Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when name or command is NULL debugserver_decode_string(String, UInt32, out IntPtr) Decodes a hex encoded string. Declaration public static void debugserver_decode_string(string encodedBuffer, uint encodedLength, out IntPtr buffer) Parameters Type Name Description System.String encodedBuffer System.UInt32 encodedLength System.IntPtr buffer Decoded string to be freed by the caller | Improve this Doc View Source debugserver_decode_string(String, UInt32, out String) Declaration public static void debugserver_decode_string(string encodedBuffer, uint encodedLength, out string buffer) Parameters Type Name Description System.String encodedBuffer System.UInt32 encodedLength System.String buffer debugserver_encode_string(String, out IntPtr, ref UInt32) Encodes a string into hex notation. Declaration public static void debugserver_encode_string(string buffer, out IntPtr encodedBuffer, ref uint encodedLength) Parameters Type Name Description System.String buffer String to encode into hex notiation System.IntPtr encodedBuffer System.UInt32 encodedLength | Improve this Doc View Source debugserver_encode_string(String, out String, ref UInt32) Declaration public static void debugserver_encode_string(string buffer, out string encodedBuffer, ref uint encodedLength) Parameters Type Name Description System.String buffer System.String encodedBuffer System.UInt32 encodedLength"
  },
  "api/iMobileDevice.Afc.AfcClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.Afc.AfcClientHandleDelegateMarshaler.html",
    "title": "Class AfcClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class AfcClientHandleDelegateMarshaler Inheritance System.Object AfcClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Afc Assembly : iMobileDevice-net.dll Syntax public class AfcClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.Usbmuxd.UsbmuxdEvent.html": {
    "href": "api/iMobileDevice.Usbmuxd.UsbmuxdEvent.html",
    "title": "Struct UsbmuxdEvent | imobiledevice-net API",
    "keywords": "Struct UsbmuxdEvent Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : iMobileDevice.Usbmuxd Assembly : iMobileDevice-net.dll Syntax public struct UsbmuxdEvent Fields | Improve this Doc View Source device Declaration public UsbmuxdDeviceInfo device Field Value Type Description UsbmuxdDeviceInfo | Improve this Doc View Source event Declaration public int event Field Value Type Description System.Int32"
  },
  "api/iMobileDevice.Usbmuxd.UsbmuxdDeviceInfo.html": {
    "href": "api/iMobileDevice.Usbmuxd.UsbmuxdDeviceInfo.html",
    "title": "Struct UsbmuxdDeviceInfo | imobiledevice-net API",
    "keywords": "Struct UsbmuxdDeviceInfo Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : iMobileDevice.Usbmuxd Assembly : iMobileDevice-net.dll Syntax public struct UsbmuxdDeviceInfo Fields | Improve this Doc View Source handle Declaration public uint handle Field Value Type Description System.UInt32 | Improve this Doc View Source product_id Declaration public int product_id Field Value Type Description System.Int32 | Improve this Doc View Source udid Declaration public string udid Field Value Type Description System.String"
  },
  "api/iMobileDevice.Usbmuxd.UsbmuxdApi.html": {
    "href": "api/iMobileDevice.Usbmuxd.UsbmuxdApi.html",
    "title": "Class UsbmuxdApi | imobiledevice-net API",
    "keywords": "Class UsbmuxdApi Inheritance System.Object UsbmuxdApi Implements IUsbmuxdApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Usbmuxd Assembly : iMobileDevice-net.dll Syntax public class UsbmuxdApi : IUsbmuxdApi Constructors | Improve this Doc View Source UsbmuxdApi(ILibiMobileDevice) Declaration public UsbmuxdApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source libusbmuxd_set_debug_level(Int32) Declaration public virtual void libusbmuxd_set_debug_level(int level) Parameters Type Name Description System.Int32 level | Improve this Doc View Source libusbmuxd_set_use_inotify(Int32) Enable or disable the use of inotify extension. Enabled by default. Use 0 to disable and 1 to enable inotify support. This only has an effect on linux systems if inotify support has been built in. Otherwise and on all other platforms this function has no effect. Declaration public virtual void libusbmuxd_set_use_inotify(int set) Parameters Type Name Description System.Int32 set | Improve this Doc View Source usbmuxd_connect(Int32, UInt16) Request proxy connect to Declaration public virtual int usbmuxd_connect(int handle, ushort tcpPort) Parameters Type Name Description System.Int32 handle returned by 'usbmuxd_scan()' System.UInt16 tcpPort Returns Type Description System.Int32 file descriptor socket of the connection, or -1 on error | Improve this Doc View Source usbmuxd_delete_pair_record(String) Delete a pairing record Declaration public virtual int usbmuxd_delete_pair_record(string recordId) Parameters Type Name Description System.String recordId Returns Type Description System.Int32 0 on success, a negative errno value otherwise. | Improve this Doc View Source usbmuxd_device_list_free(IntPtr) Frees the device list returned by an usbmuxd_get_device_list call Declaration public virtual int usbmuxd_device_list_free(IntPtr deviceList) Parameters Type Name Description System.IntPtr deviceList Returns Type Description System.Int32 0 on success, -1 on error. | Improve this Doc View Source usbmuxd_disconnect(Int32) Disconnect. For now, this just closes the socket file descriptor. Declaration public virtual int usbmuxd_disconnect(int sfd) Parameters Type Name Description System.Int32 sfd socker file descriptor returned by usbmuxd_connect() Returns Type Description System.Int32 0 on success, -1 on error. | Improve this Doc View Source usbmuxd_get_device_by_udid(String, ref UsbmuxdDeviceInfo) Gets device information for the device specified by udid. Declaration public virtual int usbmuxd_get_device_by_udid(string udid, ref UsbmuxdDeviceInfo device) Parameters Type Name Description System.String udid A device UDID of the device to look for. If udid is NULL, This function will return the first device found. UsbmuxdDeviceInfo device Pointer to a previously allocated (or static) usbmuxd_device_info_t that will be filled with the device info. Returns Type Description System.Int32 0 if no matching device is connected, 1 if the device was found, or a negative value on error. | Improve this Doc View Source usbmuxd_get_device_list(ref IntPtr) Contacts usbmuxd and retrieves a list of connected devices. Declaration public virtual int usbmuxd_get_device_list(ref IntPtr deviceList) Parameters Type Name Description System.IntPtr deviceList Returns Type Description System.Int32 number of attached devices, zero on no devices, or negative if an error occured. Remarks The user has to free the list returned. | Improve this Doc View Source usbmuxd_get_socket_type(ref Int32) Gets the socket type (Unix socket or TCP socket) libusbmuxd should use when connecting to usbmuxd. Declaration public virtual int usbmuxd_get_socket_type(ref int value) Parameters Type Name Description System.Int32 value A pointer to an integer which will reveive the current socket type Returns Type Description System.Int32 0 on success or negative on error | Improve this Doc View Source usbmuxd_get_tcp_endpoint(out String, ref UInt16) Gets the TCP endpoint to which usbmuxd will connect if th esocket type is set to SOCKET_TYPE_TCP Declaration public virtual int usbmuxd_get_tcp_endpoint(out string host, ref ushort port) Parameters Type Name Description System.String host A pointer which will be set to the hostname or IP address to which to connect. The caller must free this string. System.UInt16 port The port to which to connect Returns Type Description System.Int32 0 on success or negative on error | Improve this Doc View Source usbmuxd_read_buid(out String) Reads the SystemBUID Declaration public virtual int usbmuxd_read_buid(out string buid) Parameters Type Name Description System.String buid pointer to a variable that will be set to point to a newly allocated string with the System BUID returned by usbmuxd Returns Type Description System.Int32 0 on success, a negative errno value otherwise. | Improve this Doc View Source usbmuxd_read_pair_record(String, out String, ref UInt32) Read a pairing record Declaration public virtual int usbmuxd_read_pair_record(string recordId, out string recordData, ref uint recordSize) Parameters Type Name Description System.String recordId System.String recordData System.UInt32 recordSize Returns Type Description System.Int32 0 on success, a negative error value otherwise. | Improve this Doc View Source usbmuxd_recv(Int32, Byte[], UInt32, ref UInt32) Receive data from the specified socket with a default timeout. Declaration public virtual int usbmuxd_recv(int sfd, byte[] data, uint len, ref uint recvBytes) Parameters Type Name Description System.Int32 sfd socket file descriptor returned by usbmuxd_connect() System.Byte [] data buffer to put the data to System.UInt32 len number of bytes to receive System.UInt32 recvBytes Returns Type Description System.Int32 0 on success, a negative errno value otherwise. | Improve this Doc View Source usbmuxd_recv_timeout(Int32, Byte[], UInt32, ref UInt32, UInt32) Receive data from the specified socket. Declaration public virtual int usbmuxd_recv_timeout(int sfd, byte[] data, uint len, ref uint recvBytes, uint timeout) Parameters Type Name Description System.Int32 sfd socket file descriptor returned by usbmuxd_connect() System.Byte [] data buffer to put the data to System.UInt32 len number of bytes to receive System.UInt32 recvBytes System.UInt32 timeout how many milliseconds to wait for data Returns Type Description System.Int32 0 on success, a negative errno value otherwise. | Improve this Doc View Source usbmuxd_save_pair_record(String, String, UInt32) Save a pairing record Declaration public virtual int usbmuxd_save_pair_record(string recordId, string recordData, uint recordSize) Parameters Type Name Description System.String recordId System.String recordData System.UInt32 recordSize Returns Type Description System.Int32 0 on success, a negative error value otherwise. | Improve this Doc View Source usbmuxd_send(Int32, Byte[], UInt32, ref UInt32) Send data to the specified socket. Declaration public virtual int usbmuxd_send(int sfd, byte[] data, uint len, ref uint sentBytes) Parameters Type Name Description System.Int32 sfd socket file descriptor returned by usbmuxd_connect() System.Byte [] data buffer to send System.UInt32 len size of buffer to send System.UInt32 sentBytes Returns Type Description System.Int32 0 on success, a negative errno value otherwise. | Improve this Doc View Source usbmuxd_set_socket_type(Int32) Sets the socket type (Unix socket or TCP socket) libusbmuxd should use when connecting to usbmuxd. Declaration public virtual int usbmuxd_set_socket_type(int value) Parameters Type Name Description System.Int32 value SOCKET_TYPE_UNIX or SOCKET_TYPE_TCP Returns Type Description System.Int32 0 on success or negative on error | Improve this Doc View Source usbmuxd_set_tcp_endpoint(String, UInt16) Sets the TCP endpoint to which usbmuxd will connect if the socket type is set to SOCKET_TYPE_TCP Declaration public virtual int usbmuxd_set_tcp_endpoint(string host, ushort port) Parameters Type Name Description System.String host The hostname or IP address to which to connect System.UInt16 port The port to which to connect. Returns Type Description System.Int32 0 on success or negative on error | Improve this Doc View Source usbmuxd_subscribe(UsbmuxdEventCallBack, IntPtr) Subscribe a callback function so that applications get to know about device add/remove events. Declaration public virtual int usbmuxd_subscribe(UsbmuxdEventCallBack callback, IntPtr userData) Parameters Type Name Description UsbmuxdEventCallBack callback A callback function that is executed when an event occurs. System.IntPtr userData Returns Type Description System.Int32 0 on success or negative on error. | Improve this Doc View Source usbmuxd_unsubscribe() Unsubscribe callback. Declaration public virtual int usbmuxd_unsubscribe() Returns Type Description System.Int32 only 0 for now. Implements IUsbmuxdApi"
  },
  "api/iMobileDevice.Usbmuxd.IUsbmuxdApi.html": {
    "href": "api/iMobileDevice.Usbmuxd.IUsbmuxdApi.html",
    "title": "Interface IUsbmuxdApi | imobiledevice-net API",
    "keywords": "Interface IUsbmuxdApi Namespace : iMobileDevice.Usbmuxd Assembly : iMobileDevice-net.dll Syntax public interface IUsbmuxdApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.Usbmuxd . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source libusbmuxd_set_debug_level(Int32) Declaration void libusbmuxd_set_debug_level(int level) Parameters Type Name Description System.Int32 level | Improve this Doc View Source libusbmuxd_set_use_inotify(Int32) Enable or disable the use of inotify extension. Enabled by default. Use 0 to disable and 1 to enable inotify support. This only has an effect on linux systems if inotify support has been built in. Otherwise and on all other platforms this function has no effect. Declaration void libusbmuxd_set_use_inotify(int set) Parameters Type Name Description System.Int32 set | Improve this Doc View Source usbmuxd_connect(Int32, UInt16) Request proxy connect to Declaration int usbmuxd_connect(int handle, ushort tcpPort) Parameters Type Name Description System.Int32 handle returned by 'usbmuxd_scan()' System.UInt16 tcpPort Returns Type Description System.Int32 file descriptor socket of the connection, or -1 on error | Improve this Doc View Source usbmuxd_delete_pair_record(String) Delete a pairing record Declaration int usbmuxd_delete_pair_record(string recordId) Parameters Type Name Description System.String recordId Returns Type Description System.Int32 0 on success, a negative errno value otherwise. | Improve this Doc View Source usbmuxd_device_list_free(IntPtr) Frees the device list returned by an usbmuxd_get_device_list call Declaration int usbmuxd_device_list_free(IntPtr deviceList) Parameters Type Name Description System.IntPtr deviceList Returns Type Description System.Int32 0 on success, -1 on error. | Improve this Doc View Source usbmuxd_disconnect(Int32) Disconnect. For now, this just closes the socket file descriptor. Declaration int usbmuxd_disconnect(int sfd) Parameters Type Name Description System.Int32 sfd socker file descriptor returned by usbmuxd_connect() Returns Type Description System.Int32 0 on success, -1 on error. | Improve this Doc View Source usbmuxd_get_device_by_udid(String, ref UsbmuxdDeviceInfo) Gets device information for the device specified by udid. Declaration int usbmuxd_get_device_by_udid(string udid, ref UsbmuxdDeviceInfo device) Parameters Type Name Description System.String udid A device UDID of the device to look for. If udid is NULL, This function will return the first device found. UsbmuxdDeviceInfo device Pointer to a previously allocated (or static) usbmuxd_device_info_t that will be filled with the device info. Returns Type Description System.Int32 0 if no matching device is connected, 1 if the device was found, or a negative value on error. | Improve this Doc View Source usbmuxd_get_device_list(ref IntPtr) Contacts usbmuxd and retrieves a list of connected devices. Declaration int usbmuxd_get_device_list(ref IntPtr deviceList) Parameters Type Name Description System.IntPtr deviceList Returns Type Description System.Int32 number of attached devices, zero on no devices, or negative if an error occured. Remarks The user has to free the list returned. | Improve this Doc View Source usbmuxd_get_socket_type(ref Int32) Gets the socket type (Unix socket or TCP socket) libusbmuxd should use when connecting to usbmuxd. Declaration int usbmuxd_get_socket_type(ref int value) Parameters Type Name Description System.Int32 value A pointer to an integer which will reveive the current socket type Returns Type Description System.Int32 0 on success or negative on error | Improve this Doc View Source usbmuxd_get_tcp_endpoint(out String, ref UInt16) Gets the TCP endpoint to which usbmuxd will connect if th esocket type is set to SOCKET_TYPE_TCP Declaration int usbmuxd_get_tcp_endpoint(out string host, ref ushort port) Parameters Type Name Description System.String host A pointer which will be set to the hostname or IP address to which to connect. The caller must free this string. System.UInt16 port The port to which to connect Returns Type Description System.Int32 0 on success or negative on error | Improve this Doc View Source usbmuxd_read_buid(out String) Reads the SystemBUID Declaration int usbmuxd_read_buid(out string buid) Parameters Type Name Description System.String buid pointer to a variable that will be set to point to a newly allocated string with the System BUID returned by usbmuxd Returns Type Description System.Int32 0 on success, a negative errno value otherwise. | Improve this Doc View Source usbmuxd_read_pair_record(String, out String, ref UInt32) Read a pairing record Declaration int usbmuxd_read_pair_record(string recordId, out string recordData, ref uint recordSize) Parameters Type Name Description System.String recordId System.String recordData System.UInt32 recordSize Returns Type Description System.Int32 0 on success, a negative error value otherwise. | Improve this Doc View Source usbmuxd_recv(Int32, Byte[], UInt32, ref UInt32) Receive data from the specified socket with a default timeout. Declaration int usbmuxd_recv(int sfd, byte[] data, uint len, ref uint recvBytes) Parameters Type Name Description System.Int32 sfd socket file descriptor returned by usbmuxd_connect() System.Byte [] data buffer to put the data to System.UInt32 len number of bytes to receive System.UInt32 recvBytes Returns Type Description System.Int32 0 on success, a negative errno value otherwise. | Improve this Doc View Source usbmuxd_recv_timeout(Int32, Byte[], UInt32, ref UInt32, UInt32) Receive data from the specified socket. Declaration int usbmuxd_recv_timeout(int sfd, byte[] data, uint len, ref uint recvBytes, uint timeout) Parameters Type Name Description System.Int32 sfd socket file descriptor returned by usbmuxd_connect() System.Byte [] data buffer to put the data to System.UInt32 len number of bytes to receive System.UInt32 recvBytes System.UInt32 timeout how many milliseconds to wait for data Returns Type Description System.Int32 0 on success, a negative errno value otherwise. | Improve this Doc View Source usbmuxd_save_pair_record(String, String, UInt32) Save a pairing record Declaration int usbmuxd_save_pair_record(string recordId, string recordData, uint recordSize) Parameters Type Name Description System.String recordId System.String recordData System.UInt32 recordSize Returns Type Description System.Int32 0 on success, a negative error value otherwise. | Improve this Doc View Source usbmuxd_send(Int32, Byte[], UInt32, ref UInt32) Send data to the specified socket. Declaration int usbmuxd_send(int sfd, byte[] data, uint len, ref uint sentBytes) Parameters Type Name Description System.Int32 sfd socket file descriptor returned by usbmuxd_connect() System.Byte [] data buffer to send System.UInt32 len size of buffer to send System.UInt32 sentBytes Returns Type Description System.Int32 0 on success, a negative errno value otherwise. | Improve this Doc View Source usbmuxd_set_socket_type(Int32) Sets the socket type (Unix socket or TCP socket) libusbmuxd should use when connecting to usbmuxd. Declaration int usbmuxd_set_socket_type(int value) Parameters Type Name Description System.Int32 value SOCKET_TYPE_UNIX or SOCKET_TYPE_TCP Returns Type Description System.Int32 0 on success or negative on error | Improve this Doc View Source usbmuxd_set_tcp_endpoint(String, UInt16) Sets the TCP endpoint to which usbmuxd will connect if the socket type is set to SOCKET_TYPE_TCP Declaration int usbmuxd_set_tcp_endpoint(string host, ushort port) Parameters Type Name Description System.String host The hostname or IP address to which to connect System.UInt16 port The port to which to connect. Returns Type Description System.Int32 0 on success or negative on error | Improve this Doc View Source usbmuxd_subscribe(UsbmuxdEventCallBack, IntPtr) Subscribe a callback function so that applications get to know about device add/remove events. Declaration int usbmuxd_subscribe(UsbmuxdEventCallBack callback, IntPtr userData) Parameters Type Name Description UsbmuxdEventCallBack callback A callback function that is executed when an event occurs. System.IntPtr userData Returns Type Description System.Int32 0 on success or negative on error. | Improve this Doc View Source usbmuxd_unsubscribe() Unsubscribe callback. Declaration int usbmuxd_unsubscribe() Returns Type Description System.Int32 only 0 for now."
  },
  "api/iMobileDevice.Restore.IRestoreApi.html": {
    "href": "api/iMobileDevice.Restore.IRestoreApi.html",
    "title": "Interface IRestoreApi | imobiledevice-net API",
    "keywords": "Interface IRestoreApi Namespace : iMobileDevice.Restore Assembly : iMobileDevice-net.dll Syntax public interface IRestoreApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.Restore . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source restored_client_free(IntPtr) Closes the restored client session if one is running and frees up the restored_client struct. Declaration RestoreError restored_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The restore client Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL | Improve this Doc View Source restored_client_new(iDeviceHandle, out RestoreClientHandle, String) Creates a new restored client for the device. Declaration RestoreError restored_client_new(iDeviceHandle device, out RestoreClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to create a restored client for RestoreClientHandle client The pointer to the location of the new restored_client System.String label The label to use for communication. Usually the program name. Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL | Improve this Doc View Source restored_client_set_label(RestoreClientHandle, String) Sets the label to send for requests to restored. Declaration void restored_client_set_label(RestoreClientHandle client, string label) Parameters Type Name Description RestoreClientHandle client The restore client System.String label The label to set or NULL to disable sending a label | Improve this Doc View Source restored_get_value(RestoreClientHandle, String, out PlistHandle) Retrieves a value from information plist specified by a key. Declaration RestoreError restored_get_value(RestoreClientHandle client, string key, out PlistHandle value) Parameters Type Name Description RestoreClientHandle client An initialized restored client. System.String key The key name to request or NULL to query for all keys PlistHandle value A plist node representing the result value node Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL, RESTORE_E_PLIST_ERROR if value for key can't be found | Improve this Doc View Source restored_goodbye(RestoreClientHandle) Sends the Goodbye request to restored signaling the end of communication. Declaration RestoreError restored_goodbye(RestoreClientHandle client) Parameters Type Name Description RestoreClientHandle client The restore client Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL, RESTORE_E_PLIST_ERROR if the device did not acknowledge the request | Improve this Doc View Source restored_query_type(RestoreClientHandle, out String, ref UInt64) Query the type of the service daemon. Depending on whether the device is queried in normal mode or restore mode, different types will be returned. Declaration RestoreError restored_query_type(RestoreClientHandle client, out string type, ref ulong version) Parameters Type Name Description RestoreClientHandle client The restored client System.String type The type returned by the service daemon. Pass NULL to ignore. System.UInt64 version The restore protocol version. Pass NULL to ignore. Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL | Improve this Doc View Source restored_query_value(RestoreClientHandle, String, out PlistHandle) Queries a value from the device specified by a key. Declaration RestoreError restored_query_value(RestoreClientHandle client, string key, out PlistHandle value) Parameters Type Name Description RestoreClientHandle client An initialized restored client. System.String key The key name to request PlistHandle value A plist node representing the result value node Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL, RESTORE_E_PLIST_ERROR if value for key can't be found | Improve this Doc View Source restored_reboot(RestoreClientHandle) Requests device to reboot. Declaration RestoreError restored_reboot(RestoreClientHandle client) Parameters Type Name Description RestoreClientHandle client The restored client Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG if a parameter is NULL | Improve this Doc View Source restored_receive(RestoreClientHandle, out PlistHandle) Receives a plist from restored. Declaration RestoreError restored_receive(RestoreClientHandle client, out PlistHandle plist) Parameters Type Name Description RestoreClientHandle client The restored client PlistHandle plist The plist to store the received data Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client or plist is NULL | Improve this Doc View Source restored_send(RestoreClientHandle, PlistHandle) Sends a plist to restored. Declaration RestoreError restored_send(RestoreClientHandle client, PlistHandle plist) Parameters Type Name Description RestoreClientHandle client The restored client PlistHandle plist The plist to send Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client or plist is NULL Remarks This function is low-level and should only be used if you need to send a new type of message. | Improve this Doc View Source restored_start_restore(RestoreClientHandle, PlistHandle, UInt64) Requests to start a restore and retrieve it's port on success. Declaration RestoreError restored_start_restore(RestoreClientHandle client, PlistHandle options, ulong version) Parameters Type Name Description RestoreClientHandle client The restored client PlistHandle options PLIST_DICT with options for the restore process or NULL System.UInt64 version the restore protocol version, see restored_query_type() Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG if a parameter is NULL, RESTORE_E_START_RESTORE_FAILED if the request fails"
  },
  "api/iMobileDevice.Pinvoke.PinvokeError.html": {
    "href": "api/iMobileDevice.Pinvoke.PinvokeError.html",
    "title": "Enum PinvokeError | imobiledevice-net API",
    "keywords": "Enum PinvokeError Error Codes Namespace : iMobileDevice.Pinvoke Assembly : iMobileDevice-net.dll Syntax public enum PinvokeError Fields Name Description Success Extension Methods PinvokeErrorExtensions.ThrowOnError() PinvokeErrorExtensions.ThrowOnError(String) PinvokeErrorExtensions.IsError()"
  },
  "api/iMobileDevice.Pinvoke.PinvokeApi.html": {
    "href": "api/iMobileDevice.Pinvoke.PinvokeApi.html",
    "title": "Class PinvokeApi | imobiledevice-net API",
    "keywords": "Class PinvokeApi Inheritance System.Object PinvokeApi Implements IPinvokeApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Pinvoke Assembly : iMobileDevice-net.dll Syntax public class PinvokeApi : IPinvokeApi Constructors | Improve this Doc View Source PinvokeApi(ILibiMobileDevice) Declaration public PinvokeApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source pinvoke_free_string(IntPtr) Frees a string that was previously allocated by libimobiledevice. Declaration public virtual PinvokeError pinvoke_free_string(IntPtr string) Parameters Type Name Description System.IntPtr string The string to free. Returns Type Description PinvokeError Always returns PINVOKE_E_SUCCESS. | Improve this Doc View Source pinvoke_get_string_length(IntPtr, out UInt64) Gets the size of a string that was previously allocated by libimobiledevice. Declaration public virtual PinvokeError pinvoke_get_string_length(IntPtr string, out ulong length) Parameters Type Name Description System.IntPtr string The string of which to get its size. System.UInt64 length The length of the string, in bytes. Returns Type Description PinvokeError Always returns PINVOKE_E_SUCCESS. Implements IPinvokeApi"
  },
  "api/iMobileDevice.Pinvoke.IPinvokeApi.html": {
    "href": "api/iMobileDevice.Pinvoke.IPinvokeApi.html",
    "title": "Interface IPinvokeApi | imobiledevice-net API",
    "keywords": "Interface IPinvokeApi Namespace : iMobileDevice.Pinvoke Assembly : iMobileDevice-net.dll Syntax public interface IPinvokeApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.Pinvoke . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source pinvoke_free_string(IntPtr) Frees a string that was previously allocated by libimobiledevice. Declaration PinvokeError pinvoke_free_string(IntPtr string) Parameters Type Name Description System.IntPtr string The string to free. Returns Type Description PinvokeError Always returns PINVOKE_E_SUCCESS. | Improve this Doc View Source pinvoke_get_string_length(IntPtr, out UInt64) Gets the size of a string that was previously allocated by libimobiledevice. Declaration PinvokeError pinvoke_get_string_length(IntPtr string, out ulong length) Parameters Type Name Description System.IntPtr string The string of which to get its size. System.UInt64 length The length of the string, in bytes. Returns Type Description PinvokeError Always returns PINVOKE_E_SUCCESS."
  },
  "api/iMobileDevice.NotificationProxy.html": {
    "href": "api/iMobileDevice.NotificationProxy.html",
    "title": "Namespace iMobileDevice.NotificationProxy | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.NotificationProxy Classes NotificationProxyApi NotificationProxyClientHandle NotificationProxyClientHandleDelegateMarshaler NotificationProxyErrorExtensions NotificationProxyException NotificationProxyNativeMethods Interfaces INotificationProxyApi Enums NotificationProxyError Error Codes Delegates NotificationProxyNotifyCallBack"
  },
  "api/iMobileDevice.MobileSync.MobileSyncErrorExtensions.html": {
    "href": "api/iMobileDevice.MobileSync.MobileSyncErrorExtensions.html",
    "title": "Class MobileSyncErrorExtensions | imobiledevice-net API",
    "keywords": "Class MobileSyncErrorExtensions Inheritance System.Object MobileSyncErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileSync Assembly : iMobileDevice-net.dll Syntax public static class MobileSyncErrorExtensions Methods | Improve this Doc View Source IsError(MobileSyncError) Declaration public static bool IsError(this MobileSyncError value) Parameters Type Name Description MobileSyncError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(MobileSyncError) Declaration public static void ThrowOnError(this MobileSyncError value) Parameters Type Name Description MobileSyncError value | Improve this Doc View Source ThrowOnError(MobileSyncError, String) Declaration public static void ThrowOnError(this MobileSyncError value, string message) Parameters Type Name Description MobileSyncError value System.String message"
  },
  "api/iMobileDevice.MobileSync.MobileSyncError.html": {
    "href": "api/iMobileDevice.MobileSync.MobileSyncError.html",
    "title": "Enum MobileSyncError | imobiledevice-net API",
    "keywords": "Enum MobileSyncError Error Codes Namespace : iMobileDevice.MobileSync Assembly : iMobileDevice-net.dll Syntax public enum MobileSyncError Fields Name Description BadVersion Cancelled InvalidArg MuxError NotReady PlistError Success SyncRefused UnknownError WrongDirection Extension Methods MobileSyncErrorExtensions.ThrowOnError() MobileSyncErrorExtensions.ThrowOnError(String) MobileSyncErrorExtensions.IsError()"
  },
  "api/iMobileDevice.MobileImageMounter.MobileImageMounterError.html": {
    "href": "api/iMobileDevice.MobileImageMounter.MobileImageMounterError.html",
    "title": "Enum MobileImageMounterError | imobiledevice-net API",
    "keywords": "Enum MobileImageMounterError Error Codes Namespace : iMobileDevice.MobileImageMounter Assembly : iMobileDevice-net.dll Syntax public enum MobileImageMounterError Fields Name Description CommandFailed ConnFailed InvalidArg PlistError Success UnknownError Extension Methods MobileImageMounterErrorExtensions.ThrowOnError() MobileImageMounterErrorExtensions.ThrowOnError(String) MobileImageMounterErrorExtensions.IsError()"
  },
  "api/iMobileDevice.MobileImageMounter.MobileImageMounterClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.MobileImageMounter.MobileImageMounterClientHandleDelegateMarshaler.html",
    "title": "Class MobileImageMounterClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class MobileImageMounterClientHandleDelegateMarshaler Inheritance System.Object MobileImageMounterClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileImageMounter Assembly : iMobileDevice-net.dll Syntax public class MobileImageMounterClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.MobileBackup.html": {
    "href": "api/iMobileDevice.MobileBackup.html",
    "title": "Namespace iMobileDevice.MobileBackup | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.MobileBackup Classes MobileBackupApi MobileBackupClientHandle MobileBackupClientHandleDelegateMarshaler MobileBackupErrorExtensions MobileBackupException MobileBackupNativeMethods Interfaces IMobileBackupApi Enums MobileBackupError Error Codes MobileBackupFlags"
  },
  "api/iMobileDevice.MobileBackup.MobileBackupNativeMethods.html": {
    "href": "api/iMobileDevice.MobileBackup.MobileBackupNativeMethods.html",
    "title": "Class MobileBackupNativeMethods | imobiledevice-net API",
    "keywords": "Class MobileBackupNativeMethods Inheritance System.Object MobileBackupNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileBackup Assembly : iMobileDevice-net.dll Syntax public class MobileBackupNativeMethods Methods mobilebackup_client_free(IntPtr) Disconnects a mobilebackup client from the device and frees up the mobilebackup client data. Declaration public static MobileBackupError mobilebackup_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The mobilebackup client to disconnect and free. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, or MOBILEBACKUP_E_INVALID_ARG if client is NULL. mobilebackup_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MobileBackupClientHandle) Connects to the mobilebackup service on the specified device. Declaration public static MobileBackupError mobilebackup_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MobileBackupClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MobileBackupClientHandle client Pointer that will be set to a newly allocated mobilebackup_client_t upon successful return. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID ARG if one or more parameters are invalid, or DEVICE_LINK_SERVICE_E_BAD_VERSION if the mobilebackup version on the device is newer. mobilebackup_client_start_service(iDeviceHandle, out MobileBackupClientHandle, String) Starts a new mobilebackup service on the specified device and connects to it. Declaration public static MobileBackupError mobilebackup_client_start_service(iDeviceHandle device, out MobileBackupClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MobileBackupClientHandle client Pointer that will point to a newly allocated mobilebackup_client_t upon successful return. Must be freed using mobilebackup_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, or an MOBILEBACKUP_E_* error code otherwise. mobilebackup_receive(MobileBackupClientHandle, out PlistHandle) Polls the device for mobilebackup data. Declaration public static MobileBackupError mobilebackup_receive(MobileBackupClientHandle client, out PlistHandle plist) Parameters Type Name Description MobileBackupClientHandle client The mobilebackup client PlistHandle plist A pointer to the location where the plist should be stored Returns Type Description MobileBackupError an error code mobilebackup_receive_restore_application_received(MobileBackupClientHandle, out PlistHandle) Receive a confirmation from the device that it successfully received application data file. Declaration public static MobileBackupError mobilebackup_receive_restore_application_received(MobileBackupClientHandle client, out PlistHandle result) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. PlistHandle result Pointer to a plist_t that will be set to the received plist for further processing. The caller has to free it using plist_free(). Note that it will be set to NULL if the operation itself fails due to a communication or plist error. If this parameter is NULL, it will be ignored. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if client is invalid, MOBILEBACKUP_E_REPLY_NOT_OK if the expected 'BackupMessageRestoreApplicationReceived' message could not be received, MOBILEBACKUP_E_PLIST_ERROR if the received message is not a valid backup message plist, or MOBILEBACKUP_E_MUX_ERROR if a communication error occurs. mobilebackup_receive_restore_file_received(MobileBackupClientHandle, out PlistHandle) Receive a confirmation from the device that it successfully received a restore file. Declaration public static MobileBackupError mobilebackup_receive_restore_file_received(MobileBackupClientHandle client, out PlistHandle result) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. PlistHandle result Pointer to a plist_t that will be set to the received plist for further processing. The caller has to free it using plist_free(). Note that it will be set to NULL if the operation itself fails due to a communication or plist error. If this parameter is NULL, it will be ignored. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if client is invalid, MOBILEBACKUP_E_REPLY_NOT_OK if the expected 'BackupMessageRestoreFileReceived' message could not be received, MOBILEBACKUP_E_PLIST_ERROR if the received message is not a valid backup message plist, or MOBILEBACKUP_E_MUX_ERROR if a communication error occurs. mobilebackup_request_backup(MobileBackupClientHandle, PlistHandle, String, String) Request a backup from the connected device. Declaration public static MobileBackupError mobilebackup_request_backup(MobileBackupClientHandle client, PlistHandle backupManifest, string basePath, string protoVersion) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. PlistHandle backupManifest System.String basePath System.String protoVersion Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if one of the parameters is invalid, MOBILEBACKUP_E_PLIST_ERROR if backup_manifest is not of type PLIST_DICT, MOBILEBACKUP_E_MUX_ERROR if a communication error occurs, MOBILEBACKUP_E_REPLY_NOT_OK mobilebackup_request_restore(MobileBackupClientHandle, PlistHandle, MobileBackupFlags, String) Request that a backup should be restored to the connected device. Declaration public static MobileBackupError mobilebackup_request_restore(MobileBackupClientHandle client, PlistHandle backupManifest, MobileBackupFlags flags, string protoVersion) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. PlistHandle backupManifest MobileBackupFlags flags Flags to send with the request. Currently this is a combination of the following mobilebackup_flags_t: MB_RESTORE_NOTIFY_SPRINGBOARD - let SpringBoard show a 'Restore' screen MB_RESTORE_PRESERVE_SETTINGS - do not overwrite any settings MB_RESTORE_PRESERVE_CAMERA_ROLL - preserve the photos of the camera roll System.String protoVersion Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if one of the parameters is invalid, MOBILEBACKUP_E_PLIST_ERROR if backup_manifest is not of type PLIST_DICT, MOBILEBACKUP_E_MUX_ERROR if a communication error occurs, or MOBILEBACKUP_E_REPLY_NOT_OK if the device did not accept the request. mobilebackup_send(MobileBackupClientHandle, PlistHandle) Sends mobilebackup data to the device Declaration public static MobileBackupError mobilebackup_send(MobileBackupClientHandle client, PlistHandle plist) Parameters Type Name Description MobileBackupClientHandle client The mobilebackup client PlistHandle plist The location of the plist to send Returns Type Description MobileBackupError an error code Remarks This function is low-level and should only be used if you need to send a new type of message. mobilebackup_send_backup_file_received(MobileBackupClientHandle) Sends a confirmation to the device that a backup file has been received. Declaration public static MobileBackupError mobilebackup_send_backup_file_received(MobileBackupClientHandle client) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if client is invalid, or MOBILEBACKUP_E_MUX_ERROR if a communication error occurs. mobilebackup_send_error(MobileBackupClientHandle, String) Sends a backup error message to the device. Declaration public static MobileBackupError mobilebackup_send_error(MobileBackupClientHandle client, string reason) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. System.String reason A string describing the reason for the error message. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if one of the parameters is invalid, or MOBILEBACKUP_E_MUX_ERROR if a communication error occurs. mobilebackup_send_restore_complete(MobileBackupClientHandle) Tells the device that the restore process is complete and waits for the device to close the connection. After that, the device should reboot. Declaration public static MobileBackupError mobilebackup_send_restore_complete(MobileBackupClientHandle client) Parameters Type Name Description MobileBackupClientHandle client The connected MobileBackup client to use. Returns Type Description MobileBackupError MOBILEBACKUP_E_SUCCESS on success, MOBILEBACKUP_E_INVALID_ARG if client is invalid, MOBILEBACKUP_E_PLIST_ERROR if the received disconnect message plist is invalid, or MOBILEBACKUP_E_MUX_ERROR if a communication error occurs."
  },
  "api/iMobileDevice.Mobileactivation.MobileactivationError.html": {
    "href": "api/iMobileDevice.Mobileactivation.MobileactivationError.html",
    "title": "Enum MobileactivationError | imobiledevice-net API",
    "keywords": "Enum MobileactivationError Error Codes Namespace : iMobileDevice.Mobileactivation Assembly : iMobileDevice-net.dll Syntax public enum MobileactivationError Fields Name Description InvalidArg MuxError PlistError RequestFailed Success UnknownError UnknownRequest Extension Methods MobileactivationErrorExtensions.ThrowOnError() MobileactivationErrorExtensions.ThrowOnError(String) MobileactivationErrorExtensions.IsError()"
  },
  "api/iMobileDevice.Mobileactivation.MobileactivationClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.Mobileactivation.MobileactivationClientHandleDelegateMarshaler.html",
    "title": "Class MobileactivationClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class MobileactivationClientHandleDelegateMarshaler Inheritance System.Object MobileactivationClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Mobileactivation Assembly : iMobileDevice-net.dll Syntax public class MobileactivationClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.Lockdown.html": {
    "href": "api/iMobileDevice.Lockdown.html",
    "title": "Namespace iMobileDevice.Lockdown | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.Lockdown Classes LockdownApi LockdownClientHandle LockdownClientHandleDelegateMarshaler LockdownErrorExtensions LockdownException LockdownMarshaler LockdownNativeMethods LockdownPairRecordHandle LockdownPairRecordHandleDelegateMarshaler LockdownServiceDescriptorHandle LockdownServiceDescriptorHandleDelegateMarshaler Structs LockdownPairRecord LockdownServiceDescriptor Interfaces ILockdownApi Enums LockdownError Error Codes"
  },
  "api/iMobileDevice.Lockdown.LockdownServiceDescriptorHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.Lockdown.LockdownServiceDescriptorHandleDelegateMarshaler.html",
    "title": "Class LockdownServiceDescriptorHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class LockdownServiceDescriptorHandleDelegateMarshaler Inheritance System.Object LockdownServiceDescriptorHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Lockdown Assembly : iMobileDevice-net.dll Syntax public class LockdownServiceDescriptorHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.Lockdown.ILockdownApi.html": {
    "href": "api/iMobileDevice.Lockdown.ILockdownApi.html",
    "title": "Interface ILockdownApi | imobiledevice-net API",
    "keywords": "Interface ILockdownApi Namespace : iMobileDevice.Lockdown Assembly : iMobileDevice-net.dll Syntax public interface ILockdownApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.Lockdown . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source lockdownd_activate(LockdownClientHandle, PlistHandle) Activates the device. Only works within an open session. The ActivationRecord plist dictionary must be obtained using the activation protocol requesting from Apple's https webservice. Declaration LockdownError lockdownd_activate(LockdownClientHandle client, PlistHandle activationRecord) Parameters Type Name Description LockdownClientHandle client The lockdown client PlistHandle activationRecord Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client or activation_record is NULL, LOCKDOWN_E_NO_RUNNING_SESSION if no session is open, LOCKDOWN_E_PLIST_ERROR if the received plist is broken, LOCKDOWN_E_ACTIVATION_FAILED if the activation failed, LOCKDOWN_E_INVALID_ACTIVATION_RECORD if the device reports that the activation_record is invalid | Improve this Doc View Source lockdownd_client_free(IntPtr) Closes the lockdownd client session if one is running and frees up the lockdownd_client struct. Declaration LockdownError lockdownd_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The lockdown client Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL | Improve this Doc View Source lockdownd_client_new(iDeviceHandle, out LockdownClientHandle, String) Creates a new lockdownd client for the device. Declaration LockdownError lockdownd_client_new(iDeviceHandle device, out LockdownClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to create a lockdownd client for LockdownClientHandle client The pointer to the location of the new lockdownd_client System.String label The label to use for communication. Usually the program name. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL Remarks This function does not pair with the device or start a session. This has to be done manually by the caller after the client is created. The device disconnects automatically if the lockdown connection idles for more than 10 seconds. Make sure to call lockdownd_client_free() as soon as the connection is no longer needed. | Improve this Doc View Source lockdownd_client_new_with_handshake(iDeviceHandle, out LockdownClientHandle, String) Creates a new lockdownd client for the device and starts initial handshake. The handshake consists out of query_type, validate_pair, pair and start_session calls. It uses the internal pairing record management. Declaration LockdownError lockdownd_client_new_with_handshake(iDeviceHandle device, out LockdownClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to create a lockdownd client for LockdownClientHandle client The pointer to the location of the new lockdownd_client System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_INVALID_CONF if configuration data is wrong Remarks The device disconnects automatically if the lockdown connection idles for more than 10 seconds. Make sure to call lockdownd_client_free() as soon as the connection is no longer needed. | Improve this Doc View Source lockdownd_client_set_label(LockdownClientHandle, String) Sets the label to send for requests to lockdownd. Declaration void lockdownd_client_set_label(LockdownClientHandle client, string label) Parameters Type Name Description LockdownClientHandle client The lockdown client System.String label The label to set or NULL to disable sending a label | Improve this Doc View Source lockdownd_data_classes_free(IntPtr) Frees memory of an allocated array of data classes as returned by lockdownd_get_sync_data_classes() Declaration LockdownError lockdownd_data_classes_free(IntPtr classes) Parameters Type Name Description System.IntPtr classes An array of class names to free. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success | Improve this Doc View Source lockdownd_deactivate(LockdownClientHandle) Deactivates the device, returning it to the locked â€œActivate with iTunesâ€ screen. Declaration LockdownError lockdownd_deactivate(LockdownClientHandle client) Parameters Type Name Description LockdownClientHandle client The lockdown client Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_NO_RUNNING_SESSION if no session is open, LOCKDOWN_E_PLIST_ERROR if the received plist is broken | Improve this Doc View Source lockdownd_enter_recovery(LockdownClientHandle) Tells the device to immediately enter recovery mode. Declaration LockdownError lockdownd_enter_recovery(LockdownClientHandle client) Parameters Type Name Description LockdownClientHandle client The lockdown client Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL | Improve this Doc View Source lockdownd_get_device_name(LockdownClientHandle, out String) Retrieves the name of the device from lockdownd set by the user. Declaration LockdownError lockdownd_get_device_name(LockdownClientHandle client, out string deviceName) Parameters Type Name Description LockdownClientHandle client An initialized lockdownd client. System.String deviceName Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success | Improve this Doc View Source lockdownd_get_device_udid(LockdownClientHandle, out String) Returns the unique id of the device from lockdownd. Declaration LockdownError lockdownd_get_device_udid(LockdownClientHandle client, out string udid) Parameters Type Name Description LockdownClientHandle client An initialized lockdownd client. System.String udid Holds the unique id of the device. The caller is responsible for freeing the memory. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success | Improve this Doc View Source lockdownd_get_sync_data_classes(LockdownClientHandle, out ReadOnlyCollection<String>, ref Int32) Calculates and returns the data classes the device supports from lockdownd. Declaration LockdownError lockdownd_get_sync_data_classes(LockdownClientHandle client, out ReadOnlyCollection<string> classes, ref int count) Parameters Type Name Description LockdownClientHandle client An initialized lockdownd client. System.Collections.ObjectModel.ReadOnlyCollection < System.String > classes A pointer to store an array of class names. The caller is responsible for freeing the memory which can be done using mobilesync_data_classes_free(). System.Int32 count The number of items in the classes array. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_NO_RUNNING_SESSION if no session is open, LOCKDOWN_E_PLIST_ERROR if the received plist is broken | Improve this Doc View Source lockdownd_get_value(LockdownClientHandle, String, String, out PlistHandle) Retrieves a preferences plist using an optional domain and/or key name. Declaration LockdownError lockdownd_get_value(LockdownClientHandle client, string domain, string key, out PlistHandle value) Parameters Type Name Description LockdownClientHandle client An initialized lockdownd client. System.String domain The domain to query on or NULL for global domain System.String key The key name to request or NULL to query for all keys PlistHandle value A plist node representing the result value node Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL | Improve this Doc View Source lockdownd_goodbye(LockdownClientHandle) Sends the Goodbye request to lockdownd signaling the end of communication. Declaration LockdownError lockdownd_goodbye(LockdownClientHandle client) Parameters Type Name Description LockdownClientHandle client The lockdown client Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_PLIST_ERROR if the device did not acknowledge the request | Improve this Doc View Source lockdownd_pair(LockdownClientHandle, LockdownPairRecordHandle) Pairs the device using the supplied pair record. Declaration LockdownError lockdownd_pair(LockdownClientHandle client, LockdownPairRecordHandle pairRecord) Parameters Type Name Description LockdownClientHandle client The lockdown client LockdownPairRecordHandle pairRecord Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_PLIST_ERROR if the pair_record certificates are wrong, LOCKDOWN_E_PAIRING_FAILED if the pairing failed, LOCKDOWN_E_PASSWORD_PROTECTED if the device is password protected, LOCKDOWN_E_INVALID_HOST_ID if the device does not know the caller's host id | Improve this Doc View Source lockdownd_pair_with_options(LockdownClientHandle, LockdownPairRecordHandle, PlistHandle, out PlistHandle) Pairs the device using the supplied pair record and passing the given options. Declaration LockdownError lockdownd_pair_with_options(LockdownClientHandle client, LockdownPairRecordHandle pairRecord, PlistHandle options, out PlistHandle response) Parameters Type Name Description LockdownClientHandle client The lockdown client LockdownPairRecordHandle pairRecord PlistHandle options The pairing options to pass. Can be NULL for no options. PlistHandle response If non-NULL a pointer to lockdownd's response dictionary is returned. The caller is responsible to free the response dictionary with plist_free(). Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_PLIST_ERROR if the pair_record certificates are wrong, LOCKDOWN_E_PAIRING_FAILED if the pairing failed, LOCKDOWN_E_PASSWORD_PROTECTED if the device is password protected, LOCKDOWN_E_INVALID_HOST_ID if the device does not know the caller's host id | Improve this Doc View Source lockdownd_query_type(LockdownClientHandle, out String) Query the type of the service daemon. Depending on whether the device is queried in normal mode or restore mode, different types will be returned. Declaration LockdownError lockdownd_query_type(LockdownClientHandle client, out string type) Parameters Type Name Description LockdownClientHandle client The lockdownd client System.String type The type returned by the service daemon. Pass NULL to ignore. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL | Improve this Doc View Source lockdownd_receive(LockdownClientHandle, out PlistHandle) Receives a plist from lockdownd. Declaration LockdownError lockdownd_receive(LockdownClientHandle client, out PlistHandle plist) Parameters Type Name Description LockdownClientHandle client The lockdownd client PlistHandle plist The plist to store the received data Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client or plist is NULL | Improve this Doc View Source lockdownd_remove_value(LockdownClientHandle, String, String) Removes a preference node by domain and/or key name. Declaration LockdownError lockdownd_remove_value(LockdownClientHandle client, string domain, string key) Parameters Type Name Description LockdownClientHandle client An initialized lockdownd client. System.String domain The domain to query on or NULL for global domain System.String key The key name to remove or NULL remove all keys for the current domain Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL Remarks : Use with caution as this could remove vital information on the device | Improve this Doc View Source lockdownd_send(LockdownClientHandle, PlistHandle) Sends a plist to lockdownd. Declaration LockdownError lockdownd_send(LockdownClientHandle client, PlistHandle plist) Parameters Type Name Description LockdownClientHandle client The lockdownd client PlistHandle plist The plist to send Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client or plist is NULL Remarks This function is low-level and should only be used if you need to send a new type of message. | Improve this Doc View Source lockdownd_service_descriptor_free(IntPtr) Frees memory of a service descriptor as returned by lockdownd_start_service() Declaration LockdownError lockdownd_service_descriptor_free(IntPtr service) Parameters Type Name Description System.IntPtr service A service descriptor instance to free. Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success | Improve this Doc View Source lockdownd_set_value(LockdownClientHandle, String, String, PlistHandle) Sets a preferences value using a plist and optional by domain and/or key name. Declaration LockdownError lockdownd_set_value(LockdownClientHandle client, string domain, string key, PlistHandle value) Parameters Type Name Description LockdownClientHandle client an initialized lockdownd client. System.String domain the domain to query on or NULL for global domain System.String key the key name to set the value or NULL to set a value dict plist PlistHandle value a plist node of any node type representing the value to set Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client or value is NULL | Improve this Doc View Source lockdownd_start_service(LockdownClientHandle, String, out LockdownServiceDescriptorHandle) Requests to start a service and retrieve it's port on success. Declaration LockdownError lockdownd_start_service(LockdownClientHandle client, string identifier, out LockdownServiceDescriptorHandle service) Parameters Type Name Description LockdownClientHandle client The lockdownd client System.String identifier The identifier of the service to start LockdownServiceDescriptorHandle service The service descriptor on success or NULL on failure Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG if a parameter is NULL, LOCKDOWN_E_INVALID_SERVICE if the requested service is not known by the device, LOCKDOWN_E_START_SERVICE_FAILED if the service could not be started by the device | Improve this Doc View Source lockdownd_start_service_with_escrow_bag(LockdownClientHandle, String, out LockdownServiceDescriptorHandle) Requests to start a service and retrieve it's port on success. Sends the escrow bag from the device's pair record. Declaration LockdownError lockdownd_start_service_with_escrow_bag(LockdownClientHandle client, string identifier, out LockdownServiceDescriptorHandle service) Parameters Type Name Description LockdownClientHandle client The lockdownd client System.String identifier The identifier of the service to start LockdownServiceDescriptorHandle service The service descriptor on success or NULL on failure Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG if a parameter is NULL, LOCKDOWN_E_INVALID_SERVICE if the requested service is not known by the device, LOCKDOWN_E_START_SERVICE_FAILED if the service could not because started by the device, LOCKDOWN_E_INVALID_CONF if the host id or escrow bag are missing from the device record. | Improve this Doc View Source lockdownd_start_session(LockdownClientHandle, String, out String, ref Int32) Opens a session with lockdownd and switches to SSL mode if device wants it. Declaration LockdownError lockdownd_start_session(LockdownClientHandle client, string hostId, out string sessionId, ref int sslEnabled) Parameters Type Name Description LockdownClientHandle client The lockdownd client System.String hostId System.String sessionId System.Int32 sslEnabled Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when a client or host_id is NULL, LOCKDOWN_E_PLIST_ERROR if the response plist had errors, LOCKDOWN_E_INVALID_HOST_ID if the device does not know the supplied HostID, LOCKDOWN_E_SSL_ERROR if enabling SSL communication failed | Improve this Doc View Source lockdownd_stop_session(LockdownClientHandle, String) Closes the lockdownd session by sending the StopSession request. Declaration LockdownError lockdownd_stop_session(LockdownClientHandle client, string sessionId) Parameters Type Name Description LockdownClientHandle client The lockdown client System.String sessionId Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL | Improve this Doc View Source lockdownd_unpair(LockdownClientHandle, LockdownPairRecordHandle) Unpairs the device with the given HostID and removes the pairing records from the device and host if the internal pairing record management is used. Declaration LockdownError lockdownd_unpair(LockdownClientHandle client, LockdownPairRecordHandle pairRecord) Parameters Type Name Description LockdownClientHandle client The lockdown client LockdownPairRecordHandle pairRecord Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_PLIST_ERROR if the pair_record certificates are wrong, LOCKDOWN_E_PAIRING_FAILED if the pairing failed, LOCKDOWN_E_PASSWORD_PROTECTED if the device is password protected, LOCKDOWN_E_INVALID_HOST_ID if the device does not know the caller's host id | Improve this Doc View Source lockdownd_validate_pair(LockdownClientHandle, LockdownPairRecordHandle) Validates if the device is paired with the given HostID. If successful the specified host will become trusted host of the device indicated by the lockdownd preference named TrustedHostAttached. Otherwise the host must be paired using lockdownd_pair() first. Declaration LockdownError lockdownd_validate_pair(LockdownClientHandle client, LockdownPairRecordHandle pairRecord) Parameters Type Name Description LockdownClientHandle client The lockdown client LockdownPairRecordHandle pairRecord Returns Type Description LockdownError LOCKDOWN_E_SUCCESS on success, LOCKDOWN_E_INVALID_ARG when client is NULL, LOCKDOWN_E_PLIST_ERROR if the pair_record certificates are wrong, LOCKDOWN_E_PAIRING_FAILED if the pairing failed, LOCKDOWN_E_PASSWORD_PROTECTED if the device is password protected, LOCKDOWN_E_INVALID_HOST_ID if the device does not know the caller's host id"
  },
  "api/iMobileDevice.LibiMobileDevice.html": {
    "href": "api/iMobileDevice.LibiMobileDevice.html",
    "title": "Class LibiMobileDevice | imobiledevice-net API",
    "keywords": "Class LibiMobileDevice Inheritance System.Object LibiMobileDevice Implements ILibiMobileDevice Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice Assembly : iMobileDevice-net.dll Syntax public class LibiMobileDevice : ILibiMobileDevice Constructors | Improve this Doc View Source LibiMobileDevice() Declaration public LibiMobileDevice() Properties | Improve this Doc View Source Afc Declaration public virtual IAfcApi Afc { get; set; } Property Value Type Description IAfcApi | Improve this Doc View Source DebugServer Declaration public virtual IDebugServerApi DebugServer { get; set; } Property Value Type Description IDebugServerApi | Improve this Doc View Source DiagnosticsRelay Declaration public virtual IDiagnosticsRelayApi DiagnosticsRelay { get; set; } Property Value Type Description IDiagnosticsRelayApi | Improve this Doc View Source FileRelay Declaration public virtual IFileRelayApi FileRelay { get; set; } Property Value Type Description IFileRelayApi | Improve this Doc View Source HeartBeat Declaration public virtual IHeartBeatApi HeartBeat { get; set; } Property Value Type Description IHeartBeatApi | Improve this Doc View Source HouseArrest Declaration public virtual IHouseArrestApi HouseArrest { get; set; } Property Value Type Description IHouseArrestApi | Improve this Doc View Source iDevice Declaration public virtual IiDeviceApi iDevice { get; set; } Property Value Type Description IiDeviceApi | Improve this Doc View Source InstallationProxy Declaration public virtual IInstallationProxyApi InstallationProxy { get; set; } Property Value Type Description IInstallationProxyApi | Improve this Doc View Source Instance Declaration public static ILibiMobileDevice Instance { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source LibraryFound Declaration public virtual bool LibraryFound { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Lockdown Declaration public virtual ILockdownApi Lockdown { get; set; } Property Value Type Description ILockdownApi | Improve this Doc View Source Misagent Declaration public virtual IMisagentApi Misagent { get; set; } Property Value Type Description IMisagentApi | Improve this Doc View Source Mobileactivation Declaration public virtual IMobileactivationApi Mobileactivation { get; set; } Property Value Type Description IMobileactivationApi | Improve this Doc View Source MobileBackup Declaration public virtual IMobileBackupApi MobileBackup { get; set; } Property Value Type Description IMobileBackupApi | Improve this Doc View Source MobileBackup2 Declaration public virtual IMobileBackup2Api MobileBackup2 { get; set; } Property Value Type Description IMobileBackup2Api | Improve this Doc View Source MobileImageMounter Declaration public virtual IMobileImageMounterApi MobileImageMounter { get; set; } Property Value Type Description IMobileImageMounterApi | Improve this Doc View Source MobileSync Declaration public virtual IMobileSyncApi MobileSync { get; set; } Property Value Type Description IMobileSyncApi | Improve this Doc View Source NotificationProxy Declaration public virtual INotificationProxyApi NotificationProxy { get; set; } Property Value Type Description INotificationProxyApi | Improve this Doc View Source Pinvoke Declaration public virtual IPinvokeApi Pinvoke { get; set; } Property Value Type Description IPinvokeApi | Improve this Doc View Source Plist Declaration public virtual IPlistApi Plist { get; set; } Property Value Type Description IPlistApi | Improve this Doc View Source PropertyListService Declaration public virtual IPropertyListServiceApi PropertyListService { get; set; } Property Value Type Description IPropertyListServiceApi | Improve this Doc View Source Restore Declaration public virtual IRestoreApi Restore { get; set; } Property Value Type Description IRestoreApi | Improve this Doc View Source Screenshotr Declaration public virtual IScreenshotrApi Screenshotr { get; set; } Property Value Type Description IScreenshotrApi | Improve this Doc View Source Service Declaration public virtual IServiceApi Service { get; set; } Property Value Type Description IServiceApi | Improve this Doc View Source SpringBoardServices Declaration public virtual ISpringBoardServicesApi SpringBoardServices { get; set; } Property Value Type Description ISpringBoardServicesApi | Improve this Doc View Source SyslogRelay Declaration public virtual ISyslogRelayApi SyslogRelay { get; set; } Property Value Type Description ISyslogRelayApi | Improve this Doc View Source Usbmuxd Declaration public virtual IUsbmuxdApi Usbmuxd { get; set; } Property Value Type Description IUsbmuxdApi | Improve this Doc View Source WebInspector Declaration public virtual IWebInspectorApi WebInspector { get; set; } Property Value Type Description IWebInspectorApi Implements ILibiMobileDevice"
  },
  "api/iMobileDevice.iDevice.IiDeviceApi.html": {
    "href": "api/iMobileDevice.iDevice.IiDeviceApi.html",
    "title": "Interface IiDeviceApi | imobiledevice-net API",
    "keywords": "Interface IiDeviceApi Namespace : iMobileDevice.iDevice Assembly : iMobileDevice-net.dll Syntax public interface IiDeviceApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.iDevice . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source idevice_connect(iDeviceHandle, UInt16, out iDeviceConnectionHandle) Set up a connection to the given device. Declaration iDeviceError idevice_connect(iDeviceHandle device, ushort port, out iDeviceConnectionHandle connection) Parameters Type Name Description iDeviceHandle device The device to connect to. System.UInt16 port The destination port to connect to. iDeviceConnectionHandle connection Pointer to an idevice_connection_t that will be filled with the necessary data of the connection. Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. | Improve this Doc View Source idevice_connection_disable_ssl(iDeviceConnectionHandle) Disable SSL for the given connection. Declaration iDeviceError idevice_connection_disable_ssl(iDeviceConnectionHandle connection) Parameters Type Name Description iDeviceConnectionHandle connection The connection to disable SSL for. Returns Type Description iDeviceError IDEVICE_E_SUCCESS on success, IDEVICE_E_INVALID_ARG when connection is NULL. This function also returns IDEVICE_E_SUCCESS when SSL is not enabled and does no further error checking on cleanup. | Improve this Doc View Source idevice_connection_enable_ssl(iDeviceConnectionHandle) Enables SSL for the given connection. Declaration iDeviceError idevice_connection_enable_ssl(iDeviceConnectionHandle connection) Parameters Type Name Description iDeviceConnectionHandle connection The connection to enable SSL for. Returns Type Description iDeviceError IDEVICE_E_SUCCESS on success, IDEVICE_E_INVALID_ARG when connection is NULL or connection->ssl_data is non-NULL, or IDEVICE_E_SSL_ERROR when SSL initialization, setup, or handshake fails. | Improve this Doc View Source idevice_connection_get_fd(iDeviceConnectionHandle, ref Int32) Get the underlying file descriptor for a connection Declaration iDeviceError idevice_connection_get_fd(iDeviceConnectionHandle connection, ref int fd) Parameters Type Name Description iDeviceConnectionHandle connection The connection to get fd of System.Int32 fd Pointer to an int where the fd is stored Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. | Improve this Doc View Source idevice_connection_receive(iDeviceConnectionHandle, Byte[], UInt32, ref UInt32) Receive data from a device via the given connection. This function is like idevice_connection_receive_timeout, but with a predefined reasonable timeout. Declaration iDeviceError idevice_connection_receive(iDeviceConnectionHandle connection, byte[] data, uint len, ref uint recvBytes) Parameters Type Name Description iDeviceConnectionHandle connection The connection to receive data from. System.Byte [] data Buffer that will be filled with the received data. This buffer has to be large enough to hold len bytes. System.UInt32 len Buffer size or number of bytes to receive. System.UInt32 recvBytes Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. | Improve this Doc View Source idevice_connection_receive_timeout(iDeviceConnectionHandle, Byte[], UInt32, ref UInt32, UInt32) Receive data from a device via the given connection. This function will return after the given timeout even if no data has been received. Declaration iDeviceError idevice_connection_receive_timeout(iDeviceConnectionHandle connection, byte[] data, uint len, ref uint recvBytes, uint timeout) Parameters Type Name Description iDeviceConnectionHandle connection The connection to receive data from. System.Byte [] data Buffer that will be filled with the received data. This buffer has to be large enough to hold len bytes. System.UInt32 len Buffer size or number of bytes to receive. System.UInt32 recvBytes System.UInt32 timeout Timeout in milliseconds after which this function should return even if no data has been received. Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. | Improve this Doc View Source idevice_connection_send(iDeviceConnectionHandle, Byte[], UInt32, ref UInt32) Send data to a device via the given connection. Declaration iDeviceError idevice_connection_send(iDeviceConnectionHandle connection, byte[] data, uint len, ref uint sentBytes) Parameters Type Name Description iDeviceConnectionHandle connection The connection to send data over. System.Byte [] data Buffer with data to send. System.UInt32 len Size of the buffer to send. System.UInt32 sentBytes Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. | Improve this Doc View Source idevice_device_list_free(IntPtr) Free a list of device udids. Declaration iDeviceError idevice_device_list_free(IntPtr devices) Parameters Type Name Description System.IntPtr devices List of udids to free. Returns Type Description iDeviceError Always returnes IDEVICE_E_SUCCESS. | Improve this Doc View Source idevice_disconnect(IntPtr) Disconnect from the device and clean up the connection structure. Declaration iDeviceError idevice_disconnect(IntPtr connection) Parameters Type Name Description System.IntPtr connection The connection to close. Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. | Improve this Doc View Source idevice_event_subscribe(iDeviceEventCallBack, IntPtr) Register a callback function that will be called when device add/remove events occur. Declaration iDeviceError idevice_event_subscribe(iDeviceEventCallBack callback, IntPtr userData) Parameters Type Name Description iDeviceEventCallBack callback Callback function to call. System.IntPtr userData Returns Type Description iDeviceError IDEVICE_E_SUCCESS on success or an error value when an error occured. | Improve this Doc View Source idevice_event_unsubscribe() Release the event callback function that has been registered with idevice_event_subscribe(). Declaration iDeviceError idevice_event_unsubscribe() Returns Type Description iDeviceError IDEVICE_E_SUCCESS on success or an error value when an error occured. | Improve this Doc View Source idevice_free(IntPtr) Cleans up an idevice structure, then frees the structure itself. This is a library-level function; deals directly with the device to tear down relations, but otherwise is mostly internal. Declaration iDeviceError idevice_free(IntPtr device) Parameters Type Name Description System.IntPtr device idevice_t to free. Returns Type Description iDeviceError | Improve this Doc View Source idevice_get_device_list(out ReadOnlyCollection<String>, ref Int32) Get a list of currently available devices. Declaration iDeviceError idevice_get_device_list(out ReadOnlyCollection<string> devices, ref int count) Parameters Type Name Description System.Collections.ObjectModel.ReadOnlyCollection < System.String > devices List of udids of devices that are currently available. This list is terminated by a NULL pointer. System.Int32 count Number of devices found. Returns Type Description iDeviceError IDEVICE_E_SUCCESS on success or an error value when an error occured. | Improve this Doc View Source idevice_get_handle(iDeviceHandle, ref UInt32) Gets the handle of the device. Depends on the connection type. Declaration iDeviceError idevice_get_handle(iDeviceHandle device, ref uint handle) Parameters Type Name Description iDeviceHandle device System.UInt32 handle Returns Type Description iDeviceError | Improve this Doc View Source idevice_get_socket_type(ref Int32) Gets the socket type (Unix socket or TCP socket) libimobiledevice should use when connecting to usbmuxd. Declaration iDeviceError idevice_get_socket_type(ref int value) Parameters Type Name Description System.Int32 value A pointer to an integer which will reveive the current socket type Returns Type Description iDeviceError 0 on success or negative on error | Improve this Doc View Source idevice_get_tcp_endpoint(out String, ref UInt16) Gets the TCP endpoint to which libimobiledevice will connect if the socket type is set to SOCKET_TYPE_TCP Declaration iDeviceError idevice_get_tcp_endpoint(out string host, ref ushort port) Parameters Type Name Description System.String host A pointer which will be set to the hostname or IP address to which to connect. The caller must free this string. System.UInt16 port The port to which to connect Returns Type Description iDeviceError 0 on success or negative on error | Improve this Doc View Source idevice_get_udid(iDeviceHandle, out String) Gets the unique id for the device. Declaration iDeviceError idevice_get_udid(iDeviceHandle device, out string udid) Parameters Type Name Description iDeviceHandle device System.String udid Returns Type Description iDeviceError | Improve this Doc View Source idevice_new(out iDeviceHandle, String) Creates an idevice_t structure for the device specified by udid, if the device is available. Declaration iDeviceError idevice_new(out iDeviceHandle device, string udid) Parameters Type Name Description iDeviceHandle device Upon calling this function, a pointer to a location of type idevice_t. On successful return, this location will be populated. System.String udid The UDID to match. Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. Remarks The resulting idevice_t structure has to be freed with idevice_free() if it is no longer used. | Improve this Doc View Source idevice_set_debug_callback(iDeviceDebugCallBack) Sets the callback to invoke when writing out debug messages. If this callback is set, messages will be written to this callback instead of the standard output. Declaration void idevice_set_debug_callback(iDeviceDebugCallBack callback) Parameters Type Name Description iDeviceDebugCallBack callback The callback which will receive the debug messages. Set to NULL to redirect to stdout. | Improve this Doc View Source idevice_set_debug_level(Int32) Set the level of debugging. Declaration void idevice_set_debug_level(int level) Parameters Type Name Description System.Int32 level Set to 0 for no debug output, 1 to enable basic debug output and 2 to enable full debug output. When set to 2, the values of buffers being sent across the wire are printed out as well, this results in very verbose output. | Improve this Doc View Source idevice_set_socket_type(Int32) Sets the socket type (Unix socket or TCP socket) libimobiledevice should use when connecting to usbmuxd. Declaration iDeviceError idevice_set_socket_type(int value) Parameters Type Name Description System.Int32 value IDEVICE_SOCKET_TYPE_UNIX or IDEVICE_SOCKET_TYPE_TCP Returns Type Description iDeviceError 0 on success or negative on error | Improve this Doc View Source idevice_set_tcp_endpoint(String, UInt16) Sets the TCP endpoint to which libimobiledevice will connect if the socket type is set to SOCKET_TYPE_TCP Declaration iDeviceError idevice_set_tcp_endpoint(string host, ushort port) Parameters Type Name Description System.String host The hostname or IP address to which to connect System.UInt16 port The port to which to connect. Returns Type Description iDeviceError 0 on success or negative on error"
  },
  "api/iMobileDevice.iDevice.iDeviceSocketType.html": {
    "href": "api/iMobileDevice.iDevice.iDeviceSocketType.html",
    "title": "Enum iDeviceSocketType | imobiledevice-net API",
    "keywords": "Enum iDeviceSocketType specifies how libusbmuxd should connect to usbmuxd Namespace : iMobileDevice.iDevice Assembly : iMobileDevice-net.dll Syntax public enum iDeviceSocketType Fields Name Description SocketTypeTcp SocketTypeUnix"
  },
  "api/iMobileDevice.iDevice.iDeviceApi.html": {
    "href": "api/iMobileDevice.iDevice.iDeviceApi.html",
    "title": "Class iDeviceApi | imobiledevice-net API",
    "keywords": "Class iDeviceApi Inheritance System.Object iDeviceApi Implements IiDeviceApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.iDevice Assembly : iMobileDevice-net.dll Syntax public class iDeviceApi : IiDeviceApi Constructors | Improve this Doc View Source iDeviceApi(ILibiMobileDevice) Declaration public iDeviceApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source idevice_connect(iDeviceHandle, UInt16, out iDeviceConnectionHandle) Set up a connection to the given device. Declaration public virtual iDeviceError idevice_connect(iDeviceHandle device, ushort port, out iDeviceConnectionHandle connection) Parameters Type Name Description iDeviceHandle device The device to connect to. System.UInt16 port The destination port to connect to. iDeviceConnectionHandle connection Pointer to an idevice_connection_t that will be filled with the necessary data of the connection. Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. | Improve this Doc View Source idevice_connection_disable_ssl(iDeviceConnectionHandle) Disable SSL for the given connection. Declaration public virtual iDeviceError idevice_connection_disable_ssl(iDeviceConnectionHandle connection) Parameters Type Name Description iDeviceConnectionHandle connection The connection to disable SSL for. Returns Type Description iDeviceError IDEVICE_E_SUCCESS on success, IDEVICE_E_INVALID_ARG when connection is NULL. This function also returns IDEVICE_E_SUCCESS when SSL is not enabled and does no further error checking on cleanup. | Improve this Doc View Source idevice_connection_enable_ssl(iDeviceConnectionHandle) Enables SSL for the given connection. Declaration public virtual iDeviceError idevice_connection_enable_ssl(iDeviceConnectionHandle connection) Parameters Type Name Description iDeviceConnectionHandle connection The connection to enable SSL for. Returns Type Description iDeviceError IDEVICE_E_SUCCESS on success, IDEVICE_E_INVALID_ARG when connection is NULL or connection->ssl_data is non-NULL, or IDEVICE_E_SSL_ERROR when SSL initialization, setup, or handshake fails. | Improve this Doc View Source idevice_connection_get_fd(iDeviceConnectionHandle, ref Int32) Get the underlying file descriptor for a connection Declaration public virtual iDeviceError idevice_connection_get_fd(iDeviceConnectionHandle connection, ref int fd) Parameters Type Name Description iDeviceConnectionHandle connection The connection to get fd of System.Int32 fd Pointer to an int where the fd is stored Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. | Improve this Doc View Source idevice_connection_receive(iDeviceConnectionHandle, Byte[], UInt32, ref UInt32) Receive data from a device via the given connection. This function is like idevice_connection_receive_timeout, but with a predefined reasonable timeout. Declaration public virtual iDeviceError idevice_connection_receive(iDeviceConnectionHandle connection, byte[] data, uint len, ref uint recvBytes) Parameters Type Name Description iDeviceConnectionHandle connection The connection to receive data from. System.Byte [] data Buffer that will be filled with the received data. This buffer has to be large enough to hold len bytes. System.UInt32 len Buffer size or number of bytes to receive. System.UInt32 recvBytes Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. | Improve this Doc View Source idevice_connection_receive_timeout(iDeviceConnectionHandle, Byte[], UInt32, ref UInt32, UInt32) Receive data from a device via the given connection. This function will return after the given timeout even if no data has been received. Declaration public virtual iDeviceError idevice_connection_receive_timeout(iDeviceConnectionHandle connection, byte[] data, uint len, ref uint recvBytes, uint timeout) Parameters Type Name Description iDeviceConnectionHandle connection The connection to receive data from. System.Byte [] data Buffer that will be filled with the received data. This buffer has to be large enough to hold len bytes. System.UInt32 len Buffer size or number of bytes to receive. System.UInt32 recvBytes System.UInt32 timeout Timeout in milliseconds after which this function should return even if no data has been received. Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. | Improve this Doc View Source idevice_connection_send(iDeviceConnectionHandle, Byte[], UInt32, ref UInt32) Send data to a device via the given connection. Declaration public virtual iDeviceError idevice_connection_send(iDeviceConnectionHandle connection, byte[] data, uint len, ref uint sentBytes) Parameters Type Name Description iDeviceConnectionHandle connection The connection to send data over. System.Byte [] data Buffer with data to send. System.UInt32 len Size of the buffer to send. System.UInt32 sentBytes Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. | Improve this Doc View Source idevice_device_list_free(IntPtr) Free a list of device udids. Declaration public virtual iDeviceError idevice_device_list_free(IntPtr devices) Parameters Type Name Description System.IntPtr devices List of udids to free. Returns Type Description iDeviceError Always returnes IDEVICE_E_SUCCESS. | Improve this Doc View Source idevice_disconnect(IntPtr) Disconnect from the device and clean up the connection structure. Declaration public virtual iDeviceError idevice_disconnect(IntPtr connection) Parameters Type Name Description System.IntPtr connection The connection to close. Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. | Improve this Doc View Source idevice_event_subscribe(iDeviceEventCallBack, IntPtr) Register a callback function that will be called when device add/remove events occur. Declaration public virtual iDeviceError idevice_event_subscribe(iDeviceEventCallBack callback, IntPtr userData) Parameters Type Name Description iDeviceEventCallBack callback Callback function to call. System.IntPtr userData Returns Type Description iDeviceError IDEVICE_E_SUCCESS on success or an error value when an error occured. | Improve this Doc View Source idevice_event_unsubscribe() Release the event callback function that has been registered with idevice_event_subscribe(). Declaration public virtual iDeviceError idevice_event_unsubscribe() Returns Type Description iDeviceError IDEVICE_E_SUCCESS on success or an error value when an error occured. | Improve this Doc View Source idevice_free(IntPtr) Cleans up an idevice structure, then frees the structure itself. This is a library-level function; deals directly with the device to tear down relations, but otherwise is mostly internal. Declaration public virtual iDeviceError idevice_free(IntPtr device) Parameters Type Name Description System.IntPtr device idevice_t to free. Returns Type Description iDeviceError | Improve this Doc View Source idevice_get_device_list(out ReadOnlyCollection<String>, ref Int32) Get a list of currently available devices. Declaration public virtual iDeviceError idevice_get_device_list(out ReadOnlyCollection<string> devices, ref int count) Parameters Type Name Description System.Collections.ObjectModel.ReadOnlyCollection < System.String > devices List of udids of devices that are currently available. This list is terminated by a NULL pointer. System.Int32 count Number of devices found. Returns Type Description iDeviceError IDEVICE_E_SUCCESS on success or an error value when an error occured. | Improve this Doc View Source idevice_get_handle(iDeviceHandle, ref UInt32) Gets the handle of the device. Depends on the connection type. Declaration public virtual iDeviceError idevice_get_handle(iDeviceHandle device, ref uint handle) Parameters Type Name Description iDeviceHandle device System.UInt32 handle Returns Type Description iDeviceError | Improve this Doc View Source idevice_get_socket_type(ref Int32) Gets the socket type (Unix socket or TCP socket) libimobiledevice should use when connecting to usbmuxd. Declaration public virtual iDeviceError idevice_get_socket_type(ref int value) Parameters Type Name Description System.Int32 value A pointer to an integer which will reveive the current socket type Returns Type Description iDeviceError 0 on success or negative on error | Improve this Doc View Source idevice_get_tcp_endpoint(out String, ref UInt16) Gets the TCP endpoint to which libimobiledevice will connect if the socket type is set to SOCKET_TYPE_TCP Declaration public virtual iDeviceError idevice_get_tcp_endpoint(out string host, ref ushort port) Parameters Type Name Description System.String host A pointer which will be set to the hostname or IP address to which to connect. The caller must free this string. System.UInt16 port The port to which to connect Returns Type Description iDeviceError 0 on success or negative on error | Improve this Doc View Source idevice_get_udid(iDeviceHandle, out String) Gets the unique id for the device. Declaration public virtual iDeviceError idevice_get_udid(iDeviceHandle device, out string udid) Parameters Type Name Description iDeviceHandle device System.String udid Returns Type Description iDeviceError | Improve this Doc View Source idevice_new(out iDeviceHandle, String) Creates an idevice_t structure for the device specified by udid, if the device is available. Declaration public virtual iDeviceError idevice_new(out iDeviceHandle device, string udid) Parameters Type Name Description iDeviceHandle device Upon calling this function, a pointer to a location of type idevice_t. On successful return, this location will be populated. System.String udid The UDID to match. Returns Type Description iDeviceError IDEVICE_E_SUCCESS if ok, otherwise an error code. Remarks The resulting idevice_t structure has to be freed with idevice_free() if it is no longer used. | Improve this Doc View Source idevice_set_debug_callback(iDeviceDebugCallBack) Sets the callback to invoke when writing out debug messages. If this callback is set, messages will be written to this callback instead of the standard output. Declaration public virtual void idevice_set_debug_callback(iDeviceDebugCallBack callback) Parameters Type Name Description iDeviceDebugCallBack callback The callback which will receive the debug messages. Set to NULL to redirect to stdout. | Improve this Doc View Source idevice_set_debug_level(Int32) Set the level of debugging. Declaration public virtual void idevice_set_debug_level(int level) Parameters Type Name Description System.Int32 level Set to 0 for no debug output, 1 to enable basic debug output and 2 to enable full debug output. When set to 2, the values of buffers being sent across the wire are printed out as well, this results in very verbose output. | Improve this Doc View Source idevice_set_socket_type(Int32) Sets the socket type (Unix socket or TCP socket) libimobiledevice should use when connecting to usbmuxd. Declaration public virtual iDeviceError idevice_set_socket_type(int value) Parameters Type Name Description System.Int32 value IDEVICE_SOCKET_TYPE_UNIX or IDEVICE_SOCKET_TYPE_TCP Returns Type Description iDeviceError 0 on success or negative on error | Improve this Doc View Source idevice_set_tcp_endpoint(String, UInt16) Sets the TCP endpoint to which libimobiledevice will connect if the socket type is set to SOCKET_TYPE_TCP Declaration public virtual iDeviceError idevice_set_tcp_endpoint(string host, ushort port) Parameters Type Name Description System.String host The hostname or IP address to which to connect System.UInt16 port The port to which to connect. Returns Type Description iDeviceError 0 on success or negative on error Implements IiDeviceApi"
  },
  "api/iMobileDevice.HouseArrest.html": {
    "href": "api/iMobileDevice.HouseArrest.html",
    "title": "Namespace iMobileDevice.HouseArrest | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.HouseArrest Classes HouseArrestApi HouseArrestClientHandle HouseArrestClientHandleDelegateMarshaler HouseArrestErrorExtensions HouseArrestException HouseArrestNativeMethods Interfaces IHouseArrestApi Enums HouseArrestError Error Codes"
  },
  "api/iMobileDevice.HeartBeat.html": {
    "href": "api/iMobileDevice.HeartBeat.html",
    "title": "Namespace iMobileDevice.HeartBeat | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.HeartBeat Classes HeartBeatApi HeartBeatClientHandle HeartBeatClientHandleDelegateMarshaler HeartBeatErrorExtensions HeartBeatException HeartBeatNativeMethods Interfaces IHeartBeatApi Enums HeartBeatError Error Codes"
  },
  "api/iMobileDevice.HeartBeat.HeartBeatApi.html": {
    "href": "api/iMobileDevice.HeartBeat.HeartBeatApi.html",
    "title": "Class HeartBeatApi | imobiledevice-net API",
    "keywords": "Class HeartBeatApi Inheritance System.Object HeartBeatApi Implements IHeartBeatApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.HeartBeat Assembly : iMobileDevice-net.dll Syntax public class HeartBeatApi : IHeartBeatApi Constructors | Improve this Doc View Source HeartBeatApi(ILibiMobileDevice) Declaration public HeartBeatApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source heartbeat_client_free(IntPtr) Disconnects a heartbeat client from the device and frees up the heartbeat client data. Declaration public virtual HeartBeatError heartbeat_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The heartbeat client to disconnect and free. Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, HEARTBEAT_E_INVALID_ARG when client is NULL, or an HEARTBEAT_E_* error code otherwise. | Improve this Doc View Source heartbeat_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out HeartBeatClientHandle) Connects to the heartbeat service on the specified device. Declaration public virtual HeartBeatError heartbeat_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out HeartBeatClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. HeartBeatClientHandle client Pointer that will point to a newly allocated heartbeat_client_t upon successful return. Must be freed using heartbeat_client_free() after use. Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, HEARTBEAT_E_INVALID_ARG when client is NULL, or an HEARTBEAT_E_* error code otherwise. | Improve this Doc View Source heartbeat_client_start_service(iDeviceHandle, out HeartBeatClientHandle, String) Starts a new heartbeat service on the specified device and connects to it. Declaration public virtual HeartBeatError heartbeat_client_start_service(iDeviceHandle device, out HeartBeatClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. HeartBeatClientHandle client Pointer that will point to a newly allocated heartbeat_client_t upon successful return. Must be freed using heartbeat_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, or an HEARTBEAT_E_* error code otherwise. | Improve this Doc View Source heartbeat_receive(HeartBeatClientHandle, out PlistHandle) Receives a plist from the service. Declaration public virtual HeartBeatError heartbeat_receive(HeartBeatClientHandle client, out PlistHandle plist) Parameters Type Name Description HeartBeatClientHandle client The heartbeat client PlistHandle plist The plist to store the received data Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, HEARTBEAT_E_INVALID_ARG when client or plist is NULL | Improve this Doc View Source heartbeat_receive_with_timeout(HeartBeatClientHandle, out PlistHandle, UInt32) Receives a plist using the given heartbeat client. Declaration public virtual HeartBeatError heartbeat_receive_with_timeout(HeartBeatClientHandle client, out PlistHandle plist, uint timeoutMs) Parameters Type Name Description HeartBeatClientHandle client The heartbeat client to use for receiving PlistHandle plist pointer to a plist_t that will point to the received plist upon successful return System.UInt32 timeoutMs Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, HEARTBEAT_E_INVALID_ARG when client or *plist is NULL, HEARTBEAT_E_PLIST_ERROR when the received data cannot be converted to a plist, HEARTBEAT_E_MUX_ERROR when a communication error occurs, or HEARTBEAT_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source heartbeat_send(HeartBeatClientHandle, PlistHandle) Sends a plist to the service. Declaration public virtual HeartBeatError heartbeat_send(HeartBeatClientHandle client, PlistHandle plist) Parameters Type Name Description HeartBeatClientHandle client The heartbeat client PlistHandle plist The plist to send Returns Type Description HeartBeatError HEARTBEAT_E_SUCCESS on success, HEARTBEAT_E_INVALID_ARG when client or plist is NULL Implements IHeartBeatApi"
  },
  "api/iMobileDevice.FileRelay.FileRelayClientHandle.html": {
    "href": "api/iMobileDevice.FileRelay.FileRelayClientHandle.html",
    "title": "Class FileRelayClientHandle | imobiledevice-net API",
    "keywords": "Class FileRelayClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid FileRelayClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.FileRelay Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class FileRelayClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source FileRelayClientHandle() Declaration protected FileRelayClientHandle() | Improve this Doc View Source FileRelayClientHandle(Boolean) Declaration protected FileRelayClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static FileRelayClientHandle Zero { get; } Property Value Type Description FileRelayClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static FileRelayClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description FileRelayClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static FileRelayClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description FileRelayClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.DiagnosticsRelay.DiagnosticsRelayErrorExtensions.html": {
    "href": "api/iMobileDevice.DiagnosticsRelay.DiagnosticsRelayErrorExtensions.html",
    "title": "Class DiagnosticsRelayErrorExtensions | imobiledevice-net API",
    "keywords": "Class DiagnosticsRelayErrorExtensions Inheritance System.Object DiagnosticsRelayErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.DiagnosticsRelay Assembly : iMobileDevice-net.dll Syntax public static class DiagnosticsRelayErrorExtensions Methods | Improve this Doc View Source IsError(DiagnosticsRelayError) Declaration public static bool IsError(this DiagnosticsRelayError value) Parameters Type Name Description DiagnosticsRelayError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(DiagnosticsRelayError) Declaration public static void ThrowOnError(this DiagnosticsRelayError value) Parameters Type Name Description DiagnosticsRelayError value | Improve this Doc View Source ThrowOnError(DiagnosticsRelayError, String) Declaration public static void ThrowOnError(this DiagnosticsRelayError value, string message) Parameters Type Name Description DiagnosticsRelayError value System.String message"
  },
  "api/iMobileDevice.DebugServer.IDebugServerApi.html": {
    "href": "api/iMobileDevice.DebugServer.IDebugServerApi.html",
    "title": "Interface IDebugServerApi | imobiledevice-net API",
    "keywords": "Interface IDebugServerApi Namespace : iMobileDevice.DebugServer Assembly : iMobileDevice-net.dll Syntax public interface IDebugServerApi Properties | Improve this Doc View Source Parent Gets or sets the which owns this iMobileDevice.DebugServer . Declaration ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source debugserver_client_free(IntPtr) Disconnects a debugserver client from the device and frees up the debugserver client data. Declaration DebugServerError debugserver_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The debugserver client to disconnect and free. Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client is NULL, or an DEBUGSERVER_E_* error code otherwise. | Improve this Doc View Source debugserver_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out DebugServerClientHandle) Connects to the debugserver service on the specified device. Declaration DebugServerError debugserver_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out DebugServerClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. DebugServerClientHandle client Pointer that will point to a newly allocated debugserver_client_t upon successful return. Must be freed using debugserver_client_free() after use. Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client is NULL, or an DEBUGSERVER_E_* error code otherwise. | Improve this Doc View Source debugserver_client_receive(DebugServerClientHandle, Byte[], UInt32, ref UInt32) Receives raw data from the debugserver service. Declaration DebugServerError debugserver_client_receive(DebugServerClientHandle client, byte[] data, uint size, ref uint received) Parameters Type Name Description DebugServerClientHandle client The debugserver client System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client or plist is NULL Remarks The default read timeout is 10 seconds. | Improve this Doc View Source debugserver_client_receive_response(DebugServerClientHandle, out String) Receives and parses response of debugserver service. Declaration DebugServerError debugserver_client_receive_response(DebugServerClientHandle client, out string response) Parameters Type Name Description DebugServerClientHandle client The debugserver client System.String response Response received for last command (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client is NULL | Improve this Doc View Source debugserver_client_receive_with_timeout(DebugServerClientHandle, Byte[], UInt32, ref UInt32, UInt32) Receives raw data using the given debugserver client with specified timeout. Declaration DebugServerError debugserver_client_receive_with_timeout(DebugServerClientHandle client, byte[] data, uint size, ref uint received, uint timeout) Parameters Type Name Description DebugServerClientHandle client The debugserver client to use for receiving System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) System.UInt32 timeout Maximum time in milliseconds to wait for data. Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when one or more parameters are invalid, DEBUGSERVER_E_MUX_ERROR when a communication error occurs, or DEBUGSERVER_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source debugserver_client_send(DebugServerClientHandle, Byte[], UInt32, ref UInt32) Sends raw data using the given debugserver service client. Declaration DebugServerError debugserver_client_send(DebugServerClientHandle client, byte[] data, uint size, ref uint sent) Parameters Type Name Description DebugServerClientHandle client The debugserver client to use for sending System.Byte [] data Data to send System.UInt32 size Size of the data to send System.UInt32 sent Number of bytes sent (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when one or more parameters are invalid, or DEBUGSERVER_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source debugserver_client_send_command(DebugServerClientHandle, DebugServerCommandHandle, out String) Sends a command to the debugserver service. Declaration DebugServerError debugserver_client_send_command(DebugServerClientHandle client, DebugServerCommandHandle command, out string response) Parameters Type Name Description DebugServerClientHandle client The debugserver client DebugServerCommandHandle command Command to process and send System.String response Response received for the command (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client or command is NULL | Improve this Doc View Source debugserver_client_set_ack_mode(DebugServerClientHandle, Int32) Controls status of ACK mode when sending commands or receiving responses. Declaration DebugServerError debugserver_client_set_ack_mode(DebugServerClientHandle client, int enabled) Parameters Type Name Description DebugServerClientHandle client The debugserver client System.Int32 enabled A boolean flag indicating whether the internal ACK mode handling should be enabled or disabled. Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, or an DEBUGSERVER_E_* error code otherwise. | Improve this Doc View Source debugserver_client_set_argv(DebugServerClientHandle, Int32, ReadOnlyCollection<String>, out String) Sets the argv which launches an app. Declaration DebugServerError debugserver_client_set_argv(DebugServerClientHandle client, int argc, ReadOnlyCollection<string> argv, out string response) Parameters Type Name Description DebugServerClientHandle client The debugserver client System.Int32 argc Number of arguments System.Collections.ObjectModel.ReadOnlyCollection < System.String > argv Array starting with the executable to be run followed by it's arguments System.String response Response received for the command (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client is NULL | Improve this Doc View Source debugserver_client_set_environment_hex_encoded(DebugServerClientHandle, String, out String) Adds or sets an environment variable. Declaration DebugServerError debugserver_client_set_environment_hex_encoded(DebugServerClientHandle client, string env, out string response) Parameters Type Name Description DebugServerClientHandle client The debugserver client System.String env The environment variable in \"KEY=VALUE\" notation System.String response Response received for the command (can be NULL to ignore) Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when client is NULL | Improve this Doc View Source debugserver_client_start_service(iDeviceHandle, out DebugServerClientHandle, String) Starts a new debugserver service on the specified device and connects to it. Declaration DebugServerError debugserver_client_start_service(iDeviceHandle device, out DebugServerClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. DebugServerClientHandle client Pointer that will point to a newly allocated debugserver_client_t upon successful return. Must be freed using debugserver_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, or an DEBUGSERVER_E_* error code otherwise. | Improve this Doc View Source debugserver_command_free(IntPtr) Frees memory of command object. Declaration DebugServerError debugserver_command_free(IntPtr command) Parameters Type Name Description System.IntPtr command The command object Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when command is NULL | Improve this Doc View Source debugserver_command_new(String, Int32, ReadOnlyCollection<String>, out DebugServerCommandHandle) Creates and initializes a new command object. Declaration DebugServerError debugserver_command_new(string name, int argc, ReadOnlyCollection<string> argv, out DebugServerCommandHandle command) Parameters Type Name Description System.String name The name of the command which is sent in plain text System.Int32 argc Number of items in the token array System.Collections.ObjectModel.ReadOnlyCollection < System.String > argv Array of tokens for the command ment to be encoded DebugServerCommandHandle command New command object Returns Type Description DebugServerError DEBUGSERVER_E_SUCCESS on success, DEBUGSERVER_E_INVALID_ARG when name or command is NULL | Improve this Doc View Source debugserver_decode_string(String, UInt32, out String) Decodes a hex encoded string. Declaration void debugserver_decode_string(string encodedBuffer, uint encodedLength, out string buffer) Parameters Type Name Description System.String encodedBuffer System.UInt32 encodedLength System.String buffer Decoded string to be freed by the caller | Improve this Doc View Source debugserver_encode_string(String, out String, ref UInt32) Encodes a string into hex notation. Declaration void debugserver_encode_string(string buffer, out string encodedBuffer, ref uint encodedLength) Parameters Type Name Description System.String buffer String to encode into hex notiation System.String encodedBuffer System.UInt32 encodedLength"
  },
  "api/iMobileDevice.DebugServer.DebugServerClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.DebugServer.DebugServerClientHandleDelegateMarshaler.html",
    "title": "Class DebugServerClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class DebugServerClientHandleDelegateMarshaler Inheritance System.Object DebugServerClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.DebugServer Assembly : iMobileDevice-net.dll Syntax public class DebugServerClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.Afc.AfcLockOp.html": {
    "href": "api/iMobileDevice.Afc.AfcLockOp.html",
    "title": "Enum AfcLockOp | imobiledevice-net API",
    "keywords": "Enum AfcLockOp Lock operation flags Namespace : iMobileDevice.Afc Assembly : iMobileDevice-net.dll Syntax public enum AfcLockOp Fields Name Description LockEx LockSh LockUn"
  },
  "api/iMobileDevice.Afc.AfcDictionaryMarshaler.html": {
    "href": "api/iMobileDevice.Afc.AfcDictionaryMarshaler.html",
    "title": "Class AfcDictionaryMarshaler | imobiledevice-net API",
    "keywords": "Class AfcDictionaryMarshaler Inheritance System.Object NativeStringArrayMarshaler AfcDictionaryMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members NativeStringArrayMarshaler.CleanUpManagedData(Object) NativeStringArrayMarshaler.GetNativeDataSize() NativeStringArrayMarshaler.MarshalManagedToNative(Object) NativeStringArrayMarshaler.MarshalNativeToManaged(IntPtr) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Afc Assembly : iMobileDevice-net.dll Syntax public class AfcDictionaryMarshaler : NativeStringArrayMarshaler, ICustomMarshaler Methods | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public override void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Overrides NativeStringArrayMarshaler.CleanUpNativeData(IntPtr) | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.WebInspector.WebInspectorApi.html": {
    "href": "api/iMobileDevice.WebInspector.WebInspectorApi.html",
    "title": "Class WebInspectorApi | imobiledevice-net API",
    "keywords": "Class WebInspectorApi Inheritance System.Object WebInspectorApi Implements IWebInspectorApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.WebInspector Assembly : iMobileDevice-net.dll Syntax public class WebInspectorApi : IWebInspectorApi Constructors | Improve this Doc View Source WebInspectorApi(ILibiMobileDevice) Declaration public WebInspectorApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source webinspector_client_free(IntPtr) Disconnects a webinspector client from the device and frees up the webinspector client data. Declaration public virtual WebInspectorError webinspector_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The webinspector client to disconnect and free. Returns Type Description WebInspectorError WEBINSPECTOR_E_SUCCESS on success, WEBINSPECTOR_E_INVALID_ARG when client is NULL, or an WEBINSPECTOR_E_* error code otherwise. | Improve this Doc View Source webinspector_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out WebInspectorClientHandle) Connects to the webinspector service on the specified device. Declaration public virtual WebInspectorError webinspector_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out WebInspectorClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. WebInspectorClientHandle client Pointer that will point to a newly allocated webinspector_client_t upon successful return. Must be freed using webinspector_client_free() after use. Returns Type Description WebInspectorError WEBINSPECTOR_E_SUCCESS on success, WEBINSPECTOR_E_INVALID_ARG when client is NULL, or an WEBINSPECTOR_E_* error code otherwise. | Improve this Doc View Source webinspector_client_start_service(iDeviceHandle, out WebInspectorClientHandle, String) Starts a new webinspector service on the specified device and connects to it. Declaration public virtual WebInspectorError webinspector_client_start_service(iDeviceHandle device, out WebInspectorClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. WebInspectorClientHandle client Pointer that will point to a newly allocated webinspector_client_t upon successful return. Must be freed using webinspector_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description WebInspectorError WEBINSPECTOR_E_SUCCESS on success, or an WEBINSPECTOR_E_* error code otherwise. | Improve this Doc View Source webinspector_receive(WebInspectorClientHandle, out PlistHandle) Receives a plist from the service. Declaration public virtual WebInspectorError webinspector_receive(WebInspectorClientHandle client, out PlistHandle plist) Parameters Type Name Description WebInspectorClientHandle client The webinspector client PlistHandle plist The plist to store the received data Returns Type Description WebInspectorError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client or plist is NULL | Improve this Doc View Source webinspector_receive_with_timeout(WebInspectorClientHandle, out PlistHandle, UInt32) Receives a plist using the given webinspector client. Declaration public virtual WebInspectorError webinspector_receive_with_timeout(WebInspectorClientHandle client, out PlistHandle plist, uint timeoutMs) Parameters Type Name Description WebInspectorClientHandle client The webinspector client to use for receiving PlistHandle plist pointer to a plist_t that will point to the received plist upon successful return System.UInt32 timeoutMs Returns Type Description WebInspectorError WEBINSPECTOR_E_SUCCESS on success, WEBINSPECTOR_E_INVALID_ARG when client or *plist is NULL, WEBINSPECTOR_E_PLIST_ERROR when the received data cannot be converted to a plist, WEBINSPECTOR_E_MUX_ERROR when a communication error occurs, or WEBINSPECTOR_E_UNKNOWN_ERROR when an unspecified error occurs. | Improve this Doc View Source webinspector_send(WebInspectorClientHandle, PlistHandle) Sends a plist to the service. Declaration public virtual WebInspectorError webinspector_send(WebInspectorClientHandle client, PlistHandle plist) Parameters Type Name Description WebInspectorClientHandle client The webinspector client PlistHandle plist The plist to send Returns Type Description WebInspectorError DIAGNOSTICS_RELAY_E_SUCCESS on success, DIAGNOSTICS_RELAY_E_INVALID_ARG when client or plist is NULL Implements IWebInspectorApi"
  },
  "api/iMobileDevice.SyslogRelay.html": {
    "href": "api/iMobileDevice.SyslogRelay.html",
    "title": "Namespace iMobileDevice.SyslogRelay | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.SyslogRelay Classes SyslogRelayApi SyslogRelayClientHandle SyslogRelayClientHandleDelegateMarshaler SyslogRelayErrorExtensions SyslogRelayException SyslogRelayNativeMethods Interfaces ISyslogRelayApi Enums SyslogRelayError Error Codes Delegates SyslogRelayReceiveCallBack"
  },
  "api/iMobileDevice.SyslogRelay.SyslogRelayReceiveCallBack.html": {
    "href": "api/iMobileDevice.SyslogRelay.SyslogRelayReceiveCallBack.html",
    "title": "Delegate SyslogRelayReceiveCallBack | imobiledevice-net API",
    "keywords": "Delegate SyslogRelayReceiveCallBack Namespace : iMobileDevice.SyslogRelay Assembly : iMobileDevice-net.dll Syntax public delegate void SyslogRelayReceiveCallBack(sbyte c, IntPtr userData); Parameters Type Name Description System.SByte c System.IntPtr userData"
  },
  "api/iMobileDevice.SyslogRelay.SyslogRelayNativeMethods.html": {
    "href": "api/iMobileDevice.SyslogRelay.SyslogRelayNativeMethods.html",
    "title": "Class SyslogRelayNativeMethods | imobiledevice-net API",
    "keywords": "Class SyslogRelayNativeMethods Inheritance System.Object SyslogRelayNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.SyslogRelay Assembly : iMobileDevice-net.dll Syntax public class SyslogRelayNativeMethods Methods syslog_relay_client_free(IntPtr) Disconnects a syslog_relay client from the device and frees up the syslog_relay client data. Declaration public static SyslogRelayError syslog_relay_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The syslog_relay client to disconnect and free. Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when client is NULL, or an SYSLOG_RELAY_E_* error code otherwise. syslog_relay_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out SyslogRelayClientHandle) Connects to the syslog_relay service on the specified device. Declaration public static SyslogRelayError syslog_relay_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out SyslogRelayClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. SyslogRelayClientHandle client Pointer that will point to a newly allocated syslog_relay_client_t upon successful return. Must be freed using syslog_relay_client_free() after use. Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when client is NULL, or an SYSLOG_RELAY_E_* error code otherwise. syslog_relay_client_start_service(iDeviceHandle, out SyslogRelayClientHandle, String) Starts a new syslog_relay service on the specified device and connects to it. Declaration public static SyslogRelayError syslog_relay_client_start_service(iDeviceHandle device, out SyslogRelayClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. SyslogRelayClientHandle client Pointer that will point to a newly allocated syslog_relay_client_t upon successful return. Must be freed using syslog_relay_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, or an SYSLOG_RELAY_E_* error code otherwise. syslog_relay_receive(SyslogRelayClientHandle, Byte[], UInt32, ref UInt32) Receives data from the service. Declaration public static SyslogRelayError syslog_relay_receive(SyslogRelayClientHandle client, byte[] data, uint size, ref uint received) Parameters Type Name Description SyslogRelayClientHandle client The syslog_relay client System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when client or plist is NULL syslog_relay_receive_with_timeout(SyslogRelayClientHandle, Byte[], UInt32, ref UInt32, UInt32) Receives data using the given syslog_relay client with specified timeout. Declaration public static SyslogRelayError syslog_relay_receive_with_timeout(SyslogRelayClientHandle client, byte[] data, uint size, ref uint received, uint timeout) Parameters Type Name Description SyslogRelayClientHandle client The syslog_relay client to use for receiving System.Byte [] data Buffer that will be filled with the data received System.UInt32 size Number of bytes to receive System.UInt32 received Number of bytes received (can be NULL to ignore) System.UInt32 timeout Maximum time in milliseconds to wait for data. Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when one or more parameters are invalid, SYSLOG_RELAY_E_MUX_ERROR when a communication error occurs, or SYSLOG_RELAY_E_UNKNOWN_ERROR when an unspecified error occurs. syslog_relay_start_capture(SyslogRelayClientHandle, SyslogRelayReceiveCallBack, IntPtr) Starts capturing the syslog of the device using a callback. Use syslog_relay_stop_capture() to stop receiving the syslog. Declaration public static SyslogRelayError syslog_relay_start_capture(SyslogRelayClientHandle client, SyslogRelayReceiveCallBack callback, IntPtr userData) Parameters Type Name Description SyslogRelayClientHandle client The syslog_relay client to use SyslogRelayReceiveCallBack callback Callback to receive each character from the syslog. System.IntPtr userData Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when one or more parameters are invalid or SYSLOG_RELAY_E_UNKNOWN_ERROR when an unspecified error occurs or a syslog capture has already been started. syslog_relay_stop_capture(SyslogRelayClientHandle) Stops capturing the syslog of the device. Use syslog_relay_start_capture() to start receiving the syslog. Declaration public static SyslogRelayError syslog_relay_stop_capture(SyslogRelayClientHandle client) Parameters Type Name Description SyslogRelayClientHandle client The syslog_relay client to use Returns Type Description SyslogRelayError SYSLOG_RELAY_E_SUCCESS on success, SYSLOG_RELAY_E_INVALID_ARG when one or more parameters are invalid or SYSLOG_RELAY_E_UNKNOWN_ERROR when an unspecified error occurs or a syslog capture has already been started."
  },
  "api/iMobileDevice.SyslogRelay.SyslogRelayException.html": {
    "href": "api/iMobileDevice.SyslogRelay.SyslogRelayException.html",
    "title": "Class SyslogRelayException | imobiledevice-net API",
    "keywords": "Class SyslogRelayException Inheritance System.Object System.Exception SyslogRelayException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.SyslogRelay Assembly : iMobileDevice-net.dll Syntax [Serializable] public class SyslogRelayException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source SyslogRelayException() Initializes a new instance of the SyslogRelayException class. Declaration public SyslogRelayException() | Improve this Doc View Source SyslogRelayException(SyslogRelayError) Declaration public SyslogRelayException(SyslogRelayError error) Parameters Type Name Description SyslogRelayError error | Improve this Doc View Source SyslogRelayException(SyslogRelayError, String) Declaration public SyslogRelayException(SyslogRelayError error, string message) Parameters Type Name Description SyslogRelayError error System.String message | Improve this Doc View Source SyslogRelayException(SerializationInfo, StreamingContext) Initializes a new instance of the SyslogRelayException class with serialized data. Declaration protected SyslogRelayException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source SyslogRelayException(String) Initializes a new instance of the SyslogRelayException class with a specified error message. Declaration public SyslogRelayException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source SyslogRelayException(String, Exception) Initializes a new instance of the SyslogRelayException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public SyslogRelayException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual SyslogRelayError ErrorCode { get; } Property Value Type Description SyslogRelayError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.Screenshotr.html": {
    "href": "api/iMobileDevice.Screenshotr.html",
    "title": "Namespace iMobileDevice.Screenshotr | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.Screenshotr Classes ScreenshotrApi ScreenshotrClientHandle ScreenshotrClientHandleDelegateMarshaler ScreenshotrErrorExtensions ScreenshotrException ScreenshotrNativeMethods Interfaces IScreenshotrApi Enums ScreenshotrError Error Codes"
  },
  "api/iMobileDevice.Screenshotr.ScreenshotrNativeMethods.html": {
    "href": "api/iMobileDevice.Screenshotr.ScreenshotrNativeMethods.html",
    "title": "Class ScreenshotrNativeMethods | imobiledevice-net API",
    "keywords": "Class ScreenshotrNativeMethods Inheritance System.Object ScreenshotrNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Screenshotr Assembly : iMobileDevice-net.dll Syntax public class ScreenshotrNativeMethods Methods screenshotr_client_free(IntPtr) Disconnects a screenshotr client from the device and frees up the screenshotr client data. Declaration public static ScreenshotrError screenshotr_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The screenshotr client to disconnect and free. Returns Type Description ScreenshotrError SCREENSHOTR_E_SUCCESS on success, or SCREENSHOTR_E_INVALID_ARG if client is NULL. screenshotr_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out ScreenshotrClientHandle) Connects to the screenshotr service on the specified device. Declaration public static ScreenshotrError screenshotr_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out ScreenshotrClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. ScreenshotrClientHandle client Pointer that will be set to a newly allocated screenshotr_client_t upon successful return. Returns Type Description ScreenshotrError SCREENSHOTR_E_SUCCESS on success, SCREENSHOTR_E_INVALID ARG if one or more parameters are invalid, or SCREENSHOTR_E_CONN_FAILED if the connection to the device could not be established. Remarks This service is only available if a developer disk image has been mounted. screenshotr_client_start_service(iDeviceHandle, out ScreenshotrClientHandle, String) Starts a new screenshotr service on the specified device and connects to it. Declaration public static ScreenshotrError screenshotr_client_start_service(iDeviceHandle device, out ScreenshotrClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. ScreenshotrClientHandle client Pointer that will point to a newly allocated screenshotr_client_t upon successful return. Must be freed using screenshotr_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description ScreenshotrError SCREENSHOTR_E_SUCCESS on success, or an SCREENSHOTR_E_* error code otherwise. screenshotr_screenshot_free(IntPtr) Frees the memory used by a screen shot Declaration public static ScreenshotrError screenshotr_screenshot_free(IntPtr imgdata) Parameters Type Name Description System.IntPtr imgdata The screenshot Returns Type Description ScreenshotrError SCREENSHOTR_E_SUCCESS on success screenshotr_take_screenshot(ScreenshotrClientHandle, ref IntPtr, ref UInt64) Get a screen shot from the connected device. Declaration public static ScreenshotrError screenshotr_take_screenshot(ScreenshotrClientHandle client, ref IntPtr imgdata, ref ulong imgsize) Parameters Type Name Description ScreenshotrClientHandle client The connection screenshotr service client. System.IntPtr imgdata Pointer that will point to a newly allocated buffer containing TIFF image data upon successful return. It is up to the caller to free the memory. System.UInt64 imgsize Pointer to a uint64_t that will be set to the size of the buffer imgdata points to upon successful return. Returns Type Description ScreenshotrError SCREENSHOTR_E_SUCCESS on success, SCREENSHOTR_E_INVALID_ARG if one or more parameters are invalid, or another error code if an error occured."
  },
  "api/iMobileDevice.Screenshotr.ScreenshotrException.html": {
    "href": "api/iMobileDevice.Screenshotr.ScreenshotrException.html",
    "title": "Class ScreenshotrException | imobiledevice-net API",
    "keywords": "Class ScreenshotrException Inheritance System.Object System.Exception ScreenshotrException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.Screenshotr Assembly : iMobileDevice-net.dll Syntax [Serializable] public class ScreenshotrException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source ScreenshotrException() Initializes a new instance of the ScreenshotrException class. Declaration public ScreenshotrException() | Improve this Doc View Source ScreenshotrException(ScreenshotrError) Declaration public ScreenshotrException(ScreenshotrError error) Parameters Type Name Description ScreenshotrError error | Improve this Doc View Source ScreenshotrException(ScreenshotrError, String) Declaration public ScreenshotrException(ScreenshotrError error, string message) Parameters Type Name Description ScreenshotrError error System.String message | Improve this Doc View Source ScreenshotrException(SerializationInfo, StreamingContext) Initializes a new instance of the ScreenshotrException class with serialized data. Declaration protected ScreenshotrException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source ScreenshotrException(String) Initializes a new instance of the ScreenshotrException class with a specified error message. Declaration public ScreenshotrException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source ScreenshotrException(String, Exception) Initializes a new instance of the ScreenshotrException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public ScreenshotrException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual ScreenshotrError ErrorCode { get; } Property Value Type Description ScreenshotrError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.Screenshotr.ScreenshotrErrorExtensions.html": {
    "href": "api/iMobileDevice.Screenshotr.ScreenshotrErrorExtensions.html",
    "title": "Class ScreenshotrErrorExtensions | imobiledevice-net API",
    "keywords": "Class ScreenshotrErrorExtensions Inheritance System.Object ScreenshotrErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Screenshotr Assembly : iMobileDevice-net.dll Syntax public static class ScreenshotrErrorExtensions Methods | Improve this Doc View Source IsError(ScreenshotrError) Declaration public static bool IsError(this ScreenshotrError value) Parameters Type Name Description ScreenshotrError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(ScreenshotrError) Declaration public static void ThrowOnError(this ScreenshotrError value) Parameters Type Name Description ScreenshotrError value | Improve this Doc View Source ThrowOnError(ScreenshotrError, String) Declaration public static void ThrowOnError(this ScreenshotrError value, string message) Parameters Type Name Description ScreenshotrError value System.String message"
  },
  "api/iMobileDevice.PropertyListService.PropertyListServiceError.html": {
    "href": "api/iMobileDevice.PropertyListService.PropertyListServiceError.html",
    "title": "Enum PropertyListServiceError | imobiledevice-net API",
    "keywords": "Enum PropertyListServiceError Namespace : iMobileDevice.PropertyListService Assembly : iMobileDevice-net.dll Syntax public enum PropertyListServiceError Fields Name Description InvalidArg MuxError PlistError ReceiveTimeout SslError Success UnknownError Extension Methods PropertyListServiceErrorExtensions.ThrowOnError() PropertyListServiceErrorExtensions.ThrowOnError(String) PropertyListServiceErrorExtensions.IsError()"
  },
  "api/iMobileDevice.PropertyListService.PropertyListServiceClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.PropertyListService.PropertyListServiceClientHandleDelegateMarshaler.html",
    "title": "Class PropertyListServiceClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class PropertyListServiceClientHandleDelegateMarshaler Inheritance System.Object PropertyListServiceClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.PropertyListService Assembly : iMobileDevice-net.dll Syntax public class PropertyListServiceClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.MobileSync.MobileSyncNativeMethods.html": {
    "href": "api/iMobileDevice.MobileSync.MobileSyncNativeMethods.html",
    "title": "Class MobileSyncNativeMethods | imobiledevice-net API",
    "keywords": "Class MobileSyncNativeMethods Inheritance System.Object MobileSyncNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileSync Assembly : iMobileDevice-net.dll Syntax public class MobileSyncNativeMethods Methods mobilesync_acknowledge_changes_from_device(MobileSyncClientHandle) Acknowledges to the device that the changes have been merged on the computer MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid Declaration public static MobileSyncError mobilesync_acknowledge_changes_from_device(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError mobilesync_actions_add(PlistHandle) Add one or more new key:value pairs to the given actions plist. Declaration public static void mobilesync_actions_add(PlistHandle actions) Parameters Type Name Description PlistHandle actions The actions to modify. Remarks The known keys so far are \"SyncDeviceLinkEntityNamesKey\" which expects an array of entity names, followed by a count paramter as well as \"SyncDeviceLinkAllRecordsOfPulledEntityTypeSentKey\" which expects an integer to use as a boolean value indicating that the device should link submitted changes and report remapped identifiers. mobilesync_actions_free(PlistHandle) Free actions plist. Declaration public static void mobilesync_actions_free(PlistHandle actions) Parameters Type Name Description PlistHandle actions The actions plist to free. Does nothing if NULL is passed. mobilesync_actions_new() Create a new actions plist to use in mobilesync_send_changes(). Declaration public static PlistHandle mobilesync_actions_new() Returns Type Description PlistHandle A new plist_t of type PLIST_DICT. mobilesync_anchors_free(IntPtr) Free memory used by anchors. MOBILESYNC_E_SUCCESS on success Declaration public static MobileSyncError mobilesync_anchors_free(IntPtr anchors) Parameters Type Name Description System.IntPtr anchors The anchors to free. Returns Type Description MobileSyncError mobilesync_anchors_new(String, String, out MobileSyncAnchorsHandle) Allocates memory for a new anchors struct initialized with the passed anchors. MOBILESYNC_E_SUCCESS on success Declaration public static MobileSyncError mobilesync_anchors_new(string deviceAnchor, string computerAnchor, out MobileSyncAnchorsHandle anchor) Parameters Type Name Description System.String deviceAnchor System.String computerAnchor MobileSyncAnchorsHandle anchor Returns Type Description MobileSyncError mobilesync_cancel(MobileSyncClientHandle, String) Cancels a running synchronization session with a device at any time. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid Declaration public static MobileSyncError mobilesync_cancel(MobileSyncClientHandle client, string reason) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client System.String reason The reason to supply to the device for cancelling Returns Type Description MobileSyncError mobilesync_clear_all_records_on_device(MobileSyncClientHandle) Requests the device to delete all records of the current data class MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_PLIST_ERROR if the received plist is not of valid form Declaration public static MobileSyncError mobilesync_clear_all_records_on_device(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError Remarks The operation must be called after starting synchronization. mobilesync_client_free(IntPtr) Disconnects a mobilesync client from the device and frees up the mobilesync client data. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if is NULL. Declaration public static MobileSyncError mobilesync_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The mobilesync client to disconnect and free. Returns Type Description MobileSyncError mobilesync_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MobileSyncClientHandle) Connects to the mobilesync service on the specified device. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one or more parameters are invalid DEVICE_LINK_SERVICE_E_BAD_VERSION if the mobilesync version on the device is newer. Declaration public static MobileSyncError mobilesync_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MobileSyncClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MobileSyncClientHandle client Pointer that will be set to a newly allocated mobilesync_client_t upon successful return. Returns Type Description MobileSyncError mobilesync_client_start_service(iDeviceHandle, out MobileSyncClientHandle, String) Starts a new mobilesync service on the specified device and connects to it. Declaration public static MobileSyncError mobilesync_client_start_service(iDeviceHandle device, out MobileSyncClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MobileSyncClientHandle client Pointer that will point to a newly allocated mobilesync_client_t upon successful return. Must be freed using mobilesync_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MobileSyncError MOBILESYNC_E_SUCCESS on success, or an MOBILESYNC_E_* error code otherwise. mobilesync_finish(MobileSyncClientHandle) Finish a synchronization session of a data class on the device. A session must have previously been started using mobilesync_start(). MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_PLIST_ERROR if the received plist is not of valid form Declaration public static MobileSyncError mobilesync_finish(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError mobilesync_get_all_records_from_device(MobileSyncClientHandle) Requests to receive all records of the currently set data class from the device. The actually changes are retrieved using mobilesync_receive_changes() after this request has been successful. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid Declaration public static MobileSyncError mobilesync_get_all_records_from_device(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError mobilesync_get_changes_from_device(MobileSyncClientHandle) Requests to receive only changed records of the currently set data class from the device. The actually changes are retrieved using mobilesync_receive_changes() after this request has been successful. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid Declaration public static MobileSyncError mobilesync_get_changes_from_device(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError mobilesync_ready_to_send_changes_from_computer(MobileSyncClientHandle) Verifies if the device is ready to receive changes from the computer. This call changes the synchronization direction so that mobilesync_send_changes() can be used to send changes to the device. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_PLIST_ERROR if the received plist is not of valid form MOBILESYNC_E_WRONG_DIRECTION if the current sync direction does not permit this call MOBILESYNC_E_CANCELLED if the device explicitly cancelled the session MOBILESYNC_E_NOT_READY if the device is not ready to start receiving any changes Declaration public static MobileSyncError mobilesync_ready_to_send_changes_from_computer(MobileSyncClientHandle client) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client Returns Type Description MobileSyncError mobilesync_receive(MobileSyncClientHandle, out PlistHandle) Polls the device for mobilesync data. Declaration public static MobileSyncError mobilesync_receive(MobileSyncClientHandle client, out PlistHandle plist) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client PlistHandle plist A pointer to the location where the plist should be stored Returns Type Description MobileSyncError an error code mobilesync_receive_changes(MobileSyncClientHandle, out PlistHandle, ref Char, out PlistHandle) Receives changed entitites of the currently set data class from the device MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_CANCELLED if the device explicitly cancelled the session Declaration public static MobileSyncError mobilesync_receive_changes(MobileSyncClientHandle client, out PlistHandle entities, ref char isLastRecord, out PlistHandle actions) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client PlistHandle entities A pointer to store the changed entity records as a PLIST_DICT System.Char isLastRecord PlistHandle actions A pointer to additional flags the device is sending or NULL to ignore Returns Type Description MobileSyncError mobilesync_remap_identifiers(MobileSyncClientHandle, out PlistHandle) Receives any remapped identifiers reported after the device merged submitted changes. MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_PLIST_ERROR if the received plist is not of valid form MOBILESYNC_E_WRONG_DIRECTION if the current sync direction does not permit this call MOBILESYNC_E_CANCELLED if the device explicitly cancelled the session Declaration public static MobileSyncError mobilesync_remap_identifiers(MobileSyncClientHandle client, out PlistHandle mapping) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client PlistHandle mapping A pointer to an array plist containing a dict of identifier remappings Returns Type Description MobileSyncError mobilesync_send(MobileSyncClientHandle, PlistHandle) Sends mobilesync data to the device Declaration public static MobileSyncError mobilesync_send(MobileSyncClientHandle client, PlistHandle plist) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client PlistHandle plist The location of the plist to send Returns Type Description MobileSyncError an error code Remarks This function is low-level and should only be used if you need to send a new type of message. mobilesync_send_changes(MobileSyncClientHandle, PlistHandle, Char, PlistHandle) Sends changed entities of the currently set data class to the device MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid, MOBILESYNC_E_WRONG_DIRECTION if the current sync direction does not permit this call Declaration public static MobileSyncError mobilesync_send_changes(MobileSyncClientHandle client, PlistHandle entities, char isLastRecord, PlistHandle actions) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client PlistHandle entities The changed entity records as a PLIST_DICT System.Char isLastRecord PlistHandle actions Additional actions for the device created with mobilesync_actions_new() or NULL if no actions should be passed Returns Type Description MobileSyncError mobilesync_start(MobileSyncClientHandle, Byte[], MobileSyncAnchorsHandle, UInt64, ref MobileSyncSyncType, ref UInt64, out IntPtr) Requests starting synchronization of a data class with the device MOBILESYNC_E_SUCCESS on success MOBILESYNC_E_INVALID_ARG if one of the parameters is invalid MOBILESYNC_E_PLIST_ERROR if the received plist is not of valid form MOBILESYNC_E_SYNC_REFUSED if the device refused to sync MOBILESYNC_E_CANCELLED if the device explicitly cancelled the sync request Declaration public static MobileSyncError mobilesync_start(MobileSyncClientHandle client, byte[] dataClass, MobileSyncAnchorsHandle anchors, ulong computerDataClassVersion, ref MobileSyncSyncType syncType, ref ulong deviceDataClassVersion, out IntPtr errorDescription) Parameters Type Name Description MobileSyncClientHandle client The mobilesync client System.Byte [] dataClass MobileSyncAnchorsHandle anchors The anchors required to exchange with the device. The anchors allow the device to tell if the synchronization information on the computer and device are consistent to determine what sync type is required. System.UInt64 computerDataClassVersion MobileSyncSyncType syncType System.UInt64 deviceDataClassVersion System.IntPtr errorDescription Returns Type Description MobileSyncError | Improve this Doc View Source mobilesync_start(MobileSyncClientHandle, Byte[], MobileSyncAnchorsHandle, UInt64, ref MobileSyncSyncType, ref UInt64, out String) Declaration public static MobileSyncError mobilesync_start(MobileSyncClientHandle client, byte[] dataClass, MobileSyncAnchorsHandle anchors, ulong computerDataClassVersion, ref MobileSyncSyncType syncType, ref ulong deviceDataClassVersion, out string errorDescription) Parameters Type Name Description MobileSyncClientHandle client System.Byte [] dataClass MobileSyncAnchorsHandle anchors System.UInt64 computerDataClassVersion MobileSyncSyncType syncType System.UInt64 deviceDataClassVersion System.String errorDescription Returns Type Description MobileSyncError"
  },
  "api/iMobileDevice.MobileSync.MobileSyncException.html": {
    "href": "api/iMobileDevice.MobileSync.MobileSyncException.html",
    "title": "Class MobileSyncException | imobiledevice-net API",
    "keywords": "Class MobileSyncException Inheritance System.Object System.Exception MobileSyncException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileSync Assembly : iMobileDevice-net.dll Syntax [Serializable] public class MobileSyncException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source MobileSyncException() Initializes a new instance of the MobileSyncException class. Declaration public MobileSyncException() | Improve this Doc View Source MobileSyncException(MobileSyncError) Declaration public MobileSyncException(MobileSyncError error) Parameters Type Name Description MobileSyncError error | Improve this Doc View Source MobileSyncException(MobileSyncError, String) Declaration public MobileSyncException(MobileSyncError error, string message) Parameters Type Name Description MobileSyncError error System.String message | Improve this Doc View Source MobileSyncException(SerializationInfo, StreamingContext) Initializes a new instance of the MobileSyncException class with serialized data. Declaration protected MobileSyncException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source MobileSyncException(String) Initializes a new instance of the MobileSyncException class with a specified error message. Declaration public MobileSyncException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source MobileSyncException(String, Exception) Initializes a new instance of the MobileSyncException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public MobileSyncException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual MobileSyncError ErrorCode { get; } Property Value Type Description MobileSyncError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.MobileImageMounter.MobileImageMounterException.html": {
    "href": "api/iMobileDevice.MobileImageMounter.MobileImageMounterException.html",
    "title": "Class MobileImageMounterException | imobiledevice-net API",
    "keywords": "Class MobileImageMounterException Inheritance System.Object System.Exception MobileImageMounterException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileImageMounter Assembly : iMobileDevice-net.dll Syntax [Serializable] public class MobileImageMounterException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source MobileImageMounterException() Initializes a new instance of the MobileImageMounterException class. Declaration public MobileImageMounterException() | Improve this Doc View Source MobileImageMounterException(MobileImageMounterError) Declaration public MobileImageMounterException(MobileImageMounterError error) Parameters Type Name Description MobileImageMounterError error | Improve this Doc View Source MobileImageMounterException(MobileImageMounterError, String) Declaration public MobileImageMounterException(MobileImageMounterError error, string message) Parameters Type Name Description MobileImageMounterError error System.String message | Improve this Doc View Source MobileImageMounterException(SerializationInfo, StreamingContext) Initializes a new instance of the MobileImageMounterException class with serialized data. Declaration protected MobileImageMounterException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source MobileImageMounterException(String) Initializes a new instance of the MobileImageMounterException class with a specified error message. Declaration public MobileImageMounterException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source MobileImageMounterException(String, Exception) Initializes a new instance of the MobileImageMounterException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public MobileImageMounterException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual MobileImageMounterError ErrorCode { get; } Property Value Type Description MobileImageMounterError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.MobileImageMounter.MobileImageMounterErrorExtensions.html": {
    "href": "api/iMobileDevice.MobileImageMounter.MobileImageMounterErrorExtensions.html",
    "title": "Class MobileImageMounterErrorExtensions | imobiledevice-net API",
    "keywords": "Class MobileImageMounterErrorExtensions Inheritance System.Object MobileImageMounterErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileImageMounter Assembly : iMobileDevice-net.dll Syntax public static class MobileImageMounterErrorExtensions Methods | Improve this Doc View Source IsError(MobileImageMounterError) Declaration public static bool IsError(this MobileImageMounterError value) Parameters Type Name Description MobileImageMounterError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(MobileImageMounterError) Declaration public static void ThrowOnError(this MobileImageMounterError value) Parameters Type Name Description MobileImageMounterError value | Improve this Doc View Source ThrowOnError(MobileImageMounterError, String) Declaration public static void ThrowOnError(this MobileImageMounterError value, string message) Parameters Type Name Description MobileImageMounterError value System.String message"
  },
  "api/iMobileDevice.MobileBackup.MobileBackupFlags.html": {
    "href": "api/iMobileDevice.MobileBackup.MobileBackupFlags.html",
    "title": "Enum MobileBackupFlags | imobiledevice-net API",
    "keywords": "Enum MobileBackupFlags Namespace : iMobileDevice.MobileBackup Assembly : iMobileDevice-net.dll Syntax public enum MobileBackupFlags Fields Name Description RestoreNotifySpringboard RestorePreserveCameraRoll RestorePreserveSettings"
  },
  "api/iMobileDevice.MobileBackup.MobileBackupException.html": {
    "href": "api/iMobileDevice.MobileBackup.MobileBackupException.html",
    "title": "Class MobileBackupException | imobiledevice-net API",
    "keywords": "Class MobileBackupException Inheritance System.Object System.Exception MobileBackupException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.MobileBackup Assembly : iMobileDevice-net.dll Syntax [Serializable] public class MobileBackupException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source MobileBackupException() Initializes a new instance of the MobileBackupException class. Declaration public MobileBackupException() | Improve this Doc View Source MobileBackupException(MobileBackupError) Declaration public MobileBackupException(MobileBackupError error) Parameters Type Name Description MobileBackupError error | Improve this Doc View Source MobileBackupException(MobileBackupError, String) Declaration public MobileBackupException(MobileBackupError error, string message) Parameters Type Name Description MobileBackupError error System.String message | Improve this Doc View Source MobileBackupException(SerializationInfo, StreamingContext) Initializes a new instance of the MobileBackupException class with serialized data. Declaration protected MobileBackupException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source MobileBackupException(String) Initializes a new instance of the MobileBackupException class with a specified error message. Declaration public MobileBackupException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source MobileBackupException(String, Exception) Initializes a new instance of the MobileBackupException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public MobileBackupException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual MobileBackupError ErrorCode { get; } Property Value Type Description MobileBackupError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.Mobileactivation.MobileactivationClientHandle.html": {
    "href": "api/iMobileDevice.Mobileactivation.MobileactivationClientHandle.html",
    "title": "Class MobileactivationClientHandle | imobiledevice-net API",
    "keywords": "Class MobileactivationClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid MobileactivationClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Mobileactivation Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class MobileactivationClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source MobileactivationClientHandle() Declaration protected MobileactivationClientHandle() | Improve this Doc View Source MobileactivationClientHandle(Boolean) Declaration protected MobileactivationClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static MobileactivationClientHandle Zero { get; } Property Value Type Description MobileactivationClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static MobileactivationClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description MobileactivationClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static MobileactivationClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description MobileactivationClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.Mobileactivation.MobileactivationApi.html": {
    "href": "api/iMobileDevice.Mobileactivation.MobileactivationApi.html",
    "title": "Class MobileactivationApi | imobiledevice-net API",
    "keywords": "Class MobileactivationApi Inheritance System.Object MobileactivationApi Implements IMobileactivationApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Mobileactivation Assembly : iMobileDevice-net.dll Syntax public class MobileactivationApi : IMobileactivationApi Constructors | Improve this Doc View Source MobileactivationApi(ILibiMobileDevice) Declaration public MobileactivationApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source mobileactivation_activate(MobileactivationClientHandle, PlistHandle) Activates the device with the given activation record. The activation record plist dictionary must be obtained using the activation protocol requesting from Apple's https webservice. Declaration public virtual MobileactivationError mobileactivation_activate(MobileactivationClientHandle client, PlistHandle activationRecord) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client PlistHandle activationRecord Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. | Improve this Doc View Source mobileactivation_activate_with_session(MobileactivationClientHandle, PlistHandle) Activates the device with the given activation record in 'session' mode. The activation record plist dictionary must be obtained using the activation protocol requesting from Apple's https webservice. Declaration public virtual MobileactivationError mobileactivation_activate_with_session(MobileactivationClientHandle client, PlistHandle activationRecord) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client PlistHandle activationRecord Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. | Improve this Doc View Source mobileactivation_client_free(IntPtr) Disconnects a mobileactivation client from the device and frees up the mobileactivation client data. Declaration public virtual MobileactivationError mobileactivation_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The mobileactivation client to disconnect and free. Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, MOBILEACTIVATION_E_INVALID_ARG when one of client or client->parent is invalid, or MOBILEACTIVATION_E_UNKNOWN_ERROR when the was an error freeing the parent property_list_service client. | Improve this Doc View Source mobileactivation_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out MobileactivationClientHandle) Connects to the mobileactivation service on the specified device. Declaration public virtual MobileactivationError mobileactivation_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out MobileactivationClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. MobileactivationClientHandle client Reference that will point to a newly allocated mobileactivation_client_t upon successful return. Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, MOBILEACTIVATION_E_INVALID_ARG when one of the parameters is invalid, or MOBILEACTIVATION_E_MUX_ERROR when the connection failed. | Improve this Doc View Source mobileactivation_client_start_service(iDeviceHandle, out MobileactivationClientHandle, String) Starts a new mobileactivation service on the specified device and connects to it. Declaration public virtual MobileactivationError mobileactivation_client_start_service(iDeviceHandle device, out MobileactivationClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. MobileactivationClientHandle client Pointer that will point to a newly allocated mobileactivation_client_t upon successful return. Must be freed using mobileactivation_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. | Improve this Doc View Source mobileactivation_create_activation_info(MobileactivationClientHandle, out PlistHandle) Retrieves the activation info required for device activation. Declaration public virtual MobileactivationError mobileactivation_create_activation_info(MobileactivationClientHandle client, out PlistHandle info) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client PlistHandle info Pointer to a plist_t variable that will be set to the activation info created by the mobileactivation service. The consumer is responsible for freeing the returned object using plist_free(). Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. | Improve this Doc View Source mobileactivation_create_activation_info_with_session(MobileactivationClientHandle, PlistHandle, out PlistHandle) Retrieves the activation info required for device activation in 'session' mode. This function expects a handshake result retrieved from https://albert.apple.com/deviceservies/drmHandshake with a blob provided by mobileactivation_create_activation_session_info(). Declaration public virtual MobileactivationError mobileactivation_create_activation_info_with_session(MobileactivationClientHandle client, PlistHandle handshakeResult, out PlistHandle info) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client PlistHandle handshakeResult PlistHandle info Pointer to a plist_t variable that will be set to the activation info created by the mobileactivation service. The consumer is responsible for freeing the returned object using plist_free(). Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. | Improve this Doc View Source mobileactivation_create_activation_session_info(MobileactivationClientHandle, out PlistHandle) Retrieves a session blob required for 'drmHandshake' via albert.apple.com. Declaration public virtual MobileactivationError mobileactivation_create_activation_session_info(MobileactivationClientHandle client, out PlistHandle blob) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client PlistHandle blob Pointer to a plist_t variable that will be set to the session blob created by the mobielactivation service. The consumer is responsible for freeing the returned object using plist_free(). Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. | Improve this Doc View Source mobileactivation_deactivate(MobileactivationClientHandle) Deactivates the device. Declaration public virtual MobileactivationError mobileactivation_deactivate(MobileactivationClientHandle client) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client Returns Type Description MobileactivationError | Improve this Doc View Source mobileactivation_get_activation_state(MobileactivationClientHandle, out PlistHandle) Retrieves the device's activation state. Declaration public virtual MobileactivationError mobileactivation_get_activation_state(MobileactivationClientHandle client, out PlistHandle state) Parameters Type Name Description MobileactivationClientHandle client The mobileactivation client. PlistHandle state Pointer to a plist_t variable that will be set to the activation state reported by the mobileactivation service. The consumer is responsible for freeing the returned object using plist_free(). Returns Type Description MobileactivationError MOBILEACTIVATION_E_SUCCESS on success, or an MOBILEACTIVATION_E_* error code otherwise. Implements IMobileactivationApi"
  },
  "api/iMobileDevice.Lockdown.LockdownPairRecordHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.Lockdown.LockdownPairRecordHandleDelegateMarshaler.html",
    "title": "Class LockdownPairRecordHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class LockdownPairRecordHandleDelegateMarshaler Inheritance System.Object LockdownPairRecordHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Lockdown Assembly : iMobileDevice-net.dll Syntax public class LockdownPairRecordHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.Lockdown.LockdownPairRecordHandle.html": {
    "href": "api/iMobileDevice.Lockdown.LockdownPairRecordHandle.html",
    "title": "Class LockdownPairRecordHandle | imobiledevice-net API",
    "keywords": "Class LockdownPairRecordHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid LockdownPairRecordHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Lockdown Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class LockdownPairRecordHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source LockdownPairRecordHandle() Declaration protected LockdownPairRecordHandle() | Improve this Doc View Source LockdownPairRecordHandle(Boolean) Declaration protected LockdownPairRecordHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static LockdownPairRecordHandle Zero { get; } Property Value Type Description LockdownPairRecordHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static LockdownPairRecordHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description LockdownPairRecordHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static LockdownPairRecordHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description LockdownPairRecordHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.InstallationProxy.InstallationProxyErrorExtensions.html": {
    "href": "api/iMobileDevice.InstallationProxy.InstallationProxyErrorExtensions.html",
    "title": "Class InstallationProxyErrorExtensions | imobiledevice-net API",
    "keywords": "Class InstallationProxyErrorExtensions Inheritance System.Object InstallationProxyErrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.InstallationProxy Assembly : iMobileDevice-net.dll Syntax public static class InstallationProxyErrorExtensions Methods | Improve this Doc View Source IsError(InstallationProxyError) Declaration public static bool IsError(this InstallationProxyError value) Parameters Type Name Description InstallationProxyError value Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(InstallationProxyError) Declaration public static void ThrowOnError(this InstallationProxyError value) Parameters Type Name Description InstallationProxyError value | Improve this Doc View Source ThrowOnError(InstallationProxyError, String) Declaration public static void ThrowOnError(this InstallationProxyError value, string message) Parameters Type Name Description InstallationProxyError value System.String message"
  },
  "api/iMobileDevice.InstallationProxy.InstallationProxyError.html": {
    "href": "api/iMobileDevice.InstallationProxy.InstallationProxyError.html",
    "title": "Enum InstallationProxyError | imobiledevice-net API",
    "keywords": "Enum InstallationProxyError Error Codes Namespace : iMobileDevice.InstallationProxy Assembly : iMobileDevice-net.dll Syntax public enum InstallationProxyError Fields Name Description AlreadyArchived ApiInternalError ApplicationAlreadyInstalled ApplicationMoveFailed ApplicationSandboxFailed ApplicationSinfCaptureFailed ApplicationVerificationFailed ArchiveDestructionFailed BreadcrumbFailed BreadcrumbUnlockFailed BundleVerificationFailed CarrierBundleCopyFailed CarrierBundleDirectoryCreationFailed CarrierBundleMissingSupportedSims CommCenterNotificationFailed ConnFailed ContainerCreationFailed ContainerP0wnFailed ContainerRemovalFailed DeviceFamilyNotSupported DeviceOsVersionTooLow DictCreationFailed EmbeddedProfileInstallFailed ExecutableTwiddleFailed ExistenceCheckFailed GeojsonCaptureFailed IncorrectArchitecture InstallMapUpdateFailed InstallProhibited InvalidArg ItunesArtworkCaptureFailed ItunesMetadataCaptureFailed LookupFailed ManifestCaptureFailed MapGenerationFailed MissingApplicationIdentifier MissingAttributeValue MissingBundleExecutable MissingBundleIdentifier MissingBundlePath MissingBundleVersion MissingCommand MissingContainer MissingContainerPath MissingPackagePath NewsstandArtworkCaptureFailed NotEntitled NotificationFailed OpFailed OpInProgress PackageExtractionFailed PackageInspectionFailed PackageMoveFailed PackagePatchFailed PathConversionFailed PlistError PluginCopyFailed ReceiveTimeout RestoreContainerFailed SeatbeltProfileRemovalFailed StageCreationFailed Success SymlinkFailed UninstallProhibited UnknownCommand UnknownError Extension Methods InstallationProxyErrorExtensions.ThrowOnError() InstallationProxyErrorExtensions.ThrowOnError(String) InstallationProxyErrorExtensions.IsError()"
  },
  "api/iMobileDevice.iDevice.iDeviceEventType.html": {
    "href": "api/iMobileDevice.iDevice.iDeviceEventType.html",
    "title": "Enum iDeviceEventType | imobiledevice-net API",
    "keywords": "Enum iDeviceEventType The event type for device add or removal Namespace : iMobileDevice.iDevice Assembly : iMobileDevice-net.dll Syntax public enum iDeviceEventType Fields Name Description DeviceAdd DevicePaired DeviceRemove"
  },
  "api/iMobileDevice.iDevice.iDeviceEventCallBack.html": {
    "href": "api/iMobileDevice.iDevice.iDeviceEventCallBack.html",
    "title": "Delegate iDeviceEventCallBack | imobiledevice-net API",
    "keywords": "Delegate iDeviceEventCallBack Namespace : iMobileDevice.iDevice Assembly : iMobileDevice-net.dll Syntax public delegate void iDeviceEventCallBack(ref iDeviceEvent event, IntPtr userData); Parameters Type Name Description iDeviceEvent event System.IntPtr userData"
  },
  "api/iMobileDevice.HouseArrest.HouseArrestApi.html": {
    "href": "api/iMobileDevice.HouseArrest.HouseArrestApi.html",
    "title": "Class HouseArrestApi | imobiledevice-net API",
    "keywords": "Class HouseArrestApi Inheritance System.Object HouseArrestApi Implements IHouseArrestApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.HouseArrest Assembly : iMobileDevice-net.dll Syntax public class HouseArrestApi : IHouseArrestApi Constructors | Improve this Doc View Source HouseArrestApi(ILibiMobileDevice) Declaration public HouseArrestApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source afc_client_new_from_house_arrest_client(HouseArrestClientHandle, out AfcClientHandle) Creates an AFC client using the given house_arrest client's connection allowing file access to a specific application directory requested by functions like house_arrest_request_vendor_documents(). Declaration public virtual AfcError afc_client_new_from_house_arrest_client(HouseArrestClientHandle client, out AfcClientHandle afcClient) Parameters Type Name Description HouseArrestClientHandle client The house_arrest client to use. AfcClientHandle afcClient Returns Type Description AfcError AFC_E_SUCCESS if the afc client was successfully created, AFC_E_INVALID_ARG if client is invalid or was already used to create an afc client, or an AFC_E_* error code returned by afc_client_new_with_service_client(). Remarks After calling this function the house_arrest client will go in an AFC mode that will only allow calling house_arrest_client_free(). Only call house_arrest_client_free() if all AFC operations have completed since it will close the connection. | Improve this Doc View Source house_arrest_client_free(IntPtr) Disconnects an house_arrest client from the device and frees up the house_arrest client data. Declaration public virtual HouseArrestError house_arrest_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The house_arrest client to disconnect and free. Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS on success, HOUSE_ARREST_E_INVALID_ARG when client is NULL, or an HOUSE_ARREST_E_* error code otherwise. Remarks After using afc_client_new_from_house_arrest_client(), make sure you call afc_client_free() before calling this function to ensure a proper cleanup. Do not call this function if you still need to perform AFC operations since it will close the connection. | Improve this Doc View Source house_arrest_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out HouseArrestClientHandle) Connects to the house_arrest service on the specified device. Declaration public virtual HouseArrestError house_arrest_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out HouseArrestClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. HouseArrestClientHandle client Pointer that will point to a newly allocated housearrest_client_t upon successful return. Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS on success, HOUSE_ARREST_E_INVALID_ARG when client is NULL, or an HOUSE_ARREST_E_* error code otherwise. | Improve this Doc View Source house_arrest_client_start_service(iDeviceHandle, out HouseArrestClientHandle, String) Starts a new house_arrest service on the specified device and connects to it. Declaration public virtual HouseArrestError house_arrest_client_start_service(iDeviceHandle device, out HouseArrestClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. HouseArrestClientHandle client Pointer that will point to a newly allocated house_arrest_client_t upon successful return. Must be freed using house_arrest_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS on success, or an HOUSE_ARREST_E_* error code otherwise. | Improve this Doc View Source house_arrest_get_result(HouseArrestClientHandle, out PlistHandle) Retrieves the result of a previously sent house_arrest_request_* request. Declaration public virtual HouseArrestError house_arrest_get_result(HouseArrestClientHandle client, out PlistHandle dict) Parameters Type Name Description HouseArrestClientHandle client The house_arrest client to use PlistHandle dict Pointer that will be set to a plist containing the result to the last performed operation. It holds a key 'Status' with the value 'Complete' on success or a key 'Error' with an error description as value. The caller is responsible for freeing the returned plist. Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS if a result plist was retrieved, HOUSE_ARREST_E_INVALID_ARG if client is invalid, HOUSE_ARREST_E_INVALID_MODE if the client is not in the correct mode, or HOUSE_ARREST_E_CONN_FAILED if a connection error occured. | Improve this Doc View Source house_arrest_send_command(HouseArrestClientHandle, String, String) Send a command to the connected house_arrest service. Calls house_arrest_send_request() internally. Declaration public virtual HouseArrestError house_arrest_send_command(HouseArrestClientHandle client, string command, string appid) Parameters Type Name Description HouseArrestClientHandle client The house_arrest client to use. System.String command The command to send. Currently, only VendContainer and VendDocuments are known. System.String appid The application identifier to pass along with the . Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS if the command was successfully sent, HOUSE_ARREST_E_INVALID_ARG if client, command, or appid is invalid, HOUSE_ARREST_E_INVALID_MODE if the client is not in the correct mode, or HOUSE_ARREST_E_CONN_FAILED if a connection error occured. Remarks If this function returns HOUSE_ARREST_E_SUCCESS it does not mean that the command was successful. To check for success or failure you need to call house_arrest_get_result(). | Improve this Doc View Source house_arrest_send_request(HouseArrestClientHandle, PlistHandle) Sends a generic request to the connected house_arrest service. Declaration public virtual HouseArrestError house_arrest_send_request(HouseArrestClientHandle client, PlistHandle dict) Parameters Type Name Description HouseArrestClientHandle client The house_arrest client to use. PlistHandle dict The request to send as a plist of type PLIST_DICT. Returns Type Description HouseArrestError HOUSE_ARREST_E_SUCCESS if the request was successfully sent, HOUSE_ARREST_E_INVALID_ARG if client or dict is invalid, HOUSE_ARREST_E_PLIST_ERROR if dict is not a plist of type PLIST_DICT, HOUSE_ARREST_E_INVALID_MODE if the client is not in the correct mode, or HOUSE_ARREST_E_CONN_FAILED if a connection error occured. Remarks If this function returns HOUSE_ARREST_E_SUCCESS it does not mean that the request was successful. To check for success or failure you need to call house_arrest_get_result(). Implements IHouseArrestApi"
  },
  "api/iMobileDevice.HeartBeat.HeartBeatClientHandle.html": {
    "href": "api/iMobileDevice.HeartBeat.HeartBeatClientHandle.html",
    "title": "Class HeartBeatClientHandle | imobiledevice-net API",
    "keywords": "Class HeartBeatClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid HeartBeatClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.HeartBeat Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class HeartBeatClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source HeartBeatClientHandle() Declaration protected HeartBeatClientHandle() | Improve this Doc View Source HeartBeatClientHandle(Boolean) Declaration protected HeartBeatClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static HeartBeatClientHandle Zero { get; } Property Value Type Description HeartBeatClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static HeartBeatClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description HeartBeatClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static HeartBeatClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description HeartBeatClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.FileRelay.FileRelayClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.FileRelay.FileRelayClientHandleDelegateMarshaler.html",
    "title": "Class FileRelayClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class FileRelayClientHandleDelegateMarshaler Inheritance System.Object FileRelayClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.FileRelay Assembly : iMobileDevice-net.dll Syntax public class FileRelayClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.DiagnosticsRelay.DiagnosticsRelayException.html": {
    "href": "api/iMobileDevice.DiagnosticsRelay.DiagnosticsRelayException.html",
    "title": "Class DiagnosticsRelayException | imobiledevice-net API",
    "keywords": "Class DiagnosticsRelayException Inheritance System.Object System.Exception DiagnosticsRelayException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : iMobileDevice.DiagnosticsRelay Assembly : iMobileDevice-net.dll Syntax [Serializable] public class DiagnosticsRelayException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source DiagnosticsRelayException() Initializes a new instance of the DiagnosticsRelayException class. Declaration public DiagnosticsRelayException() | Improve this Doc View Source DiagnosticsRelayException(DiagnosticsRelayError) Declaration public DiagnosticsRelayException(DiagnosticsRelayError error) Parameters Type Name Description DiagnosticsRelayError error | Improve this Doc View Source DiagnosticsRelayException(DiagnosticsRelayError, String) Declaration public DiagnosticsRelayException(DiagnosticsRelayError error, string message) Parameters Type Name Description DiagnosticsRelayError error System.String message | Improve this Doc View Source DiagnosticsRelayException(SerializationInfo, StreamingContext) Initializes a new instance of the DiagnosticsRelayException class with serialized data. Declaration protected DiagnosticsRelayException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source DiagnosticsRelayException(String) Initializes a new instance of the DiagnosticsRelayException class with a specified error message. Declaration public DiagnosticsRelayException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source DiagnosticsRelayException(String, Exception) Initializes a new instance of the DiagnosticsRelayException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public DiagnosticsRelayException(string message, Exception inner) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception inner The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ErrorCode Gets the error code that represents the error. Declaration public virtual DiagnosticsRelayError ErrorCode { get; } Property Value Type Description DiagnosticsRelayError Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/iMobileDevice.DebugServer.html": {
    "href": "api/iMobileDevice.DebugServer.html",
    "title": "Namespace iMobileDevice.DebugServer | imobiledevice-net API",
    "keywords": "Namespace iMobileDevice.DebugServer Classes DebugServerApi DebugServerClientHandle DebugServerClientHandleDelegateMarshaler DebugServerCommandHandle DebugServerCommandHandleDelegateMarshaler DebugServerErrorExtensions DebugServerException DebugServerNativeMethods Interfaces IDebugServerApi Enums DebugServerError Error Codes"
  },
  "api/iMobileDevice.DebugServer.DebugServerCommandHandle.html": {
    "href": "api/iMobileDevice.DebugServer.DebugServerCommandHandle.html",
    "title": "Class DebugServerCommandHandle | imobiledevice-net API",
    "keywords": "Class DebugServerCommandHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid DebugServerCommandHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.DebugServer Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class DebugServerCommandHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source DebugServerCommandHandle() Declaration protected DebugServerCommandHandle() | Improve this Doc View Source DebugServerCommandHandle(Boolean) Declaration protected DebugServerCommandHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static DebugServerCommandHandle Zero { get; } Property Value Type Description DebugServerCommandHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static DebugServerCommandHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description DebugServerCommandHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static DebugServerCommandHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description DebugServerCommandHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.Afc.AfcNativeMethods.html": {
    "href": "api/iMobileDevice.Afc.AfcNativeMethods.html",
    "title": "Class AfcNativeMethods | imobiledevice-net API",
    "keywords": "Class AfcNativeMethods Inheritance System.Object AfcNativeMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Afc Assembly : iMobileDevice-net.dll Syntax public class AfcNativeMethods Methods afc_client_free(IntPtr) Frees up an AFC client. If the connection was created by the client itself, the connection will be closed. Declaration public static AfcError afc_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The client to free. Returns Type Description AfcError afc_client_new(iDeviceHandle, LockdownServiceDescriptorHandle, out AfcClientHandle) Makes a connection to the AFC service on the device. Declaration public static AfcError afc_client_new(iDeviceHandle device, LockdownServiceDescriptorHandle service, out AfcClientHandle client) Parameters Type Name Description iDeviceHandle device The device to connect to. LockdownServiceDescriptorHandle service The service descriptor returned by lockdownd_start_service. AfcClientHandle client Pointer that will be set to a newly allocated afc_client_t upon successful return. Returns Type Description AfcError AFC_E_SUCCESS on success, AFC_E_INVALID_ARG if device or service is invalid, AFC_E_MUX_ERROR if the connection cannot be established, or AFC_E_NO_MEM if there is a memory allocation problem. afc_client_start_service(iDeviceHandle, out AfcClientHandle, String) Starts a new AFC service on the specified device and connects to it. Declaration public static AfcError afc_client_start_service(iDeviceHandle device, out AfcClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to connect to. AfcClientHandle client Pointer that will point to a newly allocated afc_client_t upon successful return. Must be freed using afc_client_free() after use. System.String label The label to use for communication. Usually the program name. Pass NULL to disable sending the label in requests to lockdownd. Returns Type Description AfcError AFC_E_SUCCESS on success, or an AFC_E_* error code otherwise. afc_dictionary_free(IntPtr) Frees up a char dictionary as returned by some AFC functions. Declaration public static AfcError afc_dictionary_free(IntPtr dictionary) Parameters Type Name Description System.IntPtr dictionary The char array terminated by an empty string. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. afc_file_close(AfcClientHandle, UInt64) Closes a file on the device. Declaration public static AfcError afc_file_close(AfcClientHandle client, ulong handle) Parameters Type Name Description AfcClientHandle client The client to close the file with. System.UInt64 handle File handle of a previously opened file. Returns Type Description AfcError afc_file_lock(AfcClientHandle, UInt64, AfcLockOp) Locks or unlocks a file on the device. Makes use of flock on the device. Declaration public static AfcError afc_file_lock(AfcClientHandle client, ulong handle, AfcLockOp operation) Parameters Type Name Description AfcClientHandle client The client to lock the file with. System.UInt64 handle File handle of a previously opened file. AfcLockOp operation the lock or unlock operation to perform, this is one of AFC_LOCK_SH (shared lock), AFC_LOCK_EX (exclusive lock), or AFC_LOCK_UN (unlock). Returns Type Description AfcError afc_file_open(AfcClientHandle, String, AfcFileMode, ref UInt64) Opens a file on the device. Declaration public static AfcError afc_file_open(AfcClientHandle client, string filename, AfcFileMode fileMode, ref ulong handle) Parameters Type Name Description AfcClientHandle client The client to use to open the file. System.String filename The file to open. (must be a fully-qualified path) AfcFileMode fileMode System.UInt64 handle Pointer to a uint64_t that will hold the handle of the file Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. afc_file_read(AfcClientHandle, UInt64, Byte[], UInt32, ref UInt32) Attempts to the read the given number of bytes from the given file. Declaration public static AfcError afc_file_read(AfcClientHandle client, ulong handle, byte[] data, uint length, ref uint bytesRead) Parameters Type Name Description AfcClientHandle client The relevant AFC client System.UInt64 handle File handle of a previously opened file System.Byte [] data The pointer to the memory region to store the read data System.UInt32 length The number of bytes to read System.UInt32 bytesRead Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. afc_file_seek(AfcClientHandle, UInt64, Int64, Int32) Seeks to a given position of a pre-opened file on the device. Declaration public static AfcError afc_file_seek(AfcClientHandle client, ulong handle, long offset, int whence) Parameters Type Name Description AfcClientHandle client The client to use to seek to the position. System.UInt64 handle File handle of a previously opened. System.Int64 offset Seek offset. System.Int32 whence Seeking direction, one of SEEK_SET, SEEK_CUR, or SEEK_END. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. afc_file_tell(AfcClientHandle, UInt64, ref UInt64) Returns current position in a pre-opened file on the device. Declaration public static AfcError afc_file_tell(AfcClientHandle client, ulong handle, ref ulong position) Parameters Type Name Description AfcClientHandle client The client to use. System.UInt64 handle File handle of a previously opened file. System.UInt64 position Position in bytes of indicator Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. afc_file_truncate(AfcClientHandle, UInt64, UInt64) Sets the size of a file on the device. Declaration public static AfcError afc_file_truncate(AfcClientHandle client, ulong handle, ulong newsize) Parameters Type Name Description AfcClientHandle client The client to use to set the file size. System.UInt64 handle File handle of a previously opened file. System.UInt64 newsize The size to set the file to. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. Remarks This function is more akin to ftruncate than truncate, and truncate calls would have to open the file before calling this, sadly. afc_file_write(AfcClientHandle, UInt64, Byte[], UInt32, ref UInt32) Writes a given number of bytes to a file. Declaration public static AfcError afc_file_write(AfcClientHandle client, ulong handle, byte[] data, uint length, ref uint bytesWritten) Parameters Type Name Description AfcClientHandle client The client to use to write to the file. System.UInt64 handle File handle of previously opened file. System.Byte [] data The data to write to the file. System.UInt32 length How much data to write. System.UInt32 bytesWritten Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_get_device_info(AfcClientHandle, out ReadOnlyCollection<String>) Declaration public static AfcError afc_get_device_info(AfcClientHandle client, out ReadOnlyCollection<string> deviceInformation) Parameters Type Name Description AfcClientHandle client System.Collections.ObjectModel.ReadOnlyCollection < System.String > deviceInformation Returns Type Description AfcError afc_get_device_info(AfcClientHandle, out IntPtr) Get device information for a connected client. The device information returned is the device model as well as the free space, the total capacity and blocksize on the accessed disk partition. Declaration public static AfcError afc_get_device_info(AfcClientHandle client, out IntPtr deviceInformation) Parameters Type Name Description AfcClientHandle client The client to get device info for. System.IntPtr deviceInformation Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. afc_get_device_info_key(AfcClientHandle, String, out IntPtr) Get a specific key of the device info list for a client connection. Known key values are: Model, FSTotalBytes, FSFreeBytes and FSBlockSize. This is a helper function for afc_get_device_info(). Declaration public static AfcError afc_get_device_info_key(AfcClientHandle client, string key, out IntPtr value) Parameters Type Name Description AfcClientHandle client The client to get device info for. System.String key The key to get the value of. System.IntPtr value The value for the key if successful or NULL otherwise. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_get_device_info_key(AfcClientHandle, String, out String) Declaration public static AfcError afc_get_device_info_key(AfcClientHandle client, string key, out string value) Parameters Type Name Description AfcClientHandle client System.String key System.String value Returns Type Description AfcError | Improve this Doc View Source afc_get_file_info(AfcClientHandle, String, out ReadOnlyCollection<String>) Declaration public static AfcError afc_get_file_info(AfcClientHandle client, string filename, out ReadOnlyCollection<string> fileInformation) Parameters Type Name Description AfcClientHandle client System.String filename System.Collections.ObjectModel.ReadOnlyCollection < System.String > fileInformation Returns Type Description AfcError afc_get_file_info(AfcClientHandle, String, out IntPtr) Gets information about a specific file. Declaration public static AfcError afc_get_file_info(AfcClientHandle client, string filename, out IntPtr fileInformation) Parameters Type Name Description AfcClientHandle client The client to use to get the information of the file. System.String filename The fully-qualified path to the file. System.IntPtr fileInformation Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. afc_make_directory(AfcClientHandle, String) Creates a directory on the device. Declaration public static AfcError afc_make_directory(AfcClientHandle client, string path) Parameters Type Name Description AfcClientHandle client The client to use to make a directory. System.String path The directory's path. (must be a fully-qualified path, I assume all other mkdir restrictions apply as well) Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. afc_make_link(AfcClientHandle, AfcLinkType, String, String) Creates a hard link or symbolic link on the device. Declaration public static AfcError afc_make_link(AfcClientHandle client, AfcLinkType linktype, string target, string linkname) Parameters Type Name Description AfcClientHandle client The client to use for making a link AfcLinkType linktype 1 = hard link, 2 = symlink System.String target The file to be linked. System.String linkname The name of link. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. | Improve this Doc View Source afc_read_directory(AfcClientHandle, String, out ReadOnlyCollection<String>) Declaration public static AfcError afc_read_directory(AfcClientHandle client, string path, out ReadOnlyCollection<string> directoryInformation) Parameters Type Name Description AfcClientHandle client System.String path System.Collections.ObjectModel.ReadOnlyCollection < System.String > directoryInformation Returns Type Description AfcError afc_read_directory(AfcClientHandle, String, out IntPtr) Gets a directory listing of the directory requested. Declaration public static AfcError afc_read_directory(AfcClientHandle client, string path, out IntPtr directoryInformation) Parameters Type Name Description AfcClientHandle client The client to get a directory listing from. System.String path The directory for listing. (must be a fully-qualified path) System.IntPtr directoryInformation Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. afc_remove_path(AfcClientHandle, String) Deletes a file or directory. Declaration public static AfcError afc_remove_path(AfcClientHandle client, string path) Parameters Type Name Description AfcClientHandle client The client to use. System.String path The path to delete. (must be a fully-qualified path) Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. afc_remove_path_and_contents(AfcClientHandle, String) Deletes a file or directory including possible contents. Declaration public static AfcError afc_remove_path_and_contents(AfcClientHandle client, string path) Parameters Type Name Description AfcClientHandle client The client to use. System.String path The path to delete. (must be a fully-qualified path) Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. Remarks Only available in iOS 6 and later. afc_rename_path(AfcClientHandle, String, String) Renames a file or directory on the device. Declaration public static AfcError afc_rename_path(AfcClientHandle client, string from, string to) Parameters Type Name Description AfcClientHandle client The client to have rename. System.String from The name to rename from. (must be a fully-qualified path) System.String to The new name. (must also be a fully-qualified path) Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. afc_set_file_time(AfcClientHandle, String, UInt64) Sets the modification time of a file on the device. Declaration public static AfcError afc_set_file_time(AfcClientHandle client, string path, ulong mtime) Parameters Type Name Description AfcClientHandle client The client to use to set the file size. System.String path Path of the file for which the modification time should be set. System.UInt64 mtime The modification time to set in nanoseconds since epoch. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value. afc_truncate(AfcClientHandle, String, UInt64) Sets the size of a file on the device without prior opening it. Declaration public static AfcError afc_truncate(AfcClientHandle client, string path, ulong newsize) Parameters Type Name Description AfcClientHandle client The client to use to set the file size. System.String path The path of the file to be truncated. System.UInt64 newsize The size to set the file to. Returns Type Description AfcError AFC_E_SUCCESS on success or an AFC_E_* error value."
  },
  "api/iMobileDevice.Restore.RestoreClientHandleDelegateMarshaler.html": {
    "href": "api/iMobileDevice.Restore.RestoreClientHandleDelegateMarshaler.html",
    "title": "Class RestoreClientHandleDelegateMarshaler | imobiledevice-net API",
    "keywords": "Class RestoreClientHandleDelegateMarshaler Inheritance System.Object RestoreClientHandleDelegateMarshaler Implements System.Runtime.InteropServices.ICustomMarshaler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Restore Assembly : iMobileDevice-net.dll Syntax public class RestoreClientHandleDelegateMarshaler : ICustomMarshaler Methods | Improve this Doc View Source CleanUpManagedData(Object) Declaration public void CleanUpManagedData(object managedObject) Parameters Type Name Description System.Object managedObject | Improve this Doc View Source CleanUpNativeData(IntPtr) Declaration public void CleanUpNativeData(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData | Improve this Doc View Source GetInstance(String) Declaration public static ICustomMarshaler GetInstance(string cookie) Parameters Type Name Description System.String cookie Returns Type Description System.Runtime.InteropServices.ICustomMarshaler | Improve this Doc View Source GetNativeDataSize() Declaration public int GetNativeDataSize() Returns Type Description System.Int32 | Improve this Doc View Source MarshalManagedToNative(Object) Declaration public IntPtr MarshalManagedToNative(object managedObject) Parameters Type Name Description System.Object managedObject Returns Type Description System.IntPtr | Improve this Doc View Source MarshalNativeToManaged(IntPtr) Declaration public object MarshalNativeToManaged(IntPtr nativeData) Parameters Type Name Description System.IntPtr nativeData Returns Type Description System.Object Implements System.Runtime.InteropServices.ICustomMarshaler"
  },
  "api/iMobileDevice.Restore.RestoreClientHandle.html": {
    "href": "api/iMobileDevice.Restore.RestoreClientHandle.html",
    "title": "Class RestoreClientHandle | imobiledevice-net API",
    "keywords": "Class RestoreClientHandle Inheritance System.Object System.Runtime.ConstrainedExecution.CriticalFinalizerObject System.Runtime.InteropServices.SafeHandle Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid RestoreClientHandle Implements System.IDisposable Inherited Members Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid System.Runtime.InteropServices.SafeHandle.handle System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr) System.Runtime.InteropServices.SafeHandle.DangerousGetHandle() System.Runtime.InteropServices.SafeHandle.Close() System.Runtime.InteropServices.SafeHandle.Dispose() System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean) System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid() System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean) System.Runtime.InteropServices.SafeHandle.DangerousRelease() System.Runtime.InteropServices.SafeHandle.IsClosed System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Restore Assembly : iMobileDevice-net.dll Syntax [SecurityPermission(SecurityAction.InheritanceDemand, UnmanagedCode = true)] [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)] public class RestoreClientHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable Constructors | Improve this Doc View Source RestoreClientHandle() Declaration protected RestoreClientHandle() | Improve this Doc View Source RestoreClientHandle(Boolean) Declaration protected RestoreClientHandle(bool ownsHandle) Parameters Type Name Description System.Boolean ownsHandle Properties | Improve this Doc View Source Api Declaration public ILibiMobileDevice Api { get; set; } Property Value Type Description ILibiMobileDevice | Improve this Doc View Source Zero Declaration public static RestoreClientHandle Zero { get; } Property Value Type Description RestoreClientHandle Methods | Improve this Doc View Source DangerousCreate(IntPtr) Declaration public static RestoreClientHandle DangerousCreate(IntPtr unsafeHandle) Parameters Type Name Description System.IntPtr unsafeHandle Returns Type Description RestoreClientHandle | Improve this Doc View Source DangerousCreate(IntPtr, Boolean) Declaration public static RestoreClientHandle DangerousCreate(IntPtr unsafeHandle, bool ownsHandle) Parameters Type Name Description System.IntPtr unsafeHandle System.Boolean ownsHandle Returns Type Description RestoreClientHandle | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ReleaseHandle() Declaration protected override bool ReleaseHandle() Returns Type Description System.Boolean Overrides System.Runtime.InteropServices.SafeHandle.ReleaseHandle() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/iMobileDevice.Restore.RestoreApi.html": {
    "href": "api/iMobileDevice.Restore.RestoreApi.html",
    "title": "Class RestoreApi | imobiledevice-net API",
    "keywords": "Class RestoreApi Inheritance System.Object RestoreApi Implements IRestoreApi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : iMobileDevice.Restore Assembly : iMobileDevice-net.dll Syntax public class RestoreApi : IRestoreApi Constructors | Improve this Doc View Source RestoreApi(ILibiMobileDevice) Declaration public RestoreApi(ILibiMobileDevice parent) Parameters Type Name Description ILibiMobileDevice parent Properties | Improve this Doc View Source Parent Declaration public ILibiMobileDevice Parent { get; } Property Value Type Description ILibiMobileDevice Methods | Improve this Doc View Source restored_client_free(IntPtr) Closes the restored client session if one is running and frees up the restored_client struct. Declaration public virtual RestoreError restored_client_free(IntPtr client) Parameters Type Name Description System.IntPtr client The restore client Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL | Improve this Doc View Source restored_client_new(iDeviceHandle, out RestoreClientHandle, String) Creates a new restored client for the device. Declaration public virtual RestoreError restored_client_new(iDeviceHandle device, out RestoreClientHandle client, string label) Parameters Type Name Description iDeviceHandle device The device to create a restored client for RestoreClientHandle client The pointer to the location of the new restored_client System.String label The label to use for communication. Usually the program name. Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL | Improve this Doc View Source restored_client_set_label(RestoreClientHandle, String) Sets the label to send for requests to restored. Declaration public virtual void restored_client_set_label(RestoreClientHandle client, string label) Parameters Type Name Description RestoreClientHandle client The restore client System.String label The label to set or NULL to disable sending a label | Improve this Doc View Source restored_get_value(RestoreClientHandle, String, out PlistHandle) Retrieves a value from information plist specified by a key. Declaration public virtual RestoreError restored_get_value(RestoreClientHandle client, string key, out PlistHandle value) Parameters Type Name Description RestoreClientHandle client An initialized restored client. System.String key The key name to request or NULL to query for all keys PlistHandle value A plist node representing the result value node Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL, RESTORE_E_PLIST_ERROR if value for key can't be found | Improve this Doc View Source restored_goodbye(RestoreClientHandle) Sends the Goodbye request to restored signaling the end of communication. Declaration public virtual RestoreError restored_goodbye(RestoreClientHandle client) Parameters Type Name Description RestoreClientHandle client The restore client Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL, RESTORE_E_PLIST_ERROR if the device did not acknowledge the request | Improve this Doc View Source restored_query_type(RestoreClientHandle, out String, ref UInt64) Query the type of the service daemon. Depending on whether the device is queried in normal mode or restore mode, different types will be returned. Declaration public virtual RestoreError restored_query_type(RestoreClientHandle client, out string type, ref ulong version) Parameters Type Name Description RestoreClientHandle client The restored client System.String type The type returned by the service daemon. Pass NULL to ignore. System.UInt64 version The restore protocol version. Pass NULL to ignore. Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL | Improve this Doc View Source restored_query_value(RestoreClientHandle, String, out PlistHandle) Queries a value from the device specified by a key. Declaration public virtual RestoreError restored_query_value(RestoreClientHandle client, string key, out PlistHandle value) Parameters Type Name Description RestoreClientHandle client An initialized restored client. System.String key The key name to request PlistHandle value A plist node representing the result value node Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client is NULL, RESTORE_E_PLIST_ERROR if value for key can't be found | Improve this Doc View Source restored_reboot(RestoreClientHandle) Requests device to reboot. Declaration public virtual RestoreError restored_reboot(RestoreClientHandle client) Parameters Type Name Description RestoreClientHandle client The restored client Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG if a parameter is NULL | Improve this Doc View Source restored_receive(RestoreClientHandle, out PlistHandle) Receives a plist from restored. Declaration public virtual RestoreError restored_receive(RestoreClientHandle client, out PlistHandle plist) Parameters Type Name Description RestoreClientHandle client The restored client PlistHandle plist The plist to store the received data Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client or plist is NULL | Improve this Doc View Source restored_send(RestoreClientHandle, PlistHandle) Sends a plist to restored. Declaration public virtual RestoreError restored_send(RestoreClientHandle client, PlistHandle plist) Parameters Type Name Description RestoreClientHandle client The restored client PlistHandle plist The plist to send Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG when client or plist is NULL Remarks This function is low-level and should only be used if you need to send a new type of message. | Improve this Doc View Source restored_start_restore(RestoreClientHandle, PlistHandle, UInt64) Requests to start a restore and retrieve it's port on success. Declaration public virtual RestoreError restored_start_restore(RestoreClientHandle client, PlistHandle options, ulong version) Parameters Type Name Description RestoreClientHandle client The restored client PlistHandle options PLIST_DICT with options for the restore process or NULL System.UInt64 version the restore protocol version, see restored_query_type() Returns Type Description RestoreError RESTORE_E_SUCCESS on success, RESTORE_E_INVALID_ARG if a parameter is NULL, RESTORE_E_START_RESTORE_FAILED if the request fails Implements IRestoreApi"
  },
  "index.html": {
    "href": "index.html",
    "title": "imobiledevice-net: A C# API for working with iOS devices | imobiledevice-net API",
    "keywords": "imobiledevice-net: A C# API for working with iOS devices"
  }
}